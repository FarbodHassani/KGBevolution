(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1644792,      29511]
NotebookOptionsPosition[   1640615,      29454]
NotebookOutlinePosition[   1640974,      29470]
CellTagsIndexPosition[   1640931,      29467]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"**", 
    RowBox[{"*", "Scalar", " ", "field", " ", "equaition"}]}], 
   "*************)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "Background"}], " ", 
    "In", " ", 
    RowBox[{
     RowBox[{"case", "!"}], "**", "**", "**"}]}], "**********)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "difference", " ", "here", " ", "is", " ", "we", " ", "do", 
    " ", "not", " ", "multiply", " ", "to", " ", 
    RowBox[{"\[CapitalEta]", "[", "a", "]"}], "\[Pi]", " ", "we", " ", "have",
     " ", "instead", " ", 
    RowBox[{"H", "[", "1", "]"}], "\[Pi]", " ", "so", " ", "does", " ", "not",
     " ", "change", " ", "in", " ", 
    RowBox[{"time", "!"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", 
     RowBox[{"-", "0.9"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cs", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"H0", "=", "0.00022593979933110373"}], "*)"}], " ", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"2997.92458", " ", "100"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{"100", " ", 
      RowBox[{"h", "/", "c"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "0.67556"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Omegab", "=", 
     RowBox[{
      RowBox[{"0.022032", "/", "h"}], "/", "h"}]}], ";", 
    RowBox[{"Omegacdm", "=", 
     RowBox[{
      RowBox[{"0.12038", "/", "h"}], "/", "h"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Omegam", "=", 
     RowBox[{"Omegab", "+", "Omegacdm"}]}], ";", 
    RowBox[{"OmegaLambda", "=", "0.0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Omegarad", "=", 
     RowBox[{"9.16681", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]]}]}], ";", 
    RowBox[{"Omegakessence", "=", 
     RowBox[{"1.", "-", "Omegam", "-", "Omegarad"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hubb", "[", "a_", "]"}], ":=", 
     RowBox[{"H0", " ", "a", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"Omegam", " ", 
         SuperscriptBox["a", 
          RowBox[{"-", "3"}]]}], "+", 
        RowBox[{"Omegarad", "  ", 
         SuperscriptBox["a", 
          RowBox[{"-", "4"}]]}], "+", "OmegaLambda", "+", 
        RowBox[{"Omegakessence", " ", 
         SuperscriptBox["a", 
          RowBox[{
           RowBox[{"-", "3"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", "w"}], ")"}]}]]}]}]]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"LogLogPlot", "[", 
     RowBox[{
      RowBox[{"Hubb", "[", "a", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"1.", "/", 
         RowBox[{"(", 
          RowBox[{"1.", "+", "100"}], ")"}]}], ",", "1"}], "}"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Eq1II", "=", 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["cs", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "-", 
          RowBox[{
           SuperscriptBox["H", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
        RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"H", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", " ", 
           RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["cs", "2"], " ", 
           RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}]}]}], ")"}]}], " ", 
       "+", 
       RowBox[{
        SuperscriptBox["\[Zeta]", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["cs", "2"], " ", 
        RowBox[{
         SuperscriptBox["\[CapitalPhi]", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["cs", "2"], " ", 
        SuperscriptBox["kwave", "2"], " ", 
        RowBox[{"piC", "[", "\[Tau]", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Eq2II", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"piC", "'"}], "[", "\[Tau]", "]"}], "-", " ", 
       RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}], "+", 
       RowBox[{
        RowBox[{"H", "[", "\[Tau]", "]"}], 
        RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
       RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Trivial", " ", 
     RowBox[{"equation", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq1II", "=", " ", 
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["cs", "2"], 
       RowBox[{"(", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "-", 
         RowBox[{
          SuperscriptBox["H", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
       RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"H", "[", "\[Tau]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"w", " ", 
         RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}], ")"}]}], " ", "+", 
      RowBox[{
       SuperscriptBox["\[Zeta]", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}], "+", 
      RowBox[{
       SuperscriptBox["cs", "2"], " ", 
       SuperscriptBox["kwave", "2"], " ", 
       RowBox[{"piC", "[", "\[Tau]", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq2II", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"piC", "'"}], "[", "\[Tau]", "]"}], "+", 
      RowBox[{
       RowBox[{"H", "[", "\[Tau]", "]"}], 
       RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", " ", 
      RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Solving", " ", "the", " ", "field", " ", "only", " ", "equation"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}], "=", "0"}], ";"}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], "=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq1I", "=", 
     RowBox[{"Eq1II", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"piC", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"piC", "[", 
            RowBox[{"a", "[", "#", "]"}], "]"}], "&"}], ")"}]}], ",", 
        RowBox[{"\[Zeta]", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Zeta]", "[", 
            RowBox[{"a", "[", "#", "]"}], "]"}], "&"}], ")"}]}]}], " ", 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq2I", "=", 
     RowBox[{"Eq2II", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"piC", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"piC", "[", 
            RowBox[{"a", "[", "#", "]"}], "]"}], "&"}], ")"}]}], ",", 
        RowBox[{"\[Zeta]", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Zeta]", "[", 
            RowBox[{"a", "[", "#", "]"}], "]"}], "&"}], ")"}]}]}], " ", 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", "''"}], "[", "\[Tau]", "]"}], "=", 
     RowBox[{
      RowBox[{"a", "[", "\[Tau]", "]"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "+", 
        RowBox[{
         RowBox[{"H", "'"}], "[", "\[Tau]", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", "'"}], "[", "\[Tau]", "]"}], "=", 
     RowBox[{
      RowBox[{"a", "[", "\[Tau]", "]"}], 
      RowBox[{"H", "[", "\[Tau]", "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"H", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"Hubb", "[", 
      RowBox[{"a", "[", "\[Tau]", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Field", " ", "equation", " ", "in", " ", "terms", " ", "of", " ", 
     "scale", " ", 
     RowBox[{"factor", "!"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq1", ":=", 
     RowBox[{"Eq1I", "/.", 
      RowBox[{
       RowBox[{"a", "[", "\[Tau]", "]"}], "\[RuleDelayed]", "a"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq2", ":=", 
     RowBox[{"Eq2I", "/.", 
      RowBox[{
       RowBox[{"a", "[", "\[Tau]", "]"}], "\[RuleDelayed]", "a"}]}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
   3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
   3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
   3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
   3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
   3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
   3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
   3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
   3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
   3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
   3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
   3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
   3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
   3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
   3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
   3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
   3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
   3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
   3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
   3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
   3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
   3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
   3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
   3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
   3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
   3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
   3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
   3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
   3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
   3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
   3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
   3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
   3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
   3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
   3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
   3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
   3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
   3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
   3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
   3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
   3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
   3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
   3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
   3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
   3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
   3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
   3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
   3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
   3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
   3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
   3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
   3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
   3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
   3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
   3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
   3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
   3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
   3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
   3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
   3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
   3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
   3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
   3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
   3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
   3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
   3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
   3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
   3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
   3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
   3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
   3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
   3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
   3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
   3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
   3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
   3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
   3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
   3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
   3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
   3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
   3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
   3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
   3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
   3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
   3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
   3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
   3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
   3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
   3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
   3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
   3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
   3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
   3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
   3.7352971834201117`*^9, 3.7352972215902157`*^9}, {3.73598066087808*^9, 
   3.735980683558736*^9}, {3.735982701409083*^9, 3.735982722979671*^9}, {
   3.7359898364984417`*^9, 3.735989860821068*^9}, {3.7359942581647882`*^9, 
   3.735994270382619*^9}, 3.735996823468211*^9, {3.735997134764554*^9, 
   3.735997142297779*^9}, {3.7359974920564938`*^9, 3.7359975233592253`*^9}, 
   3.735999449903493*^9, 3.736000140681826*^9, 3.7360001713080387`*^9, 
   3.736000358609771*^9, 3.7360005010609903`*^9, 3.7360008608424187`*^9, {
   3.736001474891013*^9, 3.736001478396699*^9}, 3.7360016791081457`*^9, 
   3.736002175438101*^9, 3.736002799977482*^9, 3.7360030830868673`*^9, {
   3.736008605369732*^9, 3.7360086058368387`*^9}, 3.736008828097674*^9, 
   3.7360088778473463`*^9, 3.7360090870899982`*^9, {3.736009190973228*^9, 
   3.736009236934987*^9}, 3.73600939643753*^9, 3.736009697086809*^9, 
   3.73601007884759*^9, {3.736056618942149*^9, 3.736056642204022*^9}, 
   3.736056895170587*^9, {3.736057197810547*^9, 3.736057200872541*^9}, 
   3.73605746477444*^9, {3.736059369771353*^9, 3.736059382100472*^9}, {
   3.736059524778494*^9, 3.7360595369040213`*^9}, 3.7360597520004063`*^9, {
   3.7360612447349043`*^9, 3.73606127877092*^9}, {3.736061322041613*^9, 
   3.736061352083633*^9}, {3.736067909257421*^9, 3.73606795926725*^9}, {
   3.7361643573553762`*^9, 
   3.736164367731308*^9}},ExpressionUUID->"b9555473-15b0-405e-bad4-\
d386c6f55d0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "IC"}], " ", "read", 
    " ", "fromt", " ", "the", " ", "file"}], "***)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Class", " ", "file", " ", 
    RowBox[{"columns", ":", " ", 
     RowBox[{"#", " ", "1"}], ":", 
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{"h", "/", "Mpc"}], ")"}], " ", "2"}], ":", 
     RowBox[{"d_kess", "_pi", " ", "3"}], ":", 
     RowBox[{"t_kess", "_zeta", " ", "4"}], ":", 
     RowBox[{"delta_fld", " ", "5"}], ":", 
     RowBox[{"theta_fld", " ", "6"}], ":", 
     RowBox[{"psi", " ", "7"}], ":", 
     RowBox[{"delta_cdm", " ", "8"}], ":", 
     RowBox[{"H_conf", "/", "H0"}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./Class_files/Class_kess_cs_e3_z100_newt_Gev.dat\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Data\>\"", ",", 
         RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Making", " ", "output", " ", "file", " ", "foe", " ", "Gev", " ", 
     RowBox[{"field", "!"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"As", "=", 
     RowBox[{"2.215", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"h", "=", "0.67556"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kp", "=", 
     RowBox[{"0.05", "/", "h"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ns", "=", "0.9619"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"cs2", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Addr", "=", "\"\<2018.06.01.23.43.50\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "IMPORTS", "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataGevphiz100", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_000_phi.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"dataGevphiprimez100", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_000_phi_prime.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"datazetaGev100", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_000_zeta.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"datapiGev100", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_000_pi_k.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"datapiGev10", "=", "\[IndentingNewLine]", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_002_pi_k.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"datazetaGev10", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_002_zeta.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"z", "=", "10"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"dataGevphiprimez10", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<./NewVariable_Gevolution/output_1_128/kess_pk_cs_e3_004_phi_prime_\
z10.dat\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Data\>\"", ",", 
         RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dataGevphiz10", "=", 
      RowBox[{"Import", "[", 
       RowBox[{
       "\"\<./NewVariable_Gevolution/output_1_128/kess_pk_cs_e3_004_phi_z10.\
dat\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Data\>\"", ",", 
          RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\n"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
   3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
   3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
   3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
   3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
   3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
   3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
   3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
   3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
   3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
   3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
   3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
   3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
   3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
   3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
   3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
   3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
   3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
   3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
   3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
   3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
   3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
   3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
   3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
   3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
   3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
   3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
   3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
   3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
   3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
   3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
   3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
   3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
   3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
   3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
   3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
   3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
   3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
   3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
   3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
   3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
   3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
   3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
   3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
   3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
   3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
   3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
   3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
   3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
   3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
   3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
   3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
   3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
   3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
   3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
   3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
   3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
   3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
   3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
   3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
   3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
   3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
   3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
   3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
   3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
   3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
   3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
   3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
   3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
   3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
   3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
   3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
   3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
   3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
   3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
   3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
   3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
   3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
   3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
   3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
   3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
   3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
   3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
   3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
   3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
   3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
   3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
   3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
   3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
   3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
   3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
   3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
   3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
   3.7352971834201117`*^9, 3.7352972215902157`*^9}, {3.73598066087808*^9, 
   3.735980683558736*^9}, {3.735982701409083*^9, 3.735982722979671*^9}, {
   3.7359898364984417`*^9, 3.735989860821068*^9}, {3.7359942581647882`*^9, 
   3.735994270382619*^9}, 3.735996823468211*^9, {3.735997134764554*^9, 
   3.735997142297779*^9}, {3.7359974920564938`*^9, 3.7359975233592253`*^9}, 
   3.735999449903493*^9, 3.736000140681826*^9, 3.7360001713080387`*^9, 
   3.736000358609771*^9, 3.7360005010609903`*^9, 3.7360008608424187`*^9, {
   3.736001474891013*^9, 3.736001478396699*^9}, 3.7360016791081457`*^9, 
   3.736002175438101*^9, 3.736002799977482*^9, 3.7360030830868673`*^9, {
   3.736008605369732*^9, 3.7360086058368387`*^9}, 3.736008828097674*^9, 
   3.7360088778473463`*^9, 3.7360090870899982`*^9, {3.736009190973228*^9, 
   3.736009236934987*^9}, 3.73600939643753*^9, 3.736009697086809*^9, 
   3.73601007884759*^9, {3.736056618942149*^9, 3.736056642204022*^9}, 
   3.736056895170587*^9, {3.736057197810547*^9, 3.736057200872541*^9}, 
   3.73605746477444*^9, {3.736059369771353*^9, 3.736059382100472*^9}, {
   3.736059524778494*^9, 3.7360595369040213`*^9}, 3.7360597520004063`*^9, {
   3.7360684251106443`*^9, 3.736068438513068*^9}, 3.736068664033135*^9, {
   3.7360692178996077`*^9, 3.7360692189399977`*^9}, {3.736164976483349*^9, 
   3.7361649769748163`*^9}, 3.7361661053810387`*^9, 3.736169518855859*^9, 
   3.736177188355514*^9, 3.73617741314237*^9, 3.736177717544327*^9, 
   3.7361800588353*^9, 3.7368779684293823`*^9, 
   3.7368782460903*^9},ExpressionUUID->"fed1bad3-35ae-4ec4-b896-3df442045fb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GevFieldz100", "=", 
    SqrtBox[
     FractionBox[
      RowBox[{"datapiGev100", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], 
      RowBox[{"As", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"datapiGev100", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
        RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gevzetaz100", "=", 
    SqrtBox[
     FractionBox[
      RowBox[{"datazetaGev100", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], 
      RowBox[{"As", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"datazetaGev100", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
        RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gevphiprimez100", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"dataGevphiprimez100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], 
     RowBox[{"As", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"dataGevphiprimez100", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
       RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gevphiz100", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"dataGevphiz100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], 
     RowBox[{"As", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"dataGevphiz100", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
       RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a0", "=", 
   RowBox[{"1.", "/", 
    RowBox[{"(", 
     RowBox[{"1.", "+", "99.597220"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1", "=", 
   RowBox[{"1.", "/", 
    RowBox[{"(", 
     RowBox[{"1.", "+", "9.951253"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]a", "=", "0.0001"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Sampling", " ", "to", " ", "solve", " ", "ODE"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Agrex", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"aa", ",", "1", ",", 
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{"a1", "-", "a0"}], "\[CapitalDelta]a"], ")"}], "]"}], 
          "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"num", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", 
         RowBox[{"datapiGev100", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dimensions", "[", "Agrex", "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"k", " ", ",", " ", "a", " ", ",", " ", 
    RowBox[{"pi", "[", "a", "]"}], ",", " ", 
    RowBox[{"zeta", "[", "a", "]"}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "For", " ", "each", " ", "k", " ", "we", " ", "have", " ", "a", " ", "*", 
    " ", "3", " ", "where", " ", "a", " ", "is", " ", "the", " ", "number", 
    " ", "of", " ", "a", " ", "sampling", " ", "and", " ", "3", " ", "is", 
    " ", "the", " ", "number", " ", "of", " ", 
    RowBox[{"columns", ".", " ", "a"}], " ", "pi", " ", "and", " ", 
    RowBox[{"pi", "'"}], " ", "for"}], "  ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Agrex", "[", 
     RowBox[{"[", "4", "]"}], "]"}], " ", "//", "MatrixForm"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"phiprimez10", "=", 
     SqrtBox[
      FractionBox[
       RowBox[{"dataGevphiprimez10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], 
       RowBox[{"As", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"dataGevphiprimez10", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
         RowBox[{"ns", "-", "1"}]]}]]]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Gevphiz10", "=", 
     SqrtBox[
      FractionBox[
       RowBox[{"dataGevphiz10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], 
       RowBox[{"As", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"dataGevphiz10", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
         RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GevFieldz10", "=", 
    SqrtBox[
     FractionBox[
      RowBox[{"datapiGev10", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], 
      RowBox[{"As", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"datapiGev10", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
        RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Gevpivz100", "=", 
     SqrtBox[
      FractionBox[
       RowBox[{"datapivGev100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], 
       RowBox[{"As", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"datapivGev100", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
         RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gevzetaz10", "=", 
    SqrtBox[
     FractionBox[
      RowBox[{"datazetaGev10", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], 
      RowBox[{"As", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"datazetaGev10", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
        RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"**", 
    RowBox[{
    "*", "For", " ", "each", " ", "k", " ", "in", " ", "IC", " ", "file", " ",
      "we", " ", "need", " ", "to", " ", "solve", " ", "th", " ", "e", " ", 
     "ODE", " ", 
     RowBox[{"numerically", "!"}]}]}], "***************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kmax", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", 
     RowBox[{"datapiGev100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amaxComun", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"a1", "-", "a0"}], "\[CapitalDelta]a"], ")"}], "]"}], "+", 
    "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GevPowerDataz100", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"datapiGev100", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"GevFieldz100", "[", 
        RowBox[{"[", "l", "]"}], "]"}], ",", 
       RowBox[{"Gevzetaz100", "[", 
        RowBox[{"[", "l", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "GevFieldz100", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GevPowerDataz10", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"datapiGev10", "[", 
         RowBox[{"[", 
          RowBox[{"l", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"GevFieldz10", "[", 
         RowBox[{"[", "l", "]"}], "]"}], ",", 
        RowBox[{"Gevzetaz10", "[", 
         RowBox[{"[", "l", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "GevFieldz10", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"kk", "=", "1"}], ",", 
   RowBox[{"kk", "<", 
    RowBox[{"kmax", "+", "1"}]}], ",", 
   RowBox[{"kk", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "k", " ", "is", " ", "wavenumber", " ", "in", " ", "the", " ", "eq", 
     "\[IndentingNewLine]", "The", " ", "IC", " ", "is", " ", "set", " ", 
     "for", " ", "each", " ", "wavenumber", " ", 
     RowBox[{"accordingly", "!"}], "\[IndentingNewLine]", 
     RowBox[{"Also", " ", "\\", "Psi"}], " ", "is", " ", "set", " ", "for", 
     " ", "each", " ", "k", " ", "accordingly", " ", "in", " ", "the", " ", 
     "loop", " ", "which", " ", "is", " ", "assumed", " ", "to", " ", "be", 
     " ", "constant", " ", "in", " ", "matter", " ", "dominated", " ", 
     RowBox[{"universe", "!"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kwave", "=", 
     RowBox[{
      RowBox[{"GevPowerDataz100", "[", 
       RowBox[{"[", 
        RowBox[{"kk", ",", "1"}], "]"}], "]"}], "*", "h"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "We", " ", "multiply", " ", "by", " ", "h", " ", "since", " ", "the", 
       " ", "unit", " ", "of", " ", "k", " ", "is", " ", 
       RowBox[{"1", "/", "Mpc"}], " ", "not", " ", 
       RowBox[{"h", "/", 
        RowBox[{"Mpc", "!"}]}], " ", "while", " ", "in", " ", "the", " ", 
       "file", " ", "is", " ", "k"}], "=", 
      RowBox[{"[", 
       RowBox[{"h", "/", "Mpc"}], "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"piC", "'"}], "[", "a0", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"kk", ",", "3"}], "]"}], "]"}], 
        RowBox[{
         RowBox[{"Hubb", "[", "a0", "]"}], "a0"}]], " ", "is", " ", "IC", " ",
        "for", " ", 
       FractionBox["d\[Pi]", "da"]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}], "=", 
       RowBox[{"Gevphiz100", "[", 
        RowBox[{"[", "kk", "]"}], "]"}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[CapitalPhi]", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], "=", 
       RowBox[{
        RowBox[{"Gevphiprimez100", "[", 
         RowBox[{"[", "kk", "]"}], "]"}], 
        RowBox[{"Hubb", "[", "a0", "]"}]}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}], "=", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], "=", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "It", " ", "is", " ", "multiplied", " ", "to", " ", "Hubble", " ", 
      "since", " ", "it", " ", "is", " ", "function", " ", "of", " ", 
      "\[Tau]", " ", "while", " ", "after", " ", "changing", " ", "the", " ", 
      "variable", " ", "it", " ", "gets", " ", "H", " ", "factor"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "\[CapitalPhi]prime", " ", "must", " ", "be", " ", "provided", " ", "in",
       " ", "new", " ", "variable", " ", 
      RowBox[{"a", "[", "tau", "]"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"\[CapitalPhi]prime", "=", 
       RowBox[{
        RowBox[{"Gevphiprimez21", "[", 
         RowBox[{"[", "kk", "]"}], "]"}], 
        RowBox[{"Hubb", "[", "a0", "]"}]}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Sol", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Eq1", "\[Equal]", "0"}], ",", 
         RowBox[{"Eq2", "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"piC", "[", "a0", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{"GevPowerDataz100", "[", 
            RowBox[{"[", 
             RowBox[{"kk", ",", "2"}], "]"}], "]"}], 
           RowBox[{"Hubb", "[", "a0", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"\[Zeta]", "[", "a0", "]"}], "\[Equal]", 
          RowBox[{"GevPowerDataz100", "[", 
           RowBox[{"[", 
            RowBox[{"kk", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"piC", ",", "\[Zeta]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "a0", ",", "a1"}], "}"}]}], "]"}]}], ";", "  ", 
    RowBox[{"(*", 
     RowBox[{
     "The", " ", "pi", " ", "field", " ", "in", " ", "Gevolution", " ", "is", 
      " ", "divided", " ", "by", " ", "H", " ", "since", " ", "in", " ", 
      "the", " ", "output", " ", "it", " ", "is", " ", "multiplied", " ", 
      RowBox[{"to", "!"}]}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{
     "Note", " ", "that", " ", "for", " ", "the", " ", "initial", " ", 
      "value", " ", "of", " ", 
      RowBox[{
       RowBox[{"\[Pi]", "'"}], "[", "a0", "]"}], " ", "it", " ", "is", " ", 
      "not", " ", "just", 
      FractionBox[
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"kk", ",", "3"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"Hubb", "[", "a0", "]"}], "a0"}]], " ", "since", " ", "now", 
      " ", "it", " ", "is", " ", "the", " ", "function", " ", "of", " ", 
      "\"\<a\>\"", " ", "which", " ", "gets", " ", "a", " ", "new", " ", 
      "coefficient", " ", "by", " ", "changing", " ", "the", " ", "variable", 
      " ", "but", " ", "not", " ", "for", " ", "\[Zeta]", " ", "which", " ", 
      "is", " ", "dimensionless"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Agrex", "[", 
       RowBox[{"[", "kk", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{"a", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "a0", ",", "a1", ",", "\[CapitalDelta]a"}], "}"}]}],
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"Hubb", "[", "a", "]"}], 
       RowBox[{"piC", "[", "a", "]"}], " ", "is", " ", "dimensionless", " ", 
       "field"}], ",", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"piC", "'"}], "[", "a", "]"}], 
       RowBox[{"Hubb", "[", "a", "]"}], "a", " ", "is", " ", 
       FractionBox["d\[Pi]", "d\[Tau]"], " ", "according", " ", "to", " ", 
       "chain", " ", 
       RowBox[{"rule", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Agrex", "[", 
       RowBox[{"[", "kk", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Hubb", "[", "a", "]"}], 
           RowBox[{"piC", "[", "a", "]"}]}], "/.", "Sol"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Zeta]", " ", "[", "a", "]"}], "/.", "Sol"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "a0", ",", "a1", ",", "\[CapitalDelta]a"}], "}"}]}],
       "]"}]}], ";"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Hubb", "[", "a", "]"}], 
    RowBox[{"piC", "[", "a", "]"}], " ", "is", " ", "a", " ", "dimensionless",
     " ", "variable", " ", "and", " ", 
    RowBox[{"\[Zeta]", " ", "[", "a", "]"}], 
    RowBox[{"Hubb", "[", "a", "]"}], "a", " ", "is", " ", "to", " ", "change",
     " ", "in", " ", "temrs", " ", "of", " ", "conformal", " ", "time"}], 
   "*)"}], "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Agrex", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}], ",", "2"}], "]"}], "]"}], "//", 
    "MatrixForm"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"To", " ", "check", " ", 
    RowBox[{"consistency", "!"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "K", " ", "info", " ", "is", " ", "in", " ", "the", " ", "loaded", " ", 
     "file"}], ",", " ", 
    RowBox[{
    "and", " ", "for", " ", "each", " ", "k", " ", "we", " ", "have", " ", 
     "the", " ", "solution", " ", "in", " ", "time", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"pi", ",", " ", 
        RowBox[{"pi", "'"}]}], ")"}], "!"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[CapitalPsi]data", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "is", " ", "k", " ", 
    RowBox[{"lists", "!"}], " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Agrex", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "is", " ", "pi", " ", "soluition", 
    " ", "for", " ", "constant", " ", 
    RowBox[{"time", "!"}]}], "*)"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
   3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
   3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
   3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
   3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
   3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
   3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
   3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
   3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
   3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
   3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
   3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
   3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
   3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
   3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
   3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
   3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
   3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
   3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
   3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
   3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
   3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
   3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
   3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
   3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
   3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
   3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
   3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
   3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
   3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
   3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
   3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
   3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
   3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
   3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
   3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
   3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
   3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
   3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
   3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
   3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
   3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
   3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
   3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
   3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
   3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
   3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
   3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
   3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
   3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
   3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
   3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
   3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
   3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
   3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
   3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
   3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
   3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
   3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
   3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
   3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
   3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
   3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
   3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
   3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
   3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
   3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
   3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
   3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
   3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
   3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
   3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
   3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
   3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
   3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
   3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
   3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
   3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
   3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
   3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
   3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
   3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
   3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
   3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
   3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
   3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
   3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
   3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
   3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
   3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
   3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
   3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
   3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
   3.7352971834201117`*^9, 3.7352972843090677`*^9}, {3.7352975930354443`*^9, 
   3.7352976107031527`*^9}, 3.735297674321453*^9, {3.735581017360442*^9, 
   3.735581020889655*^9}, {3.735967998102436*^9, 3.735968037212219*^9}, {
   3.735968081185093*^9, 3.735968118852296*^9}, {3.735968179300707*^9, 
   3.7359682115095053`*^9}, {3.735968340479259*^9, 3.735968340861494*^9}, {
   3.73598196192236*^9, 3.735981962424506*^9}, {3.735994384669798*^9, 
   3.7359943853145313`*^9}, {3.736000865709341*^9, 3.736000865840493*^9}, {
   3.736001322126192*^9, 3.736001334205241*^9}, 3.7360017335702763`*^9, {
   3.7360031306372766`*^9, 3.73600313220621*^9}, {3.7360092788281116`*^9, 
   3.736009279824356*^9}, {3.73606781776362*^9, 3.736067820709976*^9}, {
   3.736067855468663*^9, 3.736067858520153*^9}, {3.736068336877133*^9, 
   3.736068338931394*^9}, {3.736068492861361*^9, 3.73606852473533*^9}, {
   3.73606860110399*^9, 3.7360686055656548`*^9}, 3.736068728798594*^9, 
   3.73606895475099*^9, {3.736165654943193*^9, 
   3.7361656854880133`*^9}},ExpressionUUID->"cd658157-41ad-4b89-b57f-\
6bcaa6d85197"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MatSolz100", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GevPowerDataz100", "[", 
        RowBox[{"[", 
         RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Agrex", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Agrex", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatSolz10", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GevPowerDataz10", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Agrex", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"amaxComun", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Agrex", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"amaxComun", ",", "3"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"dataz10", "=", "\[IndentingNewLine]", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./Class_files/Class_kess_cs_e3_z10_newt_Gev.dat\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Error\[Pi]100", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatSolz100", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatSolz100", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "2"}], "]"}], "]"}], "-", 
            RowBox[{"GevPowerDataz100", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "2"}], "]"}], "]"}]}], ")"}], "]"}], 
         RowBox[{"GevPowerDataz100", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Error\[Zeta]100", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatSolz100", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatSolz100", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "3"}], "]"}], "]"}], "-", 
            RowBox[{"GevPowerDataz100", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "3"}], "]"}], "]"}]}], ")"}], "]"}], 
         RowBox[{"GevPowerDataz100", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "3"}], "]"}], "]"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "2", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Error\[Zeta]10", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatSolz10", "[", 
         RowBox[{"[", 
          RowBox[{"kl", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatSolz10", "[", 
             RowBox[{"[", 
              RowBox[{"kl", ",", "3"}], "]"}], "]"}], "-", 
            RowBox[{"GevPowerDataz10", "[", 
             RowBox[{"[", 
              RowBox[{"kl", ",", "3"}], "]"}], "]"}]}], ")"}], "]"}], 
         RowBox[{"GevPowerDataz10", "[", 
          RowBox[{"[", 
           RowBox[{"kl", ",", "3"}], "]"}], "]"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"kl", ",", "2", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Error\[Pi]10", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"MatSolz10", "[", 
          RowBox[{"[", 
           RowBox[{"km", ",", "1"}], "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"Abs", "[", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MatSolz10", "[", 
              RowBox[{"[", 
               RowBox[{"km", ",", "2"}], "]"}], "]"}], "-", 
             RowBox[{"GevPowerDataz10", "[", 
              RowBox[{"[", 
               RowBox[{"km", ",", "2"}], "]"}], "]"}]}], ")"}], "]"}], 
          RowBox[{"GevPowerDataz10", "[", 
           RowBox[{"[", 
            RowBox[{"km", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"km", ",", "1", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Pi]100", "=", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"MatSolz100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Line", ",", 
        RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Solved here \[CapitalEta]\[Pi]: z=100\>\"", "}"}]}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "11"}]], ",", 
          SuperscriptBox["10", "0"]}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Pi]10", "=", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"MatSolz10", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Line", ",", 
        RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Solved here \[CapitalEta]\[Pi]: z=10\>\"", "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "14"}]], ",", 
          SuperscriptBox["10", "0"]}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Zeta]100", "=", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"MatSolz100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Line", ",", 
        RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Solved here \[Zeta]: z=100\>\"", "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "12"}]], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]]}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p\[Zeta]10", "=", 
    RowBox[{"ListLogLogPlot", "[", 
     RowBox[{
      RowBox[{"MatSolz10", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Line", ",", 
         RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Solved here \[Zeta]: z=10\>\"", "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "12"}]], ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "6"}]]}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"MatSolz100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Solved here \[Pi]: z=100\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "4"}]], ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "6"}]], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Pi]Gev100", "=", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"GevPowerDataz100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Line", ",", 
        RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Gev \[CapitalEta]\[Pi]: z=100\>\"", "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Pi]Gev10", "=", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"GevPowerDataz10", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Maroon", ",", "Line", ",", 
        RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Gev \[CapitalEta]\[Pi]: z=10\>\"", "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Zeta]Gev100", "=", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"GevPowerDataz100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", "Line", ",", 
        RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Gev \[Zeta]: z=100\>\"", "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p\[Zeta]Gev10", "=", 
    RowBox[{"ListLogLogPlot", "[", 
     RowBox[{
      RowBox[{"GevPowerDataz10", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Line", ",", 
         RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Gev \[Zeta]: z=10\>\"", "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Errors", ":"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perror\[Zeta]100", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Error\[Zeta]100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Line", ",", 
        RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\< \[Zeta]  rel error: z=100\>\"", "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perror\[Pi]100", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Error\[Pi]100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Line", ",", 
        RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\< \[CapitalEta]\[Pi] rel error: z=100\>\"", "}"}]}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perror\[Zeta]10", "=", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"Error\[Zeta]10", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Line", ",", 
        RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\< \!\(\*FractionBox[\(\[Zeta] \((solved\\\ here)\) - \[Zeta] \
\((Gev\\\ )\)\), \(\[Zeta] \((Gev)\)\)]\)  z=10\>\"", "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"perror\[Pi]10", "=", 
    RowBox[{"ListLogLogPlot", "[", 
     RowBox[{
      RowBox[{"Error\[Pi]10", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Line", ",", 
         RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{
       "{", "\"\< \!\(\*FractionBox[\(\[CapitalEta]\[Pi] \((solved\\\ here)\) \
- \[CapitalEta]\[Pi] \((Gev\\\ )\)\), \(\[CapitalEta]\[Pi] \((Gev)\)\)]\)  \
z=10\>\"", "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"z", "=", "10"}], ",", " ", 
    RowBox[{"Gev", " ", "and", " ", "solved", " ", "here"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
   "p\[Pi]10", ",", "p\[Pi]Gev10", ",", "p\[Zeta]10", ",", "p\[Zeta]Gev10"}], 
   "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Relative", " ", "error", " ", "between", " ", "here", " ", "and", " ", 
     "Gevolution"}], ",", " ", 
    RowBox[{"z", "=", "10"}], ",", " ", "z"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "perror\[Zeta]10", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", "perror\[Pi]10", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"z", "=", "100"}], ",", " ", 
    RowBox[{"Gev", " ", "and", " ", "solved", " ", "here"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
   "p\[Pi]100", ",", "p\[Pi]Gev100", ",", "p\[Zeta]100", ",", 
    "p\[Zeta]Gev100"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Relative", " ", "error", " ", "between", " ", "here", " ", "and", " ", 
    "Gevolution"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Show", "[", 
    RowBox[{"perror\[Zeta]100", ",", "p\[Zeta]Gev100"}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
   3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
   3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
   3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
   3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
   3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
   3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
   3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
   3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
   3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
   3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
   3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
   3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
   3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
   3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
   3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
   3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
   3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
   3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
   3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
   3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
   3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
   3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
   3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
   3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
   3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
   3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
   3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
   3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
   3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
   3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
   3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
   3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
   3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
   3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
   3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
   3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
   3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
   3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
   3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
   3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
   3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
   3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
   3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
   3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
   3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
   3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
   3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
   3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
   3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
   3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
   3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
   3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
   3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
   3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
   3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
   3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
   3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
   3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
   3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
   3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
   3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
   3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
   3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
   3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
   3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
   3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
   3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
   3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
   3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
   3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
   3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
   3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
   3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
   3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
   3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
   3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
   3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
   3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
   3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
   3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
   3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
   3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
   3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
   3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
   3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
   3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
   3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
   3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
   3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
   3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
   3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
   3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
   3.7352971834201117`*^9, 3.7352972843090677`*^9}, {3.7352975930354443`*^9, 
   3.7352976107031527`*^9}, 3.735297674321453*^9, {3.735581017360442*^9, 
   3.735581020889655*^9}, {3.735967998102436*^9, 3.735968037212219*^9}, {
   3.735968081185093*^9, 3.735968118852296*^9}, {3.735968179300707*^9, 
   3.7359682115095053`*^9}, {3.735968340479259*^9, 3.735968340861494*^9}, {
   3.73598196192236*^9, 3.735981962424506*^9}, {3.735994384669798*^9, 
   3.7359943853145313`*^9}, {3.736000865709341*^9, 3.736000865840493*^9}, {
   3.736001322126192*^9, 3.736001334205241*^9}, 3.7360017335702763`*^9, {
   3.7360031306372766`*^9, 3.73600313220621*^9}, {3.7360092788281116`*^9, 
   3.736009279824356*^9}, {3.73606781776362*^9, 3.736067820709976*^9}, {
   3.736067855468663*^9, 3.736067858520153*^9}, {3.736068336877133*^9, 
   3.736068338931394*^9}, {3.736068492861361*^9, 3.73606852473533*^9}, {
   3.73606860110399*^9, 3.7360686055656548`*^9}, 3.736068728798594*^9, 
   3.73606895475099*^9, {3.736165654943193*^9, 3.7361656854880133`*^9}, {
   3.7361657282098494`*^9, 
   3.736165731935504*^9}},ExpressionUUID->"70dadc0d-51fe-4df1-8944-\
6c354f466484"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
PVlrH4XsexTRwOsU7P9oN/qpjPBv49dKekbBiMnap4NfRiFxyHvNyo2Cosk/
bpaljELP2ZdT/7lQkFncXua/sFG4dVUmfMifgpeLfDM4vUbhzdrlgcOvKTj7
MimzxWkUjqudz4z5j4KmuUe45y1H4RIP5e3VIKI/121vFZ4ehX8JB74VXaFg
maK8X5fmKDh+MrszTuBNPX53t6viKFzZt11k1yMKHsk+zBQvRsTLBaVPBRLz
oZpq7rFxFEpYWU/9ekdB/dIJl5DVEYjHTH73EAraqnHJSw2OwIhIwH2pFxSc
clf1ulY/AkJ1WXKPCf0iBwO8DUpGIL92lZwfR+yf2vRQa9YIgC/T051vCb0P
2z7//m4E0v7TfVqeRex/8gkF9bAROCpdXM+dTsHawDJz4YcjoMt7Y7NBLAXd
buaZaNwcgc302dSyUAqGzB18QjYZgU0uDexP4ol7VCgmG3VmBMQK0/JnIyjI
Kv+zOPrwCPjeGRcn5VGQvPeBBv+eEbhRdq4j7BMFC+cz5SQlR4DNYaxp73cK
Mpw7e+gg7wh0avZadBD4vr/dp6axOAwjtLHv+75RUNGu2qp1aBik+RxKkwk8
PwZrgwNbhuH9n0Tx2CQKbvt+JS/7zzDUj2RczyH4Rqq3cG76MQxTDt2RHz8Q
9dbGE3elD0PkYcnfQPDzLz5mpRkxDNnK3pY32yioqvO2X9J3GHZo6Pi9/EhB
XrLkuoPTMFgEGV2JyKdgCr8O/znrYUj5aDbWnEnBjQLJD6WNh4HrJKO7HsFn
QuSV2MKRYSgMZ8oqz6Dgu8dGE2V7h8HzJ6/unhYK0rNnjdOlhkFlz0m70FYK
qiiZWQpuHYbqJ4Hekg0UDJax3cXMNAybB1wvShN8Y30+3NwwNgRnPvDsjhql
oKQ1WdynewhEXyRI9HQS92pbtt3rmiF4fvc491eCX0vLqP5c3hAMtHxN1a+n
4G0Ka8+Zj0Ow1T9Mk15HzPexwz39iUPgYzH+2ZWof4hCu3PuxRDsUmmsPdtB
waMGWqvnHwyBf7hzmHoJBRfS8wxv3iL8WRVz/2oIPAzzhMRDUEUlM1oRekUG
/6ZEnh2CrpkzA84Evq+J+d79GkNw63i67FA7BbMPnzrxXXEIIv6zTTq3RMEb
dZW2gTJDkDu+QqqromD3tTNfm7YOAdW5xzSrh4KvtiSyRDMPgdDKyjbOcWKf
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
57l/w5XfF+9FHlfF/wEUV9k5
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
eH7AaaZdOzwbGfg/QALc+g==
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
+R/Lz+LH
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
+Quqfh4vvaJGQf8DPOi95A==
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=10\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7368782661271544`*^9},ExpressionUUID->"ed2bac04-8aa2-48d4-bec2-\
f776b495f88d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1:eJwVV3c8lu8XtvdM4Wtkp6TskdGNrGgIWQkpURkJKZWsJKISlcwoI5SdfR57
7733Xq/12vze31/v57zPfZ/nnPOc61zX4bN20rchISIi0iElIvr/r4j/uZYK
VwbsykRwfLsxJ8bpb/D0Uxcd5h8U02R0lRM7JySivveHFhuNoaZ0jGTFxP5k
xr+op8Fes9xZ85Biw6JwmkJ1jDRYIWmh5b9ENmz72oVVyTkqLILB7fb4d1Ys
aLSl88tjKqxm4NqS2CNWzJj8iXw2GRWWlJvHXjPFgmUV4uQ4Eigx//eXunrl
jmOxW2F5RDqUGMO3yzfxhPuq+web1NsU2Oiy1Vql2nHM2w9/dCqNAnM0Z3v/
xvs4ZsRVG/FQgALbvc2w9leHGfPm1JIxmiLHbg6+fzBWdQyru5j9qvk3OSZp
q+IWLnQMu3Deh93ZhRw7wzMTQlnIgmFLPS3zF8kxfQ69HvsVZuyFQ3XdBh05
lqcjWkvCfQw7cNPtvDFEhmm5MSWf3WDBXM3YDOX9yDAdhRimUodjWMbNV0yP
zMgwd1qNdNYlZqzw++VYVUkyrInK7HyOIzP2hexAPoqWDKsI9jeyomTCzB7d
/uNUToqt/il9I1bPjLnjLn/OjyXF/Haa4pNPMWEvMQ+J+Nuk2MHjY++arjBj
If1DX3gukmKUbHOBIxtM2ETS+ZZgHlKM1TD7o688M2a137M8TEyKaVBFH6e1
ZsIY9ZlPUEyRYNFa0ZXf8piwxvdCUVu1JFjUvE1rjBkd9uQE05/kdBJsel/T
LHqWARt8mv2M/zkJpstTqpI1RYf5RBb/6rMkwRoLRC5OLTBizl/EI0S1SLBv
ZkszrIpM2K9dcbrjYiTYNSv9Re8aJkwb8lPfsZFgOR9usPh9pseKttme+BOR
YNJBu4ZG/ozYmWcJSWTzxFiqtrYAaQI91nvfu8qplBiL0wsq5bvOjHVcX1vR
TyHG2Ow4Tj4/RY99cWz4Eh9GjH0QuF62KsiI/aL8GnzLixib+F79n64/HTZ0
8NPmuT0xNi3/ZcchlR77vCw0tGVCjPVe+qWh7kaHTVkyVHVoEGPZ40/kJ/vo
sK/Ckw5feIkxs/4egSxxBqzXff7dUwZizId1bktVlR6LFZVVTNonwrRaqOgm
q2kw6ssiM0ILRNi18nKaGA06bNL8mDxpHRGmXa1Oby/LgIlIXko1zyfCjtIT
ym5o02H9wdT9fV+JsCu5Fy8ovKLEbot/z9p5S4TNy7n9u21IiwU4csgYPyPC
jMrvs/8Vp8UqYvjlVu2IsCjLZWf2HFpM5FqLVZUpEfbk3lSNBS0tdoNpOK5d
hwj7JBQwmTJFjW2VExezKhFhLK9DFZ5TMWC/5ltTlHmIMAMjZdHI1zSYjs6n
QW5mgj0SaHL/Og3GQLGjLkZKhNlwKE+f/kCDOXgwho7OHwF3V1jIgxFabEMH
d4S1HIFfevt0SiihXvcfKOzlHEFoXnqGPzstprx8rSn4+xGY+vDFnw2mxd6V
SvLm3D+C5uWzASoDVNgPsv1NtatHMCIqnZ1pSYMJjEi38EkfQbwQx4ebbpSY
FJdg/jXOI+B1rlW+a0GNvX7uUVdDcgQqem1xp5SosSadIeGg+UOwi68wCL5K
iS0FPyX92n4Iu+eiDHMKqLB4f8VR74RDcO1qU+RlpMfCNjARi/eHoNT44doS
wV/nhjLHS7dDYMgRLBIqo8ayrJqq+i0OAd1IvMPrRoElNSTkGEoeglpleZf8
A2ost8Bryp7rEAQYLS7ozlJhk5Qd80ITB3B5pJCF7SkN5nhoUXy85gBSfyY7
jLpTYZTk3hmXsw5gKeh06cgbauxMZ+9UTvQBODuEL/43RYGFeapnGLw7AG66
d1OyOQR/V4VYT7kdgOfruyIp1IQ51RYxeufqAVQK8zgFOhH6QbcGq71wALfb
BppiX1Jg0Z7ugxanDgC7Z2F3eIMS+2v2TkeQ5QB+Z1HIDM9TYq4XnviSru/D
EbPJ5Z/DFBiZrxrm078PMQq0F4meUmLORyqZtgn7QNa2KantRYGlHbH03Pq0
D1s8jpzzV6kxnkJNsw7XfTi3lePP/I/g34PT+4z5Ptwdu9385pACi42+c75I
Zx+e9j4/HImjwErpdaqvn94HGry+Grc4OVb8gzdDj20fXOT4ZV0eUWIP1Rmq
04j3gU3YQFSkmgIrpKQmzu3cA+9kVo7I94T3O5lp363cA0qTW3/y8WTYhcYe
3KPwPVhU4C815qbAXCQW3Kz99uDJuWhtSwkybJOY3TnDdQ/qZRt8DUvJsWAn
eMJtswenXuZ2yy0Qvt+RZ2X+5T2Izcj7E0eY46TZapM7woTzSB6yFKkwlpnL
Ijvse/CReemqci855ldOK1xMugdebBVheVQUWHziiRdRi7twd5FyMTCDkM9w
4TjV8C5c/R3R8eE9GRZcrWf3oWUXzB+uiJCfo8KKm/44z2ftQqQ9SW0PLwVW
wxbhXfpzFzBbeJ1RSoblNm9aDX/eBb6tqsUrr8iwbb3dFxqeu5ASc/XwSSwJ
9rf7pi6pwy78M3YxdXpKjsXLDNLpWe7C0jF261sk5FjzmXlMTH0Xbor0OL6t
J8VU8xyry2R3Yc/4k6xNCDlGArSGD8/sgvZTG1/7eDKs5UR85mmuXbD3j8FO
r5Fjv3R8FGaIdwHUY+eS5oixyZ9cftMbOxCmxU/2ooAM++AwoigwsANSrMGT
Sb+Iseq54SGr5h1IfUR336OMDAsIrem+DzvgId/yVL2NDDP1CdT8lLwDPvtz
5reJybActr5HJ6N2YI9RudY2khwTHYl8X/phB/LOMD5+dZsCQ5G0YnLuO4B3
Nli0tybHGCmG38nf3YFbzLTdJ3EkWIQ+s8+W/g4cBQiQv39Oiun3Tn6j0NqB
HR9tmRhCfyA5dvtsmR2wiZJKTzxNivlnrpyTZtqBB1MTW+9fkmI8+qkMTUSE
+A/iskqcSTHswkQA7eo20H9pdyXfIcGE5jczQ4e3AWCk9L4YGWZGew53uWMb
AuL3JViekGK3OupaZoq34Q6nKEv8UxJM7FaK+LH0bRBYTMMnI1Lsy7FKn9rI
bWA523WgnE6KwQ9nuqM32/D0zal2kUoSbN85P1D8xTYo/KfHm8ZIjiWs58bH
mm/Dd3nVuLsbpJj0jfw3Ple34SXH7pchXlIsptlo2ldxG/58+Czz6BYh/4iv
GTNntyHMWWdZPo4Eo2FJ9PhLuw38DL0Ks5IkWPgnKu6Kgy3AJbPGnaAgxZSu
/S3VwW3BbzbLiDIaEmy7MWnx08gWPP91ilPXmBijGjgT+L1rCxa7U/aXb5Bg
I/hrXa1lW7BLKjjz2ZsEM+3ZnpTM3YIau+2CGCMSzHLzpfmrn1ugOFtWS/2J
DEt+0BSkG74F9DdoRUj7ibGab3Jan99uwVs+/6dBBN7oiI+l8XfdAlVWsusn
04kwLw2r7E6bLdi6En579QcphlP9Ea9psgW5TIcL5N3EGH/oLbpkjS3QZcp+
qdpKjF0xmhR8oLQFtc+pDApZibHIPK55GpEtYP+yrEd8ghRTVNH7YMm9BVb8
4Y5SxcRYPVc4yQW6LTg9n93oR0KIv1Fvr3MfD+BgD3uaxJjupIPS7DoeuhI1
/dRfE2OaSit40XE8+JyiSnywfgi88dyeHJ14wNHL7TW7E2NBPl+jfpbjwXTf
R/hFzSGMeZQseOfhgdwu/0H2HWLMwdCCYzwdD5e1RaYm1Iiw1vMLtQpheMh7
ZN9im0WEMTz1bIQgPNy7eI31mCMRVlvqkjT4Gg/CXnMvV74QY1yB3IK/HfFQ
eLi4sstHjD04/ebhV1M8UJ3mavV6SrCruf6Z3sBDo/SIUcIqMdbVarhXrI6H
6Rdalz8TdACPjY1injgh3h3Breg7JBhZvLlt/Gk8WFk3lrYHEGHFh+HSoex4
kCC3Ynet2AIx7tSOZXo89Idy8QTtEGGCzsSXK/Y3YUGMxCjL/Qjsqn4sbuA2
Qfw6a6pM1RGQv8xc5pnbhFhuoY3MCCLsUe6WRHrXJhQZyYbedz+EX60XV1tq
N4FGn5L+4j0i7ANv7TJWuAmJnh6Hjf5E2DMbnN/i303IqU9q3SfojFuv+dQe
RG3CrdXHs5eKjoCU5Hn1/Y+bcP/aFndc8xGEuD5Q++mzCYraZ//JSR3CeY3g
q5zum/Am3r9k7vkhrPHUjBQ4EfznhjI/0iDCZHi5szbNNkH39HTQlgIR9vbb
W23z65vwOng/20XpCJR3rRkblTaBLW7F74QyEab7X8HtWJlNOHYQXplEsPXz
BTtNhTeB4WKKh5n0PrRPHzld5tyEwNZly+OHhzBbI0Zdx7gJNvTvlvx1j4CJ
bWaElngTPpudbvXQPwTBFVca5ZUNuLUwxtas/n/eLR51md6AK90fh5sHD+CR
zfZkeP8GBLt35OwSHcFsSD+Rc8sGXEsJpXxERoSFaXPWCFRvgHXCe181ASLM
sYvU9mfWBsymXL31hu0InC70kSWmbABtxr2m5mcHhHx8s4YiNkD5YYZbRPgB
+EOeyrePG6BiozMxRagPs4vBCP3rDfCX9Uog/UuE6V2gDdVy3YDshfXHMe0H
cCP/6PyQ9Qb4eX0RvHvzEA5QU/0D8w3YHhf0uD9yAKE/cuNCr2/ALz1Tli6i
PfBzzG8x19qA5CX7Etz9Q6AWX1SUurABolj/XM/TQ7jr/1p95+wGWLCPNrok
7YPaL5Y/RNwE/7fsJB2vbEMHJ9Vv2RMbwBrI07/WswdSzaf41Ck3wCdyRN/1
wSHQuSUSp+6uw5zkWIbg3V2wWJNLSlxYh5Eb0eoXpvagc4CWLXJsHbyvb0oW
Wu7Df5trDLiedSCeLGrUMN4DWvtLJPQN6yAxGzrQLLgPdKNco25F6+AeQLt+
sLcHBUz1yfJZ67D+85d1+7UjoE0e8khPWQfrv3Mc9jt7sMff4u32fR2aX/9K
pKndg5vqnUVW79ch8VRNO+sBMdZWYOab6rsOvTfcZ3+e24MMAepLge7rsPO5
3tAi9gASnn2TpXZYB3ntOZW7x3dhqAf7bmaxDgwGT847/tmHSLPKsHnDdTBN
FtAzJd+D73zF49Ea6/CgV+lNmeAu8CYnOnoprQPYLduLvybohOYu99qzhPe1
7J1XTNgFiWTqN8cF1oFzsf3Pd4KOiGhP+KDBRohfNm3mR8Ye/Hd2oEyOaR1O
RTcF88vvQBet4dFv4nVY2Xmyd5l1H+yz4h9ubK/BSK9gSOvpHcgsZ6lTnl8D
VeuGKLFLezDpSxcwMrkGX76+MvuWvQtftXanUtrWQDBJ29Xj0w6I01r1Fdau
QVTPlO5A6S6o4KNFnpWswdPNxvaosF14OjamtP53DXb1c6eKCfkoNBj9vJ28
BvfInvAu6x9Abp/nvcWYNfhsyD9/4E7QRYuyJpSha2D8ssmj8d8OWEGLL6XP
GtRl6v3kSN+BIYGQD8Yv1uC14Q65pNQOkByqnDR1WoNsa/HPwsQ7kBjFrnDC
bg38kkyIbrXswF3ZxjViszXQVGawxDtvg4mZRsnQjTUg2n+staSxDeYcNkHf
1NYgiVplL15pB2ZzuO6oyK4BnYYj7SkCL08/iThmKbYG9ceue7rM7ABuQ5Sd
6tQa/KQbL/s5uAMWpT8umXGugaVduUjX0Q5Y6q0pqNOuwZRwhFKH8TY4JGqm
zZOtQeHWIqly8Da8n9P4HrC9Cql/5sbq0rZBrmdW4unaKswVU6nYxe1BsDjg
o8dWgVi12Srw1zawC88IVfWuAuU3pb/OBB0QYlQXS9+6ChzuyxukjgTdd3Xn
nwm2Cl6PO0Ins7Zg4mBa4s2/VWDh3um/yI+HZWs2PuW0VWjreGuZ3b4Kfdbs
uwlJq1DREcKQfnMbRJO3Gz9/XQVvkW+PZO5uwVOFLwGHIasQ3Ceudd9wE+o/
3g/Te7MKsn5WaS9xeHiqtqC8774Ka18+Muec3YfKt6+ffXRahYAzZ0+OeG9B
CxXziUf3CPHcT33W0IOH/LtNRL9vrYL5yeo3SotbIEX3SqpYbxUuxpGHTpNv
wsGuGssXLcL5TH3iJ9N4KA8ieql0cRUseaIiZWa3gbYzkiFPfBXSyzQluAvw
4M2CXnudWYXpSPZ7REQEnbNfpprNtQrG7VYNogTercE1ap5nXgX52p3SGwQc
YauP54JpVkHbP3N8k2MLbsrcIv53iINtJ6v1BJUtwIqdGEu2cDB0SNwsnYIH
me/qkWXzOJAiKk1RIN2CYrKAabJxHAjlTnkXtm9CkAV5XlAPDi706CaNYJsg
VKy2P12Hg2z839OWB5twdfK7DEUlDsxROV/l401Y3PH8rVOAg819wzgKAo/9
u7Z/XC0dB9Hnde9se65BTk9DQc4vHJjyyO7TmODBqL3CwPo7Dpx9bwXbPsOD
2Plv2uThONDTPtN38REewuYyZSTf4oDL0lhbXgcPLne5E+lf46Dnh7926ws8
jBf7y/U8xYHGL80bzQZ4+HzwXrPsAQ6qw3Zslwk8v3rNjO/5HRzUtB/pD+9s
wGXmkicSJoR8NawcpT4ReFAj+zedLg62HCaz6k9tApYoKVakjoMGqUZTUNiE
E36OozvyOHAgM/F3M9qAQ4s0fnExHMyYMUYRHRB4jVfZ4eAUDgL+/KXxPrMB
83bzG2e5cMC6vePINbEOk42NGdfZCPk8scK7a2zAOeNPtc9pcXBxa0ysnW4T
+pOrn0cdrYCxXq6ZhM06BJXo36nYWIF39AmUu+54mPK1mygbWAGXcsP1NUMC
rwXzYgGNKzD96GXf89k10KZculRRvAIMoXUv28PXoX+iXjUqfgW0nB2CBfo2
Ifqp3fvu0BXwfT6QtBC9DikOzB5W3iuQRaR5rZ5pA0y7WuVdH64A6Zj9EWa7
AR0ayktZlitA1mHb7OO1ASQP+u/dvbwCFVcndFMJvMhn/y/htOQKXCpj1L1K
sHWXNY56BVZgM3aKPktyAypvsV+PZF6Bi0onQ34zrwPHtufj4d1l4Ord9uhy
Icx5sQuuTYvLwElvG1OWsgoqWy6+r3qXIdGUecH2+jr8nLmchseW4WPbX7U1
wzWY/3WRRzh/Gch6Jfbu39wAl4zQbc7EZcj7zPNRLGQNbrwH6bagZQipbuo4
PL4K0Xip+SKvZTDIF6mu81uHh6qGLkr2y7Amfz/0kdsGTD2fcZC7uQyHOmwZ
EtOrcKChWuSuvQzs/zWlMumsAnUbe/SqzDLUsb59PNqzBu27icthvMuQS75K
7f95FZL8HJi1jy9DrYnQFlX8GgzepLNcJ1mGDF7J7OQHG2CmxKF/em4Jnt+8
+OkGQQemtiq+PxxZgrGl86FiF1ZhJsNhKbtxCWYLWG98iViFyNWu4Lm8JcD8
5P9jMFkDzpQip8bfS6AStpUV8BMHpCcdhV58XQINPa5nm4Q5YF0TkEnrswR8
IrLalwi42/ySnDXougSBRS8j790gzJ3SS4xb95YgTzifQ9drFXRt7R9X6y1B
Xyt/pgJBpzRKiL0b11iCfAuL36qbOEjVeXnumcQS8EeeP2hLXoVL+WokCVxL
BB1HklVPuG+qkGrhSbMEj2fY65DBKug34NzDDhZBq134JY/pGtgr0okJzC1C
TNmb3vA7hDnpoeBzv2cRCs7z/H6btg7Rc0G+BnWLMM2eJpw4sQqXFdfnh3IW
4WZws9O2IqHeavYfC38tglzGhamVhRUQS9EVV/q6CCxfiSxT43DQFdJo8d+b
RahkPdbd4bIKz53KzFSdFqHtjHPVKAcOwvDoPY/ZIowV2ZZaEvrpajXXqZgb
iyDI7ESnSpiLFGIltbFqi9D7vID+PqEveaS8VE+cX4R/+NkSosplqN7KEuXn
XwQO+8UvaQTcExnfVEHMi6A+cb2ZIXkFCn9KK6ruLAAuiiFBu2QFJBw67Ibm
F8BzQytVnDDniua6QkMGF2ChrIWP5doKCBfeLcuvX4AphouvBrcJc09pkJa+
aAHavghZtp9bJuw1K0ln0xdAX+s6ScibDQis1bLTiFyAu22GAw21S6Bw+ecM
f8ACfFOc5ZWvWgFmHv4jZ9cFoDKofBH6cQl+n7h8wvjBAgTdlLvEfW4VaFhT
3giaLED8naOoTEKf4Ti+cW1fWiDgc4NCTw4Hv94a4RqlFuBLvlaweusyXMjf
NEkXWIBh4emcT9emQVby9j224wvwyf+DiMKHFQgVsj9LSrIAijWKoslCK/DD
768T2fI8FPVOfx8l4JP/Ac9Jv4l5gs46PsARughBwvkOEZ3zkLWA3WqvXobB
wSV9fNk86NwdnOoNW4InvBSTNzLmIclrzbhcdwE4tdQmZ5LmgaVt8z/c9WVQ
4ZV/avx5Hn6YnVkOfroC6gaaB6Ze83DcIOWREvkKbKeXGTo9noeQxgi/dGkc
/CDaIpR4Hl6dLnPYE1+A6NAK3uib89DApfeXo2oJ/iVV+s6ozoPFncqYS2rL
kK92XbdQYh7U7Cj+xNUuwKPuVvsQoXlwenrC/xu2BBP3b/zrPz4P3YJKwbvl
c/DtWBJ5LOk8fC+qmuJiXQDzcXKB4tU50MmSrizqXAQXcvcbGdNzUK1km5hb
Pws/X58wuNQ3B0KVWl9vmOMgof3eVYXqOZC7R2wjkLwASi8WRG8WzEFO469Z
0RfzgFyv4p3T5uCy++pbyrBpgAerBbLf50B4YWRQlX8JWNi/JfUHzsHJd2c/
5RsswNUTOyd+PpsDGiV2r8j8BYgodQ0ktZuD1Q4bnGjyPPh18C0ZWszBHYmA
j7VJC+DnfoZk9cocVA6VdPLNLkBvMtv0Q+U5WND6OV/GPg+/NUiSqc7OEfS/
4KIOyQq4faVcreGbA+/8tb7vqkugo9kzxc4yB/MNLsIej+dARinzNPHRLMjx
e3kpe83Cf2KVFS8WZ+F7c/2r/C8EXNX9fDM4OAstun8T6iJmoLPxQSZH1yyE
/9fF1Gc/Ad8lyR731swC7cdX5qNfliD57r+lwOxZ8OJ0cDMbIvRFFwQY/5yF
mNRoqSs681B17HfAzKdZuI3/FfChbgEqiJxe0gXMgtR929N66rPQOc+x6+Ux
C1ozuHLTD9Pg+aTfwdNuFporPu1J8M1D0xND/ksmszBVtbtoxTYHilE7J5e0
CM+DytjtCufggxV5miWahZJJWenxOzPAhhZINCRmIaTtIc2fl/Mws1qRfpdr
FkilHKoHhmfh3d6sPo5+FvS8YitoPs7AXpV+D9nhDJBMCdixvJ+BVyRXYjM3
Z6A5s9y0T3cKquikz9bPzkDVpNlpFuVZkIlkJGbpnAEimT/EOWgSbD3dgkyr
Z+Af0aSd/OYsGHAwKarlzsCHCxPV9wnfJTk+RfxT8gyc5IsPbbGeAoWrvqne
MTPgWlfujdIn4dxjgVPhITNgQifww3B2CurxJ5NWPWdgxXeh5Qb5DBz3w+vn
O84AYZcYtyL8/9JQVvel5QyESKrnVB2bhXqFYek712cgoK1gizZhDl5v6xIF
XJoB71fTz62tZmHifOL543IzkKYWJ57+ZxowXdMlLuEZKJMJGLB4OQMp+FSB
uRMzcOigwpl5fQzW22cO8BSEOnBaua1TtyEPi7t3XPamwbxgyDKPqRnZVq0S
061Mw+ueMXLl8W50Mk4p/f7oNPDPP1p7Moyh72GudJzt03ByJHmKPbod2d76
mNNeNg3aGmsFjhwd6LXE77zSnGl44pWfnBnfji7MXq7VS5gGv8uZ1uh1N1KI
zDb8HTUNt03T/gkYdaNnOQM3L4RMg4F7AIvHpy4U4lPvf+XlNEycVTQ+Y9GC
LCfvGVxwmoYAGhPzTN9sNI4vvpJhSbA9HidzOfSi16+ita/oTUN5yt/GQ/pO
NB+mPKqPpqHEgz/3jm8HMlHdo12XnwZWBmPfVrEudLPJsatEZBpqZ/Lif1S0
ob9TqY+6OKZBmux3puitOqTKruX8hm4adoZE09dLWxBr4OEh38EUfDifpEYS
3o5y38b1s+Gm4I+oiVrqUS2S4Z4zChudAvvSv629NmWo5RRVAkXPFCyVkt/9
pteFFiIEf5jVTgHsaj03lm5Gb2JQW33hFCxyL8qopnShaLLXaZNpU6Amx54Z
YtyFyOd+i0vFTIFU+JBdmHMromN1p5f8QPBXVRtfjNqQieer4OjXU2CU01bv
erIN4ce7/2q6TsF/074ZgZSDKE/kXU+t3RTE3NNE+wK9aBpX55F2awouTx5X
W7paiwoP5oku603BBmvgnpR8ByLRXDbhU5kCDk7DWqvbXci6WiT+uvQUHIvF
NZIOdaL+gOrvZoJTQF3MGm4z2YyorpMlOpyYgmjOrwZeA13Ic3lJ5DTFFEhK
k3y+9aMBXT4ndeHVwSTU6eK3qLS60fGEsv2LS5PAUj/k+Jo9G+Xuc27ljU/C
QJ02PmOxE73qYqC27pmEha3Oc2Gj9Yhrgbstt3oSnm+I7ddp9aHtcwZ/lIom
YSbibdAf23Zk15vE8yJ1EphXz4sOa7WjECmByUtRk7Bp+/aC1fMmRFqpJ+P5
YRIGRZa/kZO1oXeZL/F8PpOQopjP9DmyCFkY3LFWdZ2EcG8Rtpx7fahy0aZg
4+EkpE2+0nV534uGzjwwprs9CawRDx/RNzSiWMGlVwnXJqHkYl41XV0pChjj
PEq5NAmXGEpmTit1o/fDww9zZSdB4+ZuBYNJO3rr/C/5xJlJuJf0jrboZj9i
ppE64/jfJNA4loS0ZLUhnlTLAaCfBHIyVoeTXHVIYUs6kJiYYPfdPVT/0Y7k
KoLenV6bgMcXIovdP7aiWbLiK1ETE0AhMMH78agFHRict9DsmwDWfNVXjNrN
yBlrehjRPAF+xRf+aLdVoRQ2Fnxs6QTsG3uWNB+WI0PtDD+BrAkov2UgOfS7
FTEXX6e+nTgB96xrXW3KOtDLjHGzxcgJILui++pMSSviOHF4gIInIGKt3OO0
fitiWTa8dtFnAmRklO6yupajXW4JJ3aXCdA0zn6s1teEaF0q03H3JwDH6Ef7
Z7AejQXmlMiYTMBT8+ptsp085Fn5GovSmYC6OL96n+t5KGW5+pLsxQmoNpJ7
TRTbjlJIbAUrJSdg/d7EnYxvbcg00c03S2ACKj3rnv4maUHbGXqb9mwTYL+j
YJoj3oz4+C1Cx2gmgDyaUj5hrwolB7SMj5BMQODPjsiFpjK0/NfuKvnmOIy+
0IqQvVCLqObmQhpmxuGBMXkhs2oZ8tZYW6jrGYc6IGk925GJDrns/XqbxiGP
KBN/820ZcorW1k4vGwe8PrkwXq4UxWh+FJTIG4dKTjJ5zL8TJSs8+6WdNg5k
7wInLgpHw1i+oI9kzDicZ6tU1LvYiFxebH199mkcmEvT1aeW8tDPqTfOyn7j
wMHMSTSSA+j3u/v++s/HYe9B341EkyZUevqm06uH45CoHRmSp1qNbAQarr+x
HAe2zI9c5qut6Of7gsF3+uNgpPY15PfHWkQjp6ZxRnMcVGE4V2IbUOJsNTle
bhy8qYtfFNypRUNhkttc58fhNFXlDyu1chSXdsYijHcchg3x6mPhGEq8QzF7
h2Ucss+eKlt1rkZxFHkd4hTj4F+iV3VXtAwltgyzUB6MwZPfa/qUN6vRFZUl
qZSlMcDazawi3rciuTfnhDQmxgCn562rqY6hytE/65rdY3C7NL2LzK0GObW5
ue80jIG3m7qwnEoluidCvvisZAxUb8aGrB02I+2kGz8kssZAev4Se+2tNPQ6
F1mH/hwDz7Yqezb9WiRHG38+KmIMRiqCGlRMClD2PB11U/AYnEr4mVzu8hMl
sDCOHfqMwZLIQ3m9xlqk+EhBPsd1jKBH/nt37GwLki7nl3z3cAwoaIRL2+gL
EfOxNzxN5mNA3OTtueGugnTIrsZv6I/BoO/ogkVEGbI3/PxnTGMMzvZOesuQ
1aHDt8JTxxTH4EVYIHE0/190qqtxfk+UEE/Ob6rThdXohuONb5p8Y7D6S55B
40wZui6au2F8fAwOq3mcxhcq0NHFn56/aMfAkk/Psp3qHyolUXe2ORqFMblj
yp2ipSjCoPBLyvoojKyLXl66Uoe+qRhIN06NQv+lWhGOs3UowKzEPHVgFEiN
6Wn0aUvQiNQ8GmwahYmZrbryoEpE1pN5PqZyFJSe6Dx3265CMGpEKvRvFNrw
i8Y/dsvQW+nH8n5po4CdrPz1aLUWCYI6eX3cKMR7vLMjbWlArDhJxo/ho5CO
qRNflShDszQ3HM4HjgJbF8vkm6QK1CIiZO/1ehRy3pHT3TOsR197zgl8cRmF
bhUp9HChHsnyKVTH2I7CKcmk8IalAmS05Gf40WwUuBOOG/RcTEbD/TsPjfVG
oanu3EK4WDMqDL1beVNjFLqghcgivAl1e9CJRiuOwqLrtJmBTxVS7D1p8Prc
KKyZXuIYoa9BEZ/8mP7jHYWEP7LsNo5VqPvLzuD346Pwn5Ttvlt7PaLZt10y
pR2FR5nzH+bZy5AYkb3OyaMRcJyhlug2qUZtH2je1M2OgG829/IYM4biVLIL
qFtHYE9pWuQyaTUyEp3woMsbgUFOHa66h1Uo1rB9sylmBCSqc07k/wNEZS29
j70ZgSunZRKnfzWi2+1xJHKuI/D2EaPpdGEjUhiMDNsyGwFmXm3Ns6IV6HrW
4Ciz1ghccrFjkB2pQGd8ejQUxEbAm5tiWqe+FJVP4jSZOUYgxcRWM/NsH8r8
r6jhKvEIyDleND4zW4kaZn4/il4ehnkTq7dB9xpRwfPsezldw5Cw88M0Iq4K
uZ5k/L1TPgzSMVHaby79QFS6nKSTacOQ+1UuXnGhCtm9y7o7/HkYmg6vrQ2L
Aiq8Vy2x8Ipw/tMD+yKyRpSt+cPll90wTJBdaVUPrEAsnmGmx64Mw8XFcjqX
gBo0N3LT4p70MPySOJSZ/leL/t15dYVdYBjOcLi1crTlocXrbL4KVMOQop7d
4PO7HgWH2LU244egT+CEw9DxZmQ/bR4QPjQEo7cchf4plCGDzMTFY/VDUC7N
lDfZlotuHGnmr2cPARnT6HSFThVaZlDW5Y4dAnklV3Lb8FSk6GK3sREwBLTZ
XZZ7JBVo0Db1fNCTIWjvsxV3uJmFWhqUzvqYDwHlTSGfbpEadLMqTveJyhCI
52X3bXNWo4wv1VJxIkMw3vn261QVoPCfPEbVx4YgWGwBOb5oRRIZ3xIPSYZA
j2kvrburFaXmed6NWByEV4wkryKVC5Dt2rP3oz2D0Pf1h5LG9wpke2x8IrRs
EL5rtfN+16hCnzdjxQbTB+FDjMzUCbt65H7I6+cXNggNdH1RxIHFSLJJECl7
DoKR+nu/SuEmpFb3sK780SCE/pT3Yqv6itSo/FnO6Q/Cs4/CjzUmCfi6wlV6
Uong37007qdfOYohJb3CJDQIHGU1ismPCpF+l/+42PFBmLkTPKwiW4YOb6ms
yh4MAOnlg/W6mAb0sLWb69ziAJiyBsVX8dchlgbq7p2WAXDji3t6L6UBkXjP
T74qGoBRkdhq60oMmWy2nhJMHoAFjkpjGpJGZKExf3koeADeUok/diX6hlxk
H0pTvx6A5GvvtBO3alFwMZ1Rmu0ADHxd2fkvKw9VlrIOORkMgF1dwvVXenWo
o0iFill5AAQC+oUss7MQ8cDDhczTA3CFZSpA8V8hepIq926GcQCKT/26W9JV
g3rSyzq3dvoBZYl+DROuR8wU3KXHJ/uh6l9Shm5sKyrgKr79vakfHHISeXmY
6hDn+MA5zpJ+2I91tPlX2YtSNr39KJP6gUqQXvdrUT2yDyyrTPnSDx4+SwVz
emWosuezTKhXP6gR45rHv1ajdWYwQ9b9MGQj/u9fSxu66XMoka7fDxqN4WVa
CRWoTWQ+ykelH+R8SSZOi71BF8WFGYnO9AOX4bGJ/DNFyLemv3CRpR+K5YMs
7p0oRnWr1c2DR31wHl/gum1Ygs7Jmy/MLPRByyL3rewv7ShNYGagsrsPAgSn
T3ZhrcjX06PSvbwPQmcpIzTf1iGqJx8VJ1L6oOtSmumccxfauh/5/Ou3Pqi8
41T15EUtSj1hIBfh2wfGVCQnmc2qkSBFhUbaoz7oi6mmiiHPRtLmK6Zcpn2g
HpksF/UB0HWBQvPbl/pgEBvZt39Thrxec9xhF++DJsnqlnDNCnQ6vR2Xw9YH
xb+oaS6eLUfP/NRVr1H2Ab8DzaVyBUDllplhmWu98OOC0rvnkunoO90JtxMj
vbClff/7Ledu5PpFdpSovhccDTWJ5iS7kYX7aPj1jF5gMjppecG7ExXTjzyj
S+iFSHoJWbMKAr/f/XCPP6QXVAWvZOp516K5J+rnLjzthVRVw6QYl1ok+nX7
R9ydXpAt+fsxkImwL1UnU8Rd7YWSqrezAjktqKIqhNddsRd6Atm/BcxWoI4W
9jJl/l4wOJKhsHd3QoFskUnvT/TCvNW5IwmOVrQTrqUtctQDzkxDG1ycxUj5
OuKWmu0BJib3+bW0ZjTNaWe60NED5pXWxRRfu9CSkbFwbGkPKGd9qCqSakCx
dMd/xKb2QJPmaHzCiyY0Uk18RfR7D2iKTtJ0zdcgRgE28UT/HhBNqbUX/1yL
zusOroS69ABfFL2bBEU9osx2PJy81QNTSVRV4nvpqFJ+LTFEoweetWzRMa62
oGIL1hV9+R44o/soFx/QhLw5GROq+Xug4PyX2Jf+uUgzlM39GUMP9Oa/PJ1E
1IQo11hKEja7QTCQ1N+xJBGVJX0jmZ/qhqUEZpOTChjiMn78gbi1G6byQi+v
F7eh0gX+eyMF3RD0Looke5iAr7GIT66J3bBuM/TCMi0bZRgdP84Z3g1dpB01
XRXtiOeQ+VOkD+H+BTchn3/1qEeFdV77STfklAvT2hPwFrzKUhho1g1ylw0f
dXR5IaGmNRlKjW6442by/NJCB0qvpnirL9ENAqHGFoFJlWjbESVz8nXD9zfB
FKe6AQkU/5L7TdsN1pMfJrv+1aHWH0y00rgusGZZHGn89AHClKOXEye74ED1
zrj1ViOa4/vGy9bUBSe6EuooTToQFjI3mV/YBS4z5wfonEpRAa6Fbyu5C9Tv
m7x4QA2oUvzeSMmnLrhwrZAx+WYTInF8O6fg0wUC7jY6H7QwRCnvyvfMtgsY
5DhZWM82oR5a2nAH8y4wx9Kzg0i/wfJg/9MkrS4QNGiJEjyDoTaiM897xLug
4XGHhrRkKZJOkPJ/ItQFWTOz5bw0FcisUtCrkL4LnGp0fpXMpiM36bMB2tud
wPqCro3CtwoN0j9hZ5rphL4aFc3Hij/g6gCL1LfOTuhU2vymt56OPJl21GWg
E/5mdPjrEzcgzi3bh/UpnTDZItip5peHxi14Dk5+6YSe44utA7OtqM1hjuPl
207o0Ljt09p/DxXGZnrqPO6E0Efy+uNZD+GOTcEIv2UnuGO7pC+/hYLYyLXQ
iCuE56VSonthDcjluhFZh1InMPYKU32YqEAvQtVluYU74YzGy76QlT+oXiy3
68zxThhQmSs6qviBhv8zxYeRdgL9XalmD6I6pDPvzD6x2AH3+U8sezyLQG3h
nXXx/R0Q6lh8dIG2FZ2tevWxsKYDGubLzsTb5qF+8R/bu7kdELysgIxZS9HK
opCqVUIHEG3T4mpvW6FTjWXDENAB+rXcvx4m/0ZznPc07Tw64CyLZKgg+Uf4
Y54VzmXbAW0Rk/6TBxXIie15IJV5B7jZCcQXSRajpCvqf8lVOwBHqbvEK1SI
plavnPcT6wCj4rxg209ZiNOgdy+frwM0baIF95+mIJqLDIuWZB1gcHVkWc0q
C93uLOo7sdYOxVwzxh7eRchwMTasc6IdMvibPj7+VoJCF4iWDzvaQar5OUk3
Wxj6sZJ+0resHUSbL/f59drDAJOLwUZaO6RbHudivZGK9sTtzZmiCPdtYv9t
7WcjicrvVdJB7XByxuiSCa4AfdXJWbR+2Q5JDdzP4hGgj6ds9X7cbgfFqMUT
gySlyJ02NZ7JsB0G9ZZOV3Nh6INneZ2NcjtQ4rninEjyUfoHScc94Xb4PSHL
E5ATCHgRz7wDjnbgvc09aW1XhPSKJElcKduBT3trPLAxG6l/N9bGL7WBj0Ef
97hVHNq1ixzxn2wDrG7L76ZEAorh9yvFWttAz4b5BK63ABX4JmVk5rXBwrhb
2Z8HWWiTh+r8yZg2cEAcpg8169HtkeymTa82WGRXDDjVWY3cqDtqzri2QdNT
Bzff+FJk0RuwVXy3DfSFrkVsir5FGdNnMPMbbYAXzR/L6f2OpkqllO8rtoH4
Sr3zvtQ/xKPqEfxCpA1wt15AxlwR4ou4p7rK3AZHRlXLintZyAP/Y097pxUk
FsYp/J9VoUTZL996xlpBS8Sx1QhXhKosS3iKUlrBS4Pu9DpzGWp6e8dT7nsr
hFw5G+Th/QsVrCps8gS0QgMlmUffWBrSXrVlUnRrhc6pUP7ggGKkkhJkd/1+
K3xs7Whh5s9FGunP+W4atkLMUzbmT0n5yIXSt9dGrRWGfkcjvd9FaHFe/O3G
f62g4be/eIyuCj0W3PqsztwKox81Qn1elaPmk7kGulUtUL8peIlR+y/SiDlZ
+19yCyhGOn52iypGbwdoDVq8WsCE7XhCl3Me6nTvQ+dMWyBQm3Gp7k0hkjMu
k9lSboHwafavr9oBhSUN2QqsNcPIbVun/GPlaHmHVZLtYzM8/s9guTKiGqUx
Ckw90GkGKgm55/hDQHf7hzWthZvBx/K5K+m7QiRy7JPH6G4TGHizVkrMl6BS
u1Y35rEmMH2g/0QdYYgdGBsOs5sgwLeIYvduOWqvtSeNtmoCIrm0K++MqhEf
t79+6G4jSL9YU1HgbUBZzKdUW/sb4UFqs/bD1nKUJM79Mr2qEb4bX93AEfaZ
dfo4pv9iG4HP693OtX9VaDEh53eEWyNgY0HEeSPlSMtM/cKhHcFu+/ovkbC/
H610Wf0n0gg+w+G674Kq0TMnGy2X9gZopO6fumTdguIVheKcrRtAfLPaSPJs
NTp70+ztN60GMJFZXjIPqkEct36mBAk2QLmyc2uCZB3ivfpFgGapHhguN+Vc
ulCDHmnhtm4k1IOYV7GjbFM9otj26Ew6rAOVr+2UMY21yD+S1/fNWh2UPLyy
5IZVotwyVVvnrjqQHpK2puqoR26XntxfSKmD0vcuQsRrjeiiV8znFIc6mDvh
ZX6srAFRFz/Jif5YC8z5krlKvI1I7v2bwg7PWlDxPHjwyrkWpZvcuyp7pxYE
wq6dVX7ajK6nDKauSdRCBLksefm1VnSOn38m91QNjNE+jivLaEAhifzjFiw1
oJtWKmlN3YjKZA6p43DVEO45K8VQ24Qa7mtPpVVUge1f/2ZmgzZUNRefzv+7
ChIYbqxwkLYjs1+nYygeVoKfDZ/QwWw70tBgSJm1qIR9mvreVmKCHjC/ccqU
sQL+Gl0wiLDvRP8DWHSxnw==
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-3.941573420517098, -7.363696081864859}, 
     PlotRange -> {{-3.8832246892959392`, -0.14890589114177105`}, \
{-7.239860266085253, 0.43796031225028426`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.941573420517098, -7.363696081864859}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.8832246892959392`, -0.14890589114177105`}, \
{-7.239860266085253, 0.43796031225028426`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[Zeta] \\((solved\\\\ here)\\) - \[Zeta] \
\\((Gev\\\\ )\\)\\), \\(\[Zeta] \\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736878266481544*^9},ExpressionUUID->"842a10a0-18a4-4ec1-8f6f-\
0669642b4d17"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1: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

         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-4.30089531996961, -11.891041692862824`}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-11.718749336192408`, -1.0366232226267036`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.30089531996961, -11.891041692862824`}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-11.718749336192408`, -1.0366232226267036`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[CapitalEta]\[Pi] \\((solved\\\\ here)\\) \
- \[CapitalEta]\[Pi] \\((Gev\\\\ )\\)\\), \\(\[CapitalEta]\[Pi] \
\\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7368782667783823`*^9},ExpressionUUID->"140ae0ad-3935-4004-8218-\
83b6eccbd0f2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
zukXVxP9LOWsX6xogcvRKd9lqqjI5EXvvfe1BUorJeJNx6h4crZyy+aUFvis
9u9sRSkVrfXph9pCWkAh2Pqk1DTxv1J1VOG83wL1XmP+rX1Efwt4LNIvtcD3
J1TRuSbifv/+X5uzWQvU5S1ef0enYs3X/RwkrRawpzLeDRqhImOL43DWthbY
KnLYOHacii5pag8H+Fug88TrsZdDVGzI+FE7v9gMCg9cDOQJPiS2jd8Fe5sh
ZHdH5FgNMe/iBWeelzfDiwyTs2MEnlh3y06xb82wWnFropLQP3XWy5c9uRlW
AqKeDDQS8xb0ozA1qhmeFT1k6Zwk+DU83RP+oBmM4msdrxP8pklguc+2Gbb+
e2bC3EvMi/fargzTZthvvmm/NnGukqfHee9vBkb+D0oTgjTcq7SVn0GuGbpo
GFW+REWf4ub8EUozuBxJTgkToOGfyaJ/retNxHuST6eBjYY71a2GB4aboEi0
xEm5norpMgMthfVN4NC2zOreQcR7ehTe/NkE5j8cfeXmiX11CaP1pDZB0maL
1IJ2Ks5fjL39LLoJPB+tudNXiHkUMlOL8WmCa8M+/ZQ54r5m+6WffrkJFidv
joqy01DFavyU+Kkm2PCg9kIriYYmMvlWZ3SbQFln6uC9ZSo+uC96TkSpCe71
uqgHE3pvy6ieyBFuAl5njW11G2l4y1dP+wh7E1Cy5T1GGWn40yYrImuqEQRZ
AsvbCftzHiF3oY5G6L55OLGR4O8WpdrJ8LcRlN5fVvhL8LW+2RlpktkIWYEl
2UcIfQt4O27xJDbCiw2erIViNLQ7/9hOOrQRFLM/uh0SouGQi95OjRuNsOlx
TjUjkW/Hs4XXr841wrvG/uYOQs89RSlsr4wbodx50+weov5fv0Mlb9IagU3V
1DCJ4FNTIfJDS7oRRMUrFF1pNAwSjk0OFmoEcubzEpEtNFyMPGggv94AK3mn
TxlJ01DLZN9G5cEGONkpu+DFQ8N+MftTwzUNsK+E8gtZaDhqcWLry+8NEHTx
vyIPIv4lj+Drl2kN4PKpRM6dOHcUMRrteN4AByU9te8R/PllhJWS/Bug5eqm
e1UEnsLh1vFw1wY4V/G51JCPhuzZV9d6TzfA/WrRA1vUaVioPpUUqt8A+Xt0
r1hI0rDA+r9xU/UGiHZ89ZKJgYZeYvyJRdIN8II3dZB7Jw0PhAvfvMXXADmm
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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=100\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736878267158618*^9},ExpressionUUID->"07245151-dbe3-443a-9fe1-\
ed1d926aca6e"],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.736878261244688*^9},ExpressionUUID->"beab133e-4a34-4d8b-bf2c-\
6d6a753a20ca"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
PVlrH4XsexTRwOsU7P9oN/qpjPBv49dKekbBiMnap4NfRiFxyHvNyo2Cosk/
bpaljELP2ZdT/7lQkFncXua/sFG4dVUmfMifgpeLfDM4vUbhzdrlgcOvKTj7
MimzxWkUjqudz4z5j4KmuUe45y1H4RIP5e3VIKI/121vFZ4ehX8JB74VXaFg
maK8X5fmKDh+MrszTuBNPX53t6viKFzZt11k1yMKHsk+zBQvRsTLBaVPBRLz
oZpq7rFxFEpYWU/9ekdB/dIJl5DVEYjHTH73EAraqnHJSw2OwIhIwH2pFxSc
clf1ulY/AkJ1WXKPCf0iBwO8DUpGIL92lZwfR+yf2vRQa9YIgC/T051vCb0P
2z7//m4E0v7TfVqeRex/8gkF9bAROCpdXM+dTsHawDJz4YcjoMt7Y7NBLAXd
buaZaNwcgc302dSyUAqGzB18QjYZgU0uDexP4ol7VCgmG3VmBMQK0/JnIyjI
Kv+zOPrwCPjeGRcn5VGQvPeBBv+eEbhRdq4j7BMFC+cz5SQlR4DNYaxp73cK
Mpw7e+gg7wh0avZadBD4vr/dp6axOAwjtLHv+75RUNGu2qp1aBik+RxKkwk8
PwZrgwNbhuH9n0Tx2CQKbvt+JS/7zzDUj2RczyH4Rqq3cG76MQxTDt2RHz8Q
9dbGE3elD0PkYcnfQPDzLz5mpRkxDNnK3pY32yioqvO2X9J3GHZo6Pi9/EhB
XrLkuoPTMFgEGV2JyKdgCr8O/znrYUj5aDbWnEnBjQLJD6WNh4HrJKO7HsFn
QuSV2MKRYSgMZ8oqz6Dgu8dGE2V7h8HzJ6/unhYK0rNnjdOlhkFlz0m70FYK
qiiZWQpuHYbqJ4Hekg0UDJax3cXMNAybB1wvShN8Y30+3NwwNgRnPvDsjhql
oKQ1WdynewhEXyRI9HQS92pbtt3rmiF4fvc491eCX0vLqP5c3hAMtHxN1a+n
4G0Ka8+Zj0Ow1T9Mk15HzPexwz39iUPgYzH+2ZWof4hCu3PuxRDsUmmsPdtB
waMGWqvnHwyBf7hzmHoJBRfS8wxv3iL8WRVz/2oIPAzzhMRDUEUlM1oRekUG
/6ZEnh2CrpkzA84Evq+J+d79GkNw63i67FA7BbMPnzrxXXEIIv6zTTq3RMEb
dZW2gTJDkDu+QqqromD3tTNfm7YOAdW5xzSrh4KvtiSyRDMPgdDKyjbOcWKf
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
57l/w5XfF+9FHlfF/wEUV9k5
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
eH7AaaZdOzwbGfg/QALc+g==
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
+R/Lz+LH
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
+Quqfh4vvaJGQf8DPOi95A==
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=10\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736877993588223*^9},ExpressionUUID->"86392a3a-9f82-4242-becb-\
9daf15e7414f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1:eJwVV3c8lu8XtvdM4Wtkp6TskdGNrGgIWQkpURkJKZWsJKISlcwoI5SdfR57
7733Xq/12vze31/v57zPfZ/nnPOc61zX4bN20rchISIi0iElIvr/r4j/uZYK
VwbsykRwfLsxJ8bpb/D0Uxcd5h8U02R0lRM7JySivveHFhuNoaZ0jGTFxP5k
xr+op8Fes9xZ85Biw6JwmkJ1jDRYIWmh5b9ENmz72oVVyTkqLILB7fb4d1Ys
aLSl88tjKqxm4NqS2CNWzJj8iXw2GRWWlJvHXjPFgmUV4uQ4Eigx//eXunrl
jmOxW2F5RDqUGMO3yzfxhPuq+web1NsU2Oiy1Vql2nHM2w9/dCqNAnM0Z3v/
xvs4ZsRVG/FQgALbvc2w9leHGfPm1JIxmiLHbg6+fzBWdQyru5j9qvk3OSZp
q+IWLnQMu3Deh93ZhRw7wzMTQlnIgmFLPS3zF8kxfQ69HvsVZuyFQ3XdBh05
lqcjWkvCfQw7cNPtvDFEhmm5MSWf3WDBXM3YDOX9yDAdhRimUodjWMbNV0yP
zMgwd1qNdNYlZqzw++VYVUkyrInK7HyOIzP2hexAPoqWDKsI9jeyomTCzB7d
/uNUToqt/il9I1bPjLnjLn/OjyXF/Haa4pNPMWEvMQ+J+Nuk2MHjY++arjBj
If1DX3gukmKUbHOBIxtM2ETS+ZZgHlKM1TD7o688M2a137M8TEyKaVBFH6e1
ZsIY9ZlPUEyRYNFa0ZXf8piwxvdCUVu1JFjUvE1rjBkd9uQE05/kdBJsel/T
LHqWARt8mv2M/zkJpstTqpI1RYf5RBb/6rMkwRoLRC5OLTBizl/EI0S1SLBv
ZkszrIpM2K9dcbrjYiTYNSv9Re8aJkwb8lPfsZFgOR9usPh9pseKttme+BOR
YNJBu4ZG/ozYmWcJSWTzxFiqtrYAaQI91nvfu8qplBiL0wsq5bvOjHVcX1vR
TyHG2Ow4Tj4/RY99cWz4Eh9GjH0QuF62KsiI/aL8GnzLixib+F79n64/HTZ0
8NPmuT0xNi3/ZcchlR77vCw0tGVCjPVe+qWh7kaHTVkyVHVoEGPZ40/kJ/vo
sK/Ckw5feIkxs/4egSxxBqzXff7dUwZizId1bktVlR6LFZVVTNonwrRaqOgm
q2kw6ssiM0ILRNi18nKaGA06bNL8mDxpHRGmXa1Oby/LgIlIXko1zyfCjtIT
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
sQL+Gl0wiLDvRP8DWHSxnw==
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-3.941573420517098, -7.363696081864859}, 
     PlotRange -> {{-3.8832246892959392`, -0.14890589114177105`}, \
{-7.239860266085253, 0.43796031225028426`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.941573420517098, -7.363696081864859}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.8832246892959392`, -0.14890589114177105`}, \
{-7.239860266085253, 0.43796031225028426`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[Zeta] \\((solved\\\\ here)\\) - \[Zeta] \
\\((Gev\\\\ )\\)\\), \\(\[Zeta] \\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736877993834016*^9},ExpressionUUID->"5c771960-1bdb-4de2-a7b1-\
20d15392aded"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1: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

         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-4.30089531996961, -11.891041692862824`}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-11.718749336192408`, -1.0366232226267036`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.30089531996961, -11.891041692862824`}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-11.718749336192408`, -1.0366232226267036`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[CapitalEta]\[Pi] \\((solved\\\\ here)\\) \
- \[CapitalEta]\[Pi] \\((Gev\\\\ )\\)\\), \\(\[CapitalEta]\[Pi] \
\\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7368779942139587`*^9},ExpressionUUID->"de312f93-d41e-4aba-9004-\
5f3712b29c21"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
zukXVxP9LOWsX6xogcvRKd9lqqjI5EXvvfe1BUorJeJNx6h4crZyy+aUFvis
9u9sRSkVrfXph9pCWkAh2Pqk1DTxv1J1VOG83wL1XmP+rX1Efwt4LNIvtcD3
J1TRuSbifv/+X5uzWQvU5S1ef0enYs3X/RwkrRawpzLeDRqhImOL43DWthbY
KnLYOHacii5pag8H+Fug88TrsZdDVGzI+FE7v9gMCg9cDOQJPiS2jd8Fe5sh
ZHdH5FgNMe/iBWeelzfDiwyTs2MEnlh3y06xb82wWnFropLQP3XWy5c9uRlW
AqKeDDQS8xb0ozA1qhmeFT1k6Zwk+DU83RP+oBmM4msdrxP8pklguc+2Gbb+
e2bC3EvMi/fargzTZthvvmm/NnGukqfHee9vBkb+D0oTgjTcq7SVn0GuGbpo
GFW+REWf4ub8EUozuBxJTgkToOGfyaJ/retNxHuST6eBjYY71a2GB4aboEi0
xEm5norpMgMthfVN4NC2zOreQcR7ehTe/NkE5j8cfeXmiX11CaP1pDZB0maL
1IJ2Ks5fjL39LLoJPB+tudNXiHkUMlOL8WmCa8M+/ZQ54r5m+6WffrkJFidv
joqy01DFavyU+Kkm2PCg9kIriYYmMvlWZ3SbQFln6uC9ZSo+uC96TkSpCe71
uqgHE3pvy6ieyBFuAl5njW11G2l4y1dP+wh7E1Cy5T1GGWn40yYrImuqEQRZ
AsvbCftzHiF3oY5G6L55OLGR4O8WpdrJ8LcRlN5fVvhL8LW+2RlpktkIWYEl
2UcIfQt4O27xJDbCiw2erIViNLQ7/9hOOrQRFLM/uh0SouGQi95OjRuNsOlx
TjUjkW/Hs4XXr841wrvG/uYOQs89RSlsr4wbodx50+weov5fv0Mlb9IagU3V
1DCJ4FNTIfJDS7oRRMUrFF1pNAwSjk0OFmoEcubzEpEtNFyMPGggv94AK3mn
TxlJ01DLZN9G5cEGONkpu+DFQ8N+MftTwzUNsK+E8gtZaDhqcWLry+8NEHTx
vyIPIv4lj+Drl2kN4PKpRM6dOHcUMRrteN4AByU9te8R/PllhJWS/Bug5eqm
e1UEnsLh1vFw1wY4V/G51JCPhuzZV9d6TzfA/WrRA1vUaVioPpUUqt8A+Xt0
r1hI0rDA+r9xU/UGiHZ89ZKJgYZeYvyJRdIN8II3dZB7Jw0PhAvfvMXXADmm
w+cKiPljn6J8S5yth3Grk5cfE/X+SI5movfVg7qlz9jdvTQUP3HtMWNlPUTJ
fIq79h8Nvw9L23V8qYf3mwyPxMrRsKEr5olbUj1InzjW/0CDhpkWgoJikfXw
NWx1/zgxHxJrpCex3vWQFvEwtlaU8N//H93ApR5eFoPwLyJfyCQlP8iyHhy3
nNJKOUpD2fKpPez69WB/W7hZbhMNM4rYAkx31QNHBTdeUKXhwtV9KWJS9VCM
cr60AzSUKXir9o67HrZtfXIyk9Cz8rUAt8pEHfRyLHwxfUDDCK34saTeOgi/
GbkxQ5GYD6loSeHyOjC+LXh1isiPoUO9efl1YHDHe/I/Iv+XiQqp+ZQ6MJq9
U510gtBXya7j25M6YJhTeSRFxDNdDRiietfBF/47pobGhH7qblK3LtWB05Fb
f5I3E/Vxc0c6WdVByWkmEdVbNBxrbb6RfLAOOIV+lnYepGEVg9ztBqU62N0X
ouxvTuxXorK/i2wd/BZ/5dukQ0PLws0P8nnrwP2eUt+vmzR0V9keaLBQC6Vl
opwaRHwrr4uIwEAt+D3ZK6iRSEPjFopydG0tLDu1+YVcoqGnwKLeHqiFJ3SH
ZMFdNBSbv+T4N7UWSK/u8X25RsNua4nVTVG10JEfeU32FMHHaUj0bkAt0b+L
+O05DfNfZnkaXquF+SPf6RfzaHjuwpcOaZtaCDt9cMA6m4aKHUfCY4xqQex4
uscnbRq6mliw1GjWwtwsA/OFqzS8E66nunFrLTyqXKsQi6bhX8VPdXKCtRCe
2Xoswp+G7RtOzUUw14LLq+yjnIdoaEi/LtIzUgPO6dU2Dx8RfCJr/yQ018CN
S9OJqsQ8bf99Lyy/uAYUggacgrxp2Kz0emHpUw1EhW35KRdPw/ERWe2ziTUw
ERutPfqShlvKfhCPhxr49Cx5LoWoZ0jM7oC9Rw2ML88a6WfS8L3Vx0jxSzXg
/S3DvNqKhs7Ct4M4rGpgp6fvunUADZON9D6watfA4O29f5R8aNg3aaTgq0j4
X2d6U+lK6GnWuJwnVQM8D/NTwwg8rr18IzYsNRCw43f6xWQanqn92iQ0VQ1e
91x3yAfS0HzkZURtTzW8eETrT0qlYfgww9haTTV8T1e/dDaShq/HMzb5/KgG
DQZXP4cSGrYIuJrNpFdDHpOBct5bGi4rXbESiKuGAr+Yj5lEvl2Fz3+rPKqG
3QXH7zcQ8/3MMGfE9m41hLHEpT8h9A3bcuno6zPVMFdZUqN7h4Y3udMSBMwJ
f9MPtzkTaPjY8+efC1rVIL14oqGzjNivx7uvLm+thhwr+3a7OhrOyXvmropW
g3hTgOwbon9Hv+5mcmOvBtLOvjT2AhrqPT9hMDdaBSnrlsvj5TRcso/t8O+t
AiUjtYYewv5C2vc7VlbBpQNOOY9ziX3ySc7Myq2CKN/nYb4pNJyV4FDY9KIK
yqyyI15eJvTqyC6ffVAFNQEZ/D5pxLxz1hTLuRF4U/DzeTUNrRsD5wvOV8GN
6uySvcvE/dIvh1bHqsARxHIoM0R/vitrXaRVQWppSc4S0lBC2yPkjnwVqGVL
Bu4g9JaKsdOeJFWBytP0C4YZNPSYe71ssFgJLoN8kOJOwyTVqOiGrkqo1Lxe
rv6Hhr9tvkl8Ta0EE8VApw3EvJUHnPNUe14Jd5K6gzgWiXomqbMSgZXgTl+s
xCkaGkxeEqC5V8L2EBXmnHwa7k99ZG9ysRJes6qKxNFpqJ9xW+q4eSUI/ZKT
Na8i9oXdp/GCTiXUSv5HP/iRhiN0pYCZDZXgs+nd4cm/NLy2ef6pHqkS7j9L
ehYVQcN/mz6ZHf5dAUvJFspfif7ov9hUsiGlAsSdPxettNEwoIXbrOJBBXDJ
CxsFTNCw9mbTvp2nKsB2RfJyYw8N1U782DOvVQE6Hx/uaSHyRyS3XZKZ+gfm
GxZ0HxN4Y4v/7RYO+wfY0Wn28AsN0/ll+hwM/wGfRJ9F8VZNPN/cfsB26z+w
OFhd6sGoifLkJx6dS+XwfSljMn6F+B/YV7qTuspBMTJEY3MxDUWAv3Qtuxxi
xPrUldZpWF1yhTn+bDks9Y5OKhJ6SW30Nw1fKoMUxqM0Vw5N/Ejaol3ZXAZ9
LaL+oUKamKy08W7G7zLgLrs+qiaoidO8rwQ2vCwDry8Lz3ulNXEkMeddjHsZ
TNmRjWU6aXjQUk9jzb4MOoa/TO7dronr43VnN8iXgYH+5o2qA8T7w/nCQdfq
UpArH4I8dU1MoMm+um5bCrrZ8dL1ypq4/bhlQPTBUqAE/JaR3aSJoqffpD7a
XAq1e2Tev1PSREnjKBmu0b9wKNyJq7eShpcPTswfS/wLnP3yXw2iaMi24FGb
vPYHRls8lDm1NdE/VtLHb+oPRPz6kCPMrImffmhful73BzyObeMbVtREd12X
i8Opf4A0YXRMV0oT9z548TTV6Q/0CqoKjzhrImeBS058WAk86KVs37FZE9WC
/fJrPEvAQ/dbsCCbJmactDNWPVcCaXw8ZmkbNdEktTVtahdxzgi5+iRbE3dK
Sw982lIM6xZ3fH8Q9tAk6W5rSjH8CDiTnLlE/N/3rHG+migCkZMPDnkxaGLp
RYO+9F+/wSMwLOucuSb+HkrIkH73G9Q//o1KuKqJlm+3vWBzLIRuEbz91VsT
9fX5UgetC+HLg36VwGai/1bHtpzi/wVP/GOsvu/UxP8Bb0btOA==
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=100\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.73687799450576*^9},ExpressionUUID->"328bbb11-9784-4a44-b5a6-76a2f5b91ba8"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"Eq1II", "=", " ", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["cs", "2"], 
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "-", 
        RowBox[{
         SuperscriptBox["H", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"H", "[", "\[Tau]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"w", " ", 
        RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}], ")"}]}], " ", "+", 
     RowBox[{
      SuperscriptBox["\[Zeta]", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      SuperscriptBox["cs", "2"], " ", 
      SuperscriptBox["kwave", "2"], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}]}]}], ";", 
   RowBox[{"Eq2II", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"piC", "'"}], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      RowBox[{"H", "[", "\[Tau]", "]"}], 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", " ", 
     RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}]}], ";"}]],
  CellGroupingRules->{"GroupTogetherGrouping", 10001.},
  CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
    3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
    3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
    3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
    3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
    3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
    3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
    3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
    3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
    3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
    3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
    3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
    3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
    3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
    3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
    3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
    3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
    3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
    3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
    3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
    3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
    3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
    3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
    3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
    3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
    3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
    3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
    3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
    3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
    3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
    3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
    3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
    3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
    3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
    3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
    3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
    3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
    3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
    3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
    3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
    3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
    3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
    3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
    3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
    3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
    3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
    3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
    3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
    3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
    3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
    3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
    3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
    3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
    3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
    3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
    3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
    3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
    3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
    3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
    3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
    3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
    3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
    3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
    3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
    3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
    3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
    3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
    3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
    3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
    3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
    3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
    3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
    3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
    3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
    3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
    3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
    3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
    3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
    3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
    3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
    3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
    3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
    3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
    3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
    3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
    3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
    3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
    3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
    3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
    3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
    3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
    3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
    3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
    3.7352971834201117`*^9, 3.7352972215902157`*^9}, {3.73598066087808*^9, 
    3.735980683558736*^9}, {3.735982701409083*^9, 3.735982722979671*^9}, {
    3.7359898364984417`*^9, 3.735989860821068*^9}, {3.7359942581647882`*^9, 
    3.735994270382619*^9}, 3.735996823468211*^9, {3.735997134764554*^9, 
    3.735997136615862*^9}},ExpressionUUID->
  "d6a78c9a-d45f-432b-a462-34c6b925f88c"],
 "\ntiling factor = 64  , nKe_numsteps=10,  Kessence source gravity= 0  , \
initial redshift    = 100.0, boxsize  = 400.0   , Ngrid = 256 , Courant \
factor  = 48.0\ntime step limit     = 0.04   "
}], "Text",
 CellChangeTimes->{{3.735981823189452*^9, 3.7359819188759108`*^9}, 
   3.735989740965366*^9, {3.735990387929201*^9, 3.73599038804593*^9}, {
   3.7359906368439713`*^9, 3.735990636912073*^9}, 3.73599444422113*^9, {
   3.735996436208637*^9, 3.73599643630416*^9}, 3.7359967540383253`*^9, {
   3.735996929849309*^9, 3.735996932769126*^9}, {3.7359971662645693`*^9, 
   3.7359971677409067`*^9}, {3.7360006963892603`*^9, 3.736000696808218*^9}, {
   3.7361650526073217`*^9, 3.736165068308145*^9}, {3.736165747309207*^9, 
   3.736165747594521*^9}, {3.73616615885612*^9, 3.736166162369762*^9}, {
   3.736169582406474*^9, 3.7361695869669228`*^9}, {3.73617725494965*^9, 
   3.7361772569523*^9}, {3.736177312341321*^9, 3.736177312605173*^9}, {
   3.736180155134595*^9, 
   3.736180164817215*^9}},ExpressionUUID->"f230cbaa-1714-4069-b382-\
2c8ef3be4b7b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
pjA5C9qGw+2UfMD/AfiYeBY=
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
OJWVWy9e3wkf2DcofiDjazQ0KpZjdcIeT8NzB0n/e3ypXr1CXVAp+F3SJJyM
h9PJKkGrC6Y9RwcVHpD5WPHYZepUF+wgxN++9aBi7Cq7qVmPLjhhGbw3jtS3
dj5FpYQuiGnxN9zoTcVjntH1HiVdoBDx85PPHSqqZXsVrh/sgns2a7wYTlRc
X1Byup+3G9ar67n7ulBRTLHFvYjaDUcVdv+8fYmKRIibUKZhN2gk6Eqa3aDi
1bsJD185d8PXkc5nu09T0bDON/JIaDdUVkpfPmBF9vdoqZ5YTjewias0uh6j
osSKG/qGTd0gdzY1+Lc5Fdl0J/4r+NMNM3/CqiRI/Sz3s+eca3rg7hIRt5vs
589fBM4qifeA2UNTUV+gos3Wx2lNKj1AnztedpTUrb2lq1VoPeDKZxLvupOK
N/nBQ82kB9rnvYxstKnYrMDvP3quB1qoQVfHtlPRqPe1gf/VHghy7GqjKlJx
B0O3ddi7ByajvvQ/1SDr+d9rznuhPcBfeEqgU5aKDySmuzmTekAvRuKPiDQV
+9OG9d697wG20dc7KqWo+De6Oc/jaw/IpnpZKvBTUcW9fl6jqQdab9yxSiNZ
ju1yk/1AD5y+ZQX3yPP/yVVobOR3DwwrRHvCPwqu59PvE+TuBcaqjGYfHiqq
RqLtbqFeqCn688BqkYJEUKNRkHwv0LjkL3QvU7DT1mpOUbMXjMZY8Zv/UnBq
w82Iwwd6IUfv2waBWQpOBFuedzcn148GNH6YouDkGeXx23a98PmW5aVsBjk/
y96N+Lv1Qqip1rg2Oe9Cr6yd7ffrhTK6kU0GnYJmWysL5yJ7oaiP0tNKzr/m
NvmTsam9cDFbWZO9n4I77Fbk537shVM/Wrs4Oigow/PNeHt5L5ikmR2z/0nB
EfmW9u8tvbC742jKnR8UpDWu0P49RMYjFinP3kzBy2mPl17P9MLLjKKaNnL+
CtnZxuWs6IOnLi/umZZRkP62cfbCxj5Y+eRzQG4puX9JAN89hT44LXxI9nk5
BXlcLS6d0uyDel582IIUNP1E1x/a3weUtUZ8Q/kUXLPOzNPWrA/4vH8Q1cUU
lKJeWpd8sQ+sP0y1HCDvh6XtG7mdXfvg1B7tk30fKJhlft2f62EfpLuNfxnM
paDcB86Ttk/7oPZtnGfjGwoGpQjW7nnZB4/DOY3S0ynIL5fbm5TTB6qD1+Or
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
U2a9Dw==
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1:eJwVV3dcze8Xb1HSt4GQUbijRVEZ6d7OFSKkKKWUkUgkK4WsIloyUkJJW6RU
mtTniKamhtLeu+69RWn5Pb+/Pq/3632ec85z1vM5K23O7T8hJCAg0CMsIPD/
b0Cz8SL9EGl807JT4KiUCqrcW1P21UkSTxzfryHhrIxL75k4P66WwH+zO/ep
rVLGNQyVbZPxcxHzE5s9PBRRPT4x3LVIHLebNEsc9lfEYK4+o1BKHH/6vij8
M8bEeQqMCNMnYnjC+Ze6Ok0RzWdd3JQsIoZSCY+Z9XFMTMrkblwSIYpaaa+S
I18xUdg93kFbQhRjBM+/TbdkotvdP/+YcbPRWtI+M8yQiWbLCp6fps3Gl+Y3
Pa36GMgT3LdQongWXjLXf6grysS4hBtlQhaz8OKV6Jw/XxnoM7ZKa3RKBH9B
S8TmOgY6WS4y3XRXBA9fjxFPDWfgNZu6tCm2CIYXmayeaGLgQfvTz+JqhbH8
y5wDm+8z0IVr4J8eKozzF6jOut3CwIu9FUbDmsIYULRT+W8xAyVdZm/P/COE
Fi+/50UfZeC+nB3plz4KYaxXlISgAQMvZOzaZ2ElhOzfpxn5xxhopLTFz1JS
CAPTmDeztzBQ+UpEjEifIL5xyviguIOBST6fwkWfCeKt91nN6xUZyK4xKyja
J4jSwrJOxsoM3JUqs9JtkSDqrdynvaGJjpfGi/+6Dwvg2sCwkOi1DJy7WKhc
LlsAXU/FjlyZy0CFWYv0H9wQwIGA1RY7mul497D/5bpdAjhXaWQqZoaOZ+Mb
3tvMFcC33ZaLon/RsWzyGf0h9Y/6NKtPNVecgSdOm68vM/hHOXnEuu+Mp2NQ
v/f9BO4M5dIj3SZSQMdwg6J1n+/OUPFrI/Njquno1HTb94zGDPW+MXDoXAsd
hW7HL5cvnKbmy48cX5xOR0uz/1wa7k9TcaqutkeT6Hh9Zn78r7XT1LtzRZEv
suj42yDC5FvHFMWYqUGd93R8fMM72//mFPUocG3QuiI6NnzzSpBRm6I67mUG
eHvQUbz77Ik5LZOUdtX2tULn6bh5pbEjdW+SWnN9ePmFx3Q84PL9TcrOSUop
1OT2RV/iT8zrNNnpCepqh2/ZfU86bv0TO7/n9QRl71Rd63SXjqffnuUl2kxQ
SW0mb4Rf0jHatnrLNG2COj86EPTxAB3/O/WkqfPHX6q667vZH2s6hkmKy1sH
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
s38A/wfIsNsw
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=10\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736180087726618*^9},ExpressionUUID->"179bb151-fdc3-48e9-8a41-\
6a1065c01c7d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1: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
bg80ov8B+N5dYw==
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-3.9928520973313697`, -10.62548650304257}, 
     PlotRange -> {{-3.9122674797040218`, 
      1.2451480484462039`}, {-10.410341344987883`, 2.92865845440263}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.9928520973313697`, -10.62548650304257}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.9122674797040218`, 
      1.2451480484462039`}, {-10.410341344987883`, 2.92865845440263}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[Zeta] \\((solved\\\\ here)\\) - \[Zeta] \
\\((Gev\\\\ )\\)\\), \\(\[Zeta] \\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736180088201371*^9},ExpressionUUID->"d7bcbc54-a514-4ab2-bcbb-\
5184c54578fe"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1:eJwVV3c8lu8XtrK37FKJCklK8SWOSpIRTQ0aFIk00ZBR9iiRjMiMlJKdeR6b
7L3Ha2/v+9qzn99fz+f6nHM/Z973Odcuk4fn79LR0NCM0tPQ/P8b2GsgqBnO
TVA/ftko+SBKSLvJ1hY94ySg7UuNkL8oIep2wfZDMzvhHx0mZ7SJZSWlNVZ/
sRHerxmL325iuV/J0a/+shJvytl0hAJEiTCypmQFFyvxEZv/OG1i3h2SMRf9
mYniNPcAllBRwnDLE6VUBmZCf1riycOPokRKNllRJIaJSIyLog5sYvo3v6z+
Y2ci2jv2s6j4ihLOLgv/9iQyEtbi+0/0B4oSl7eVh9zfzUgcucKROrOpT6E9
J8BetYVYTw9XDd30PzHpdS3d1S0E/f1D1/mfixLei+IKc2sMRCVjUsNykijx
7JrgRSUXBuLq46TytiBR4qVJe+aaKgPxp4CIotn074rF/aDENnqCHBHfdCtZ
lLAjnwn4E0FPjI68FFf/JEo8GavXnzlMTzjT8swzRosSnHaMp7IX6IiieL8h
zk18rvD0n6dpdMTt9Pljtpv+Ps7SPnfViI7Ifz4xPbl5Xn/f8XfXOOmI0r3C
F/MrRAmp5zHxDOO0ROP3RtLp/+fDOyeaKYiWeEd98sPLWZRQbblc/vccLdHU
djFr+LcooZ3Bs8tZkJa42LmPbeqJKPF0qWr5zQwNMaRSdNt50x6bEF2dcD4N
YSjyceHVZnw7tghq+r6mIRjFSw/veStKuNwIsGnXpiHi1y4d19v058Gvrp8m
bDQEU1qwrfBm/mpXgyTe4z8sPfGu7ZqjKHH3vuGR2jP/0MPs8XSIqygRPOHl
nkTeQL7YfKdSM1Ei+sxf+VyXDSy26tO//HQzvz1OPpaHNvCKHqNZgo8oQef0
a7tYxTpy330rNL0pv3aZw67LfR2Vz6mU/XAQJew3+H51HFzHAX29FEkPUWL+
TMyF4sE11CRxO3KYiBIfXnvlBzisYSNvzG4XF1Giq9gziefAGgqdS3/PdUeU
YB15cJelbxWV5YU0I7RFCeVdBtbotoqWHpItjZqixCW7ym/pWqvo80l3SHLT
X7r4yEz+9RW8ltq3U/OCKHFyIYFvNHIFMw0kfwvLixL3vz+gJJus4HEJ+2Aj
flEi7k7z8fXdK8hkHRi9TVqU4Ljn3zPUsIyMPo8XVg+JElGcrGLGn5ZxkcTS
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
ovI/pbsJl/twt1GZv6YsN/HrmOsB2NuHNr4OB/gluAl+p7IeB3IvZm7w0BcK
cxN0d8iHuQN6keXCeXaWZS7iWljgWUmVXgwevqxfmMJFZLbZSXT39+CVdWbH
I75cBNMHk/JArx5MD92cXnpcxI57Nxn85HowNW1akt6MixhNWGOKa+zGwRsk
RTZmLqI3a/tTjVfdeLVHyOnSb04i7EHU1YFd3Wgm5MP2PJmT4C5h3SVV04VR
J4jB7necRGlV5OFPT7tQUzX+DVmHk7h0tNLKXLgL7xtqle3dykksDA7ZDhZ3
op4CS3b8Xw5if6Llj8LHnSh+5mUp9y8OQicrxY5dqBPN/DNF+rM4COnfCdSx
kg6M2luiOe3AQXCGPpQbfdSB/NqtNNF8HMSHYwnqGjs7kO1rzOdLk+yEPf9/
fp2V7dgplkM/SmYnTsn+qPlp044MLb6KLlPsxIX/Ir8zSbSj6tPrV6e+shMj
4Wc23jW24bY2PkeLnezEqr//9mDnNkzurIi4c5adkLBi0Os92IZxxx7vjaNl
J5a/Eb22Pa14s/KwiMsm/hjF3r/i1Yosod795vFsxGTqvRpraMXXhwz6fG+y
EQck6s+azbQgVzRRFnKfjVDsc3ijG96CNUmMlI832IiEZzJ0uWdbMCGJMP7D
w0bk8rRnsdG04JsXW2oPV7ISvW9KKdPJzagp0TUnH81KxEyI3Ws1bUa/bZ5i
9wNZCU8fU3s2/mbcd/bhs/a3rMQZk69bxoubsKdsYc9WcVZCxkSMuPyqCR0L
F5mYKCxEuF1aZLRcE+Zz9Ql972IhBJb2Prwz0IhDIfYWmTksRGhQKg17SCNW
TSiGSGWxEHf3l/Ip6jain0Z68PoFFsKgcj+/278GfP9jcYoqyEL0DbBM1fxp
wDYnF/dABhbipULmwwyrBtw6Td/4i8pMjEYvHnHd0YCx/z1kni9lJq7RHswO
aqxHvzPJHIuuzMQxX37jJp96pLI92lNxg5nYcjdjsPBkPXokM24fMGEmRkpE
v3gs1qFM66rYrX3MxPLaIYXhX3XoqcOvMTLFRHhLr/owWW7iXX+Ra5NH7ans
NG0Tr0NX3d8aW34zEdWP6YOqMmrxdPM9sscbJqIi6USJl0wtWqPy4jcbJuLG
xWnVX19q8ElsjEr1P0Ziy8nvlEChGtRJpK1M4WUiDC90cA25VuOIeXvyxiAj
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
         
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-4.352173996783881, -7.501621150207247}, 
     PlotRange -> {{-4.266061349934187, 
      1.2451480484462039`}, {-7.371528374908047, 0.6942236936422133}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.352173996783881, -7.501621150207247}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.266061349934187, 
      1.2451480484462039`}, {-7.371528374908047, 0.6942236936422133}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[CapitalEta]\[Pi] \\((solved\\\\ here)\\) \
- \[CapitalEta]\[Pi] \\((Gev\\\\ )\\)\\), \\(\[CapitalEta]\[Pi] \
\\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736180088580261*^9},ExpressionUUID->"2e06423e-ea12-4994-ac77-\
4c276c39e5bc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
4QAzKuCCGBkvqODYRFI5B0Yy6/TnyHi3/us6uq2KA/UyWSOF65ko3LHJX7OO
PO/gykFd0j6Ty0pnbzMHpJltPkjyJS+JT5ptHNhy9rXFho1MLN66M3x9FwcK
ZA+bl5L5JK9NqlzWzwGperFtX3SZOESUGT4e4oCO937T9A1kPk1xopVjHHhY
f91cibTPZ2wZu8Yi51eh+F2xPhOrhHSWmc5wYO4bUf6IjH9etar2428OWL6W
sLhM+m9U2fJc5Q8HalO2JItuYmJ41MkEM+5p+O9craklmX97aEviboFpkIrI
OGZB6nk8giwv4Wko1L0ryE/qtoPfzv5ZMg3HA1e+z9Bj4juOfoOT9DR4j13p
fUSy2En2far8NGwchffGZD1xVu3kN+o0DO93qhcwJN/jkENinvI0rJJ/1ZpP
5tuXq3ZsUnUaXN5eeSRJ5vfWvLfLZPU0rBcvM78KTOQ5QuQc0pyGyehzU5lG
TDxkFScVsnYazs66uTSS723xV+injg3TEH6g774dGe/yy2f5bXrTEPWs6lkL
Wb91Bhb7fxlNg94tvx3PyHg+1jd8RZnT8KtU8PxpAyb+loreNmE8DbJPJi/H
kPO/56mtVPauaUiKtNnnaczEtLK/xglm08Dy/talu42Jxw2b6Wv3TsM55s4T
e5lMrGhQvfXXmtR/5KWy/mNiF3/trM+BabC+FXBxM1mPBtOgUcsj01Bwt3ig
yoSJ5e/aQ2hHp2HNzxAvG7I/nscH1t84Ng0vw73jxFWZyKWeqvXx9DRYCs3c
PkHex+guTWWN+zRku7/ICSXtk0Kvb/3uOQ0+unfyw7YyEVZIlf/1mYbzspcC
9pHz/6BbqPGA3zQUbX+nO0HWexW/w/Na/2nQxI2mnuQ8X3336PyZULL+PC96
ihlMjMlYb/AkfBoEgv9d+nWFiWfjmRe2xkzDnsmP0YPkfQM3T//H83Qa1J92
d93YRb6/cy0jx59Nw8ecWJt6cr8WVq8Rq349DW113858IuNFNP+wuJczDZui
ZprObyHfQ+CwtfmnabAfQ5NSsh6X+o38hSqn4bn+x4eGO5noXLjsAtE0DfNy
wy//mJL7T+i78fmeaWBKlwVXk/OwVGaNw9LxaeARfeR9jtwP/wPcKJI0
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
Kr7tISoDnagtcXK4z8fIZOJaD5F69di7DdFyWLlZ//gLmx7CrWzfncAXcphh
eFMbVvUQVRv2VkZnyaHctS9dV1ndRNbRkmPF7+WQ5xhrg2R0N2ECzvcr6+Xw
YGKM+QqDbuIEV/FcSJccvm/1Uevs6yKiTVabF9fJoWCkU3lMaBdxhH7wgXKt
HKqcPMJ3d20XkRj5W546Td7nxaJgSkMnwf4T4saal8PuPPr5bZc7CTfqbceb
pJ7o/sSuf1kn0ftP6WARtzxKloosU6/uIO4ay86e/CGHZVWPN8Se7yAuriss
cl4lj/s3VbqdUOwgBg9HbC6jyePPgUHvgc/txH2VedWjdHlck+76quRcO3GN
u2j+y2p5NM174yNGaSci40zuTRvIo0bWC85o6XciXiBRz85IHsUTPNaOnP1O
HGgOun7PWB4jDV8wty39Toi9qutfPCSPfnKb77ZXthG8LY4/qy3lcbvWq+rX
Xm3ENyzK7jkoj1abH78UVGsjImrmCg67yeNw0q6/txtaCeOTw2/zjsrjQlQU
/X5AK/El5e3jKy7yqObGt6d7XSvh5/r6LZ+fPP5Kw27vrhZi0sLN0tlXHu89
Eev7HdpCuHVzfSwNl8eJtyerz0AL8YV9W3ohRB611erMXaabifV+SeHVT+RR
r+dqoFlSM5F0o8b8/UN5fHFBk6fQvJmgZ9nRB0gulGrLE+VqJvJitu88/F4e
uwPL2FPZTYT3iiRe9VJ5TB5XPtni3ERcurOgt7pCHkPCnf1E5ZoIB9e1O1o7
5HGX03P+sc+NxKkn93xed8ujppMy2lxuJBKXbNxY0COPST7vHj9d20h8MZy2
Dx+VR/n5VR7H+huI7pU6TzNJToh7yyUW30D8GxppPj0lj8fXlMnomTUQAi9P
nmQtUcC9lWvkgv7VEw13ZzrV5+Wxp194svpDPcG6yr9JQkABL+m+98h1qyei
z+3wtF2mgCNP5zbeVKknDv77Z3yVqoAHudflxzXUEdlNzpPPlyugYYTcocbw
OqLpRaB9gbYC8h/PHSgxriP613yt7wUFHC6lPrw1V0vQeVYe6NFVwF+L63WH
MmqJNyV2jk0bFDBMYyFc0LWW0CFSs0qMFXBlZbtzq2otobHpTKaMuQJ+O8cb
V5VbQyTbvDv0kuSKzK2loZo1RI3XxuLThxXwsPWUUcbDauJVg5cHxZk83/gl
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
sEEnybftAC8T9z9L3JGYz4bwzaEOTSSzvVXPKBBssH988ou0IBOfRL27/uIT
G4oy3fsY/ExsufVB2YW8WLz0py/BJLMCvOf7q8j+K33dvSjMxLAY3jMOdWzQ
ixBSciJ5cB3t2nQTG6ym9QpiSZYfP7c+9DsbLCX/uSkuYSL1O8+gdjcb0kuy
LpaKMvGV9cbf/v1saOIYhAmJM/FLpFulyAgbHH+9WvNChIlf6Q0/eyfYYLtP
5oqNBBNHVXxHtrPZ4PZ7rTe/JBNTk2T63/wgCz/VliVE2p8vPnfM4jcbuq4J
D3tIM7Ff33R/9182THCP1VVJkfm0FR98ysuB5r2y2VvIeC/KTRo4ghwYWQ/L
JGSYuIabau0pxoGzEk6x60l70T1J27SlOPDtd+l3O1km/nm7iuYnxwFR8Qfv
7OWY+KZs9oSwEgcWt+xs8iP1ntbgE37KHLhsVbagQOqpYXbF3Ms5YKB04oEn
qfNtjVxXuooDTme+dG0h9WPmYYwhTQ7sU1GIqaeQ+b1r2bpvHQeuL092/kNl
4rhdWyrfRg705yVJa9OYaJWk53BwMwcEFAMytpA6Jer5qnYjDmh1afpsIXWJ
QakR460cKFvzK2grnYlXNeQa3u/gwONrGQk1pM7+w846a8qBf+vm2x8pMtH7
pu2TZxYc2HnZsnqZMhODud83CFmTuuspBS4yH06El8qTAxw4BE3yd0k9qi8w
dN6BA3Zv9n/3VWHigp/pcaejHJi90NzXu5SJLguv1V8c58DNXk+X9StJ/hQf
L3eaA4JDNU6py5jol71Z9OsZDvQNLTX7StoHXkipG/Uk81c9tiN0ORPDm1al
7/LhgEp9tIjyCiZGPr3tMHmZA5Wmp4IekPH8Qg6jxjUOXHX5fWnrKiaq/TGu
vniDA8ebTQ6nqZH+5X/nqm5xIPTs13c8Gkysef6dIhfBAeGcUYu7q5loeHVu
+ddIDoRZ++tfJ+3dyw6JK8Zy4FPl3G61NUxUMhm8dyGBA/bKPnq5ZPx9Az3P
eB9xQLZw0XQr6W9fWNPz5ykH4Nm0fJE6E3f6MGzWpnLARUYZusn8dbPdL714
xYHw+x6QtZaJq9uEQjCTAyY/Lm7/SMZv15UuT37HgYhTN3QMNJmI/Jmjnz9w
4FeI7qpd2kwU0fQ+M1nIgb/ctbst15H5hzkavP/IgWUX3DzOajEx9N59If9S
DjCjA8+LkfGCC49NJldwYDSrXn+ejHfzv+6j26o50CCTPVq0nonCnZsCNOvJ
8w6uHNIl7bO4rHT2tnBAmtnuiyRf9Jb4qNnOgS1nX1ls2MjEkq07I9Z3c6BQ
9rB5GZlPytrkqmUDHJBqENv2WZeJw0S54aNhDuj47DfN2EDm0xwvWjXOgQcN
/uZKpH0BY8v4VRY5vwolb0v0mVgtpLPMdJYD81+JiodkfE/V6roPvzhg+UrC
4hLpv1FlyzOVPxyoS92SIrqJiRHRJxPNuGfgv3N1ppZk/h1hrUm7BWZAKjLz
mAWp5/MIsryFZ6BI944gP6nbDn09+2fJDBwPWvkuU4+Jbzn6jU7SM+Azfrnv
IcliJ9n3qPIzsHEM3hmT9cQ5tZNfqTMwst+pQcCQfI/DDkn5yjOwSv5lWwGZ
b3+e2rEp1RlweXP5oSSZ3xvzvm6T1TOwXrzc/AowkecIkXtIcwamYs5NZxkx
8ZBVvFTo2hk4O+fm0kS+t8WfYR87N8xAxIH+e3ZkvEsvnha0681A9NPqp61k
/dYZWOz/aTQDejev7XhKxvO1vu4nypyBn2WCnqcNmPhLKmbbpPEMyD6euhRL
zv+eJ7ZSObtmIDnKZp+XMRPTy/8aJ5rNAMvna7fuNiYeN2yhr907A+eYO0/s
ZTKxslH15l9rUv+en8b6j4nd/HVzvgdmwPpm4IXNZD0aTYPHLI/MQOGdksFq
EyZWvO0IpR2dgTU/Qr1tyP54HR9cf/3YDLyI8IkXV2Uil3qa1ofTM2ApNHvr
BHkfozs0lTXuM5Dj/jw3jLRPDvPf+s1rBnx1bxeEb2UirJCq+Os7A56yFwP3
kfN/v0eo6cC1GSje/lZ3kqz3Kn6HZ3UBM6CJG029yHm+8vah55kwsv48z3tL
GEyMzVxv8DhiBgRC/l38eZmJZxOY57fGzsCeqQ8xQ+R9gzbP/MfzZAbUn/R0
X99Fvr9zraPHn87Ah9w4mwZyvxbVrBGreTUD7fVfz3wk40W2fLe4mzsDm6Jn
mz23kO8haMTa/OMM2I+jSRlZj4sDRgFCVTPwTP/DA8OdTHQuWnaeaJ6B33Ij
L/6YkvtP6JuxZ+8MMKXLQ2rIeVgqs8Zh6cQM8Ig+9DlH7of/AaMzkx0=
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1:eJwVWHk81F8XtitUWkQpzCBbKVRmBh3SIkQLIZRKaVGEKMkWSVSWEBEhVCTZ
1+8lhKzZ933fZoYi2++9718+z+c557nPPffc872DdNXm3HU2FhaWMXYWlv//
Dek9I3giih917xkIieuRRrLP9tX9cNiIOjn+7LNQl0bCz847BjbzIXuapp7x
qBTaJyl7bPkrL5KTvHurV3sP2v81LfZxFQ9KFKQsWZvsQZH0E5KVm3jQt1sd
r0wLJNEWUck4g6B1KHJXkG3UsCQy4rSjpHOsQ8lHbQ89uC+JvufRlXfGcaOl
f+U002uSiN3zqzWVjxsN6pReOiQqiTy8/v63J5kLRSDfMIstkujCrorw2+Jc
yKgptK8xRQIxWM9u56vmRN4Jl3MXf0mg5NQndWwmnGjk5b8sR18J5LdAPji/
woFmA7nqGFESyOGioAHFiwO5uNf0dFhJIOer7dkrahyoTEi1XjFOAhnfuh2W
3MaOOLIMsye0JZAT/VRwTjQ7Eox6HCuLebvxBv1ZJXb04Mo610+vJdBGJ67j
eX/Z0LXfh6b9yBLobMnJHPsMNiRknnC1h0cC3c/VPmtixoY8t1b3LWJeX1rj
1cWNbChCxTMwjU0CyTyMS+SYYEXd12/9WeWWQN/98mO5w1hRiuoNb94xcaTW
cqGi6iwr2qFNe887IY60szaTPARZ0cV7ILQ7WhzZL1b/85xlQRJnhKuuMMQR
rxBb/Y4iFuTSUPvkeLU4EuUUPPHyCQvaw3JAvRbHe10KftCuzYKMi148YSXE
0d2vXSlXeVmQfET2zsgIcVS3HCbxmviPOCfrFZNUJY6u3zY6VHfqP0LYTy3M
8q44ejv5wieVvkbUxJ1lDX8mjmJPVSkUeK0Rhz/sZu0OFkcOPe7+dxTXiI87
P/+hR4kjNvevu0UqV4lDJWMaig/E0cULG5y6fFYJayul8ZF74shlbevXjgOr
hEq7XaT/I3H051Tc+dKhFWKxNyRn5KY4CnzyoijYdYXYRBEvD/YWR12lvqmb
5VcInau8JV7q4ohn9O719X3LBCGefj5OVhzRSGfuEc+WiSO/LZ9V6ogjQ6df
SZlay8RIwO291Sewn8SYbIHVJYKi2vzh8VFxpPn309axmCVijb2zi+OIOLr9
+S4j7eoSoT/9xEfJQBwlWDZrrIovEYIqjyISN4qjDTeDeoZ//yPMTffvvLNd
HH3YyCNiHvqP2Nqy45PhVnEUMtS6YKz9j+itmjqUuUMcnT25k9VxeZEoV487
8XqVjOQk0rzaiUVip3qRvTjOr/niX1fvs0i81WpiWGL9r+0hyc81FonY3JNR
OuvEkYDOOeozlkVimnXN4PA/MmqyfL8hqnyBqEsLqqtiF0c5Ffw1dS8XiBDF
TWelJ8jo/Iwkx4azC0TH6i7/DMxv4KAl5m9ZIHYeGv0i10ZG+UkX//zp/Es0
KcWrfmYTR2RdTZJZzF9C/zLv0chGnH+nd8/h23+J4YGTxov1ZHToiOm2dspf
wrRAJGxrJxmJ1bA/4Vj7Q5gdSCY8/5CRaaZuvjzxh6CybpU5VkpGSmWhHJt9
/xD3f7PdTKwmo3/DMi+zDP8QG0tyfxRnkNHOfd//iIr+IYaSnCsOdpCR65ta
j8rZeUI7qvDT+jwyivykqz6TPU/8xzsnbFBARmrqE8/sPOeJ1ZkG2o1sMuJp
vuBce3aeEGIzdLQrI6PcnI+5npLzBEP4qbPoFzISFTSmpjLniEKdPqZyPBk5
p2waiS6fIzz0uk/P5JKR/UDzjZSgOeLrud1qI4lkZBEtbHvUco6wM2a/ReST
UV3XDetJpTki+OzT7CuZZBQ6fvjhC+45wqnlWvyBb2S0vS14XU8bkzjfwdzq
HEZGZr9SdWNSmcSIVIBUVjQZHdWvPd/jyiRKd6EYz0AyqrXpezR/hkm83MB9
1OMNGRl/jHjOIsUkiopejW4OJSN9ekAnGxuT8H3fOWzrS0acxYdVtX4ziAs2
n2wyPcloLnbLZ1o8g7DM9Mp1cSOjmEit8HMuDKKJEqRgFkxGt9stOtcuMIin
qvrNR56TkTIXZYu1PIPIC+lxEHQgozvfjvf3sTKI3fTf3S+wXtdnmyStbjrR
KtnqW+dIRvw8U+4q3+nEFEk2ahDHs4ppnyp+SScCQ4rlWvB61V5PQPkGnXA9
atGjY0dGxzYyyg4CnbjSxZWV5UFGSS6vDCwF6cTK2KMSdnsymo+4MHh2cpZo
+bJsstOKjJpDyFz2UbNEMq9omthlMpoMO7RhyWiWOEzwsNffISOpfV+3m6yb
JZiRgzzvLciIaKX1rxXOENnad3RSTMioME62+dqDGcJiixKv/jUyCpdbnXdT
mCF09x7MWbpERuU/B3f/HZomEkry1VcwPyC699jL99NEDsPSNAfr1dYf75i8
OE38nR9+n3+OjCRLMp5zCU0T64JpHjVmZDRxo/FqQOMU8UpQOrP3LBn52X42
KXoxRXidqVv+bkxG2hIhFVmnpoht611OjGFcwSF+/e+6KcLEnq8m7gwZ9X4v
2a5YMUkIOUS62qiTkbD+ha+6npOEa/wjvnxdMhLqtlX8qTFJZGd81JA/SUYP
OmdqO1cmiGPcTO4GHTK6Wm1ke7hogrAqOXQ7l0JGIRx3n394MkFUCvCrxaqR
UdDJAOsbahOEyUnvW2snyEjjvfFnibVxwu5mcN/kcTJyX0xoIZePE/PaXbSH
WmRkyasRsddrnEDmxadeaJJRpUZAr9rxcUJMaC4vCetZ84bHk7nGCVWyyGkp
RTK67y+snF8+RqxeHjrUsZ+MkB7xdW/QGPHS3uJpgDQZRXhmXvh8YYw4cDJj
46AsGXG0zhWOC40Rrzp+egQqk9HneP7g6e5RIq7W+J+3FBn5fM9Ir48ZJXT7
x+2ND5DR19HbdWJWo4SoqYGOgwIZPXsYtrCyb5QYaXrS5IrXe/xYFikwRwjz
5RyDcoy5LdarpBSMEBca12/XxOvXyYV4ZfiMEKGy0HxAEp/Htj8B+qdHiLSL
XRIRcmRUZTfBJG8bIQTOxWdn7sX1fWmustgzTNT3fFFZJOF+PBEouJIwTBgz
P3UtbyOjsOnWW8/vDhPSJfQUDqzPfZgt6IrKMPHuV+h7GWEyenT9mYcY6zDh
WR4W3r8T9xNv5OhS9RCxbreNgtQuMir5el6n9s0QIRF36mYT1l/wjq66dmWI
kC6wnmcXIKOisCeT03uHiNfv225ckiCjVHG/9Q8WBwnhd7dP/4fzdwUFvJ0v
GySk6Q5R7LxklFPYHeoSMkiIojPp2Xx4vvF3PvG+PEj87hw2s9hKRm7k2I1F
MoNE7evBV9zrMfZz2zO8MECQ1l+7L7qJjFazwlbv/xwgRr+aTv3jJqPBsqcV
v0MHiCOEulPxFjJSXFZtUbk2QLApH5hPxPqsMnkXXh8YIPg4eHqlsB4H8bb1
LcsA0RM+m6jLRUYbVYIfazf2E5UVYq9dV0jIU9S4pyK6n6hZUpg7inmzzbT0
Spt+olH+8VWCg4zGou+05Kn1E+V8B16scZIR39Owtnv8/QQfXajoJDv+nhxe
PXywv4/Y56e+5xRe729zSeyO9D6iMVnp1A4WMjrrpKY15d5HMKOi3z1cIKFf
VMr1Txf6CAr3x0rTVRL6quotD1IY/1heP7dEQgLuP3tc6b1EPCO9/sMiCbFZ
0pX4g3sJF2uPt2ew3sXIED1JlV4iq8qj9TPG2W1OEt0DPYTOscyw/HkS4g68
WhHyood49K2u+tIMCYnevMwRsL+H8BeVtlbEemOfVrgTGruJbz5PLQywn97c
3fbHHncT58O2XF4/TUKRdz+YDJK6iVT/n+4f6CTEX8ZDkqntIo4fefll3zAJ
lVfHKIXadxFbH89wO2A9w8O/rK12dBF+B7IDH+P8v0PDjkOlnYTa1cuJbmMk
tDf5zpeS+51ETdTo2pZxEtLJ/e7EJ9RJ6O3KH2VMkZDst0/M8bIOolK1+NAL
HL8xwmb/mG0H0Vjs7qszQkKBqp/Uj4l1ECikWc0W78dFgBrQ+audIFkJvggf
JKHj+77UpjxoJx4tCl7UHCCh89SYz9wS7QTP8lmVGux3NOrU2qvGNsL9keiC
WycJLQcF7X7r0UaUSL+szGgjIQlrjtO9B9qIrOr+I3d7SOhfEup17Gklus9K
PnRtJaE3H/gGll60Eo1M6eW7XSQ0lX6z9h60EqZuF9+fbSEheYkGvRuzLcRH
3bYg4W4SUu5z9dSNaiEiZTcdf4T5Tw5ybAV6LYTLv5OpcQ0kVLC5PZeXpYWY
sqzK+ofX7/UsZ8ykNRPPb6tLTHWQUNykyM3Wa83EM5eqZW7M+/pfc+EVaCaW
G4wC5/D6p65+5JwobSJsDl4JutxOQnJXRdCFx02EeK99HLWZhKKcMmJi9zcR
JWEX/w00kdD2RSkby8FGgnZQWfJwPQlFhKWz8IU3Eik/b9f31JDQ9b3lW5V1
G4mtYoa8VXi9M7/2Cjz77zdx+4Lrod2VJNQ3uH66Nuc3oThacfDTLxJyPpht
k2X9m3AgXsY8wfpjsQuHvEV/E53plQ8zq0noIuuBvLDGBsL4VYQJN8aqLwXM
m/wbCIu07Wek8Hqc17OGSjQbCKHktlIxXI/RMuH3zxfqifqucdXOclz/FcWD
I1/rCeuEz7Y1xSTkJ7vsz32nngjbqG5yq4yE9vzqvNZGric4cp8d4cPxNffZ
w6qz6ohzZ+MpvTi+MvVo2Qu5OuLxufncmzj+ksGM2tf3tURber+P1g+8vuZn
RohQLeH0Yb/FuwoSMjrfsWnYu4YYHfcLNkYYt6pcd/xbTaxxUa26MQ4SblM4
cK0a97/bCDvGH5a+f9gx8IuImst4/BDjjbytw3uNfhHVga29XqUk9Ltw4rlk
VRXRlDrC5lJCQv7NtrdtNaqI4G/uuWH5+L4I5YYTRZWEZ1Tzf08wryS5Xn9W
oZJ4siAaHV5EQt3q57OqUiuIpK/rH+zAvC0PKW6cXEHIfeHKtyokoUXrXzN1
4T+JvKjo/bUFJBSqrxn9YvtPgkVt992OXDwvBPa0KISWE2JdAQ0jOD61Kz/m
yJZywjuR62cX1lPc5fouzbeMoCb+4VPOwfPv3ps9IZxlhHGeglrYdzyPCgVv
6fmUEuvPOwhFZ5KQfXBnfP66UiKV6sXmgXmT1lvZDK8fxJdvaRtupZNQ00xa
8h32H0Rn20hlAF5/G0dRlLRrCbFLo5evEut/JHf+6VorJn44f61gSyMh0wP7
zhm5FBMXOHdVqWF8Wdwu3Jq1mCBH+jhMfyKhdz/5C/PdEcHzzUQhHq93WrHE
6d16RNAvA+POFxJaGdtxppePIFquVeWoJJJQtOCukAL+IuLKXOyGx1kktGVz
xbvCLYUESSy8uBbr7bwWrvxuWwHxTqvihmESCbHsb2uYF8wnjCyfSa37hvtP
YPVpuUQeEfXlrvrMVxJaH7eyKUw2lyB38XT3xeH66dUVbN6bQ/gX7NsX8pGE
SpRv14wezya0Pz40tPlMQo4ROqlwIYuIcheUVML5r0wTyeqXM4nmJGqBYCy+
L3Nt/7ZbZxCaGflGyljP4T6DXOWcThQbaSfdx/6e6kncN3r1nfBJ6ImzwvHX
13mJ7oxMI3bJpf8ciSchvhiXDetTvxGrEf80p/F+30ooMl4+TiXuhnArsUXi
86aUaDGjU4iDfW0nNbHe1xGW5Y3jXwiKUPIUKYGEOgOsUk5v+Ey48hf91Mb+
5f87ZHNLIIlYeaZ350sECeXIcq8POZVAyOmyHhXG8TfOfL2+3jWeaHXfvy0i
ioTMTGvzLdJiiU8C5HOb35OQR91R49y+GCLZ8ACXbgw+D9GYwQ+b3xOhL6ZV
GFhv4U6pZdz5COKctbzo7AcS6tLUMhpmDyO4r7+7ZIv9Hr4WEijyLJgQMf99
Pi8a3+8Db1XEM14T5jHOKZZYjyNXcqdB3HOip1fbkzcM1/Nk2MBChQfxdFXL
ZwbzL8Xrr9+0eEDU3fjdmPeWhCZV/3t/UcGciOzSFcl/h+sh/e3UwD4TMP3m
G3kerxe2VebjXV0HcPVTUdoUjvt1zxkR/y0eYNk8GPQG4y+qOeyRaz4g7dxl
MvSGhGrDrA3rK16BYnfTcBVe/35h6d71I0Eg/e/BrXCsV2Q6fmkKQkFheQMl
LJSEUprcuN8WhIMqWwvbZoxfG9EU4rdHwW66fyUD+3tT2Kzdrx0DZVJd/hsx
Vve4mNzV+QFOfX+X8yiEhPQT1dgaX8XBlajovNDXJES3v8xbrfwRfu52K0/x
J6Eqm+VtvkMJ8ITE38AShOd/wc0O1/AkMPx393gpxptE7QOsTnwG37PtD6/g
/TCbhoQ7W74AcTdz0TmQhA7JyapLe6XAcXtd4xSs32CVYme6NxVMxhLN+HD+
ZrTl9KzVN1i0VdoTiXnNZtqNnyppIPbaTf79SxKyoZ33PMb1HWa50r53Yt41
aZPto7bvsDv620xaAAlJzh14FfIpHZ5WNaXf98Xf5xfmKn3OGXBY7+1Gfqz/
u/b6o+EjmcBC23ZfA+tdufnmedvmLOiQHvK56If9v78/oNafBTq8LrVncf7k
5aOylORs6GDzXxvA+mnvWHZo2eXAHdPeMRa8H7l9+/N5juRCXfvPo3bPcH1m
vSLusudBm+ZNyXZcr4Q9eiVhNXnwd9vlABmsJxB95ktEQD7sDAq4Y+aFvy+7
Y56dMSkAQ0Pb8v/w+o1ZBo/0RAvBbZtONhnzZRa3TI6OFcKyrkPwJ298n7JD
Lp/NKILxraf23MTxpRsHol89JCA3dCnc5zkJzd17J2MjikBlkGdAEK83HPb8
O4snggCnM6OeHiQ085Aj914/gpQzhTYPsN6R1rODBzSLobbRWNTrKQlpufEY
uyRgPDaybhZj139XlwXWlUD1uIJBoA8JHd1+RVXwJsaeMXl0dxKSMe55c7ey
BH5/uSpmhPdffOEFJUjqBwxb5PRH4fwvHfvVp7x/QMxloWUFVxK6oH2x/efI
D+D/snYr9wV+X1hf2C90ohQODvYzuzH/TFFFI/ZjKXirVy3EYr/8BpZjuznK
IPvJ0h2yC56nmRxfFi+XQcDZt1IRzthf6D7vnagMDH9JBjpgP+ebmh7RSeVw
Sp0+aIN5hpATGbcu3PDjvv3rMebj9GMXWssheI3v0qcnuD80mftNDv+EHp6M
Uwdx/NpBdcdzb37CZo3b/2hueN4Od1UcpP8EdbApP/KQhAq9D5p4aFeAQvH9
divsx4+jqr0ooQIEeMiZ95xISOR9gq8zRyXI1ij7k7Be+ytzE3WLSmDurD+2
A/PStUbXxwsrIc3OvikW+xVO89XuF6gCCQ0fzV0PSMiOTXre9F4VzJ5qCGRi
v443Km78qKyCotVi3Vqsdy/xsJ++5C94oGTqedURv9dIzSfPP/kFDqkB+jrY
j0R9Vpl92y8YCS3KBczLZkcdv6lQDR8j9AWdsZ7xHQ7E71cN4z6fNVix3vLz
uQjFwWpALIkuN/H+QjWJybkjNbDv+PNVOczvcy/yPx1SA9vibwY8xXqNWnq5
SzM14Hi4q2XanoRY95yZFj5RC0LsKuSD2P/PhkvvN0TWwrEY3fcG9/H7nN57
WG2uFgLuvIgVtcHzxiHs3ObTdcCnss/LFsej989Dx+Pq4KnldZMfDiQkZrDl
MCzVwdvLV6easX5K3eZCI+l6KGKuDpViPdrBIjb/c/VwZJzRftwa+3cQSjrv
Wg8mXynmC3Z4ftktRSZ/qod43QoVNxzP3HjrbXFTPRQWJqY24fr7F1q94vyv
HoLs9GP77//f/3kThkwDyF9gv1Zvi89ja4jDGYMGkIUxzkLsxyy6zbjArQE+
c1kKFeP4CKV/93k+NYB5uvvLF/ewnr95a3djA2Qfu56kiPcXLjrM5rqK+S/f
+51vk9A3tma/+9K/4fslWtNNHF8j8oyT+9xveMw1TCaw32EhleVLj3+D0Efh
XVM4vzahwH0k7jeUGkWJWWO889Fmwaja37CimkCZx3q71GQyN/77DY2oVDEd
+31KHz90itwIU3kvZQ9i/dm4eLl4nUZIsDJZfYX5e2x2VWceNIJUVj/PRsyz
ruQ+TIxqhPfqH5rP3CShNn/7I55ljWAs738r6i6er15nNmyebYQVE4cqJ4wf
LzmQowWb4EULZcMuHP81closSr0JqKH62gbYz/vXt4zNbjWBsYaNxwmsfzqm
vawosAk2uc1qbsPnQ2Q9ntia1wTV3CHFtji//7KwoeRAE5TLFbXL3yKhzzu2
DDXzNINY9+2/ClhP/0iC7WHFZijmlh99ep2EMmXfbZa42Ax/LASsSyzxfQpK
DOF62gyD5T9cQ7A+j7nlYNfnZsg+qSPScAW/b9rC/k7/bgZ/86ZfSZhPMuap
2bTUDCcEXm1sxVig0n78q1gLJPlfX824g+fz0rLAGa0WsCTv0WjG/tbLLP0S
vN8Cy1zNc5ZWeL6f5LbQf9sCneMJLS7Yz7Wa9JXRwhZY9135TtQNErrKI72J
dxjz3mlF6zCvO6xnxc/XChE5/2lz4fVuXpUpjVBsBdOBv3aL2P+pJ+mHZkxa
IV/vyn9K1zCvpfPD170VPtTJm9tj3nbw59DfhFawd322M/oqvt+fm1qe1bTC
pecfxA7ieMpo9Bf3uVa4fvlCRO4lErrDfJ1ovaMNBDuOtmzC+Un6bgKu6m3g
eNBn/jOuh5ZretnGG23AuxRyqBHzCmQbcw7/Ntiz0vHWFfPDP2+QndLa4Ig4
I+ID1v/2UcJMra0Nqot/l2zH/J8K6UOn1zBvw1JlhbFMkbiYuUQ7bFh8+7Ec
+3ukHsS981Q7sNgi7zsW+D54icU0320HusuBJ1YY9z+ZLF4KagfbjrpiJZyv
n/VsW2BOO+Tnd3DuMyOhW6JG8hPd7cDrTmebNsfzX05ZUIO9A+7JF4aLYYzO
xFIPSnfAuxwytGH/J9P+W3fudAek155ksGH9d6b7dzvadUDTZJPfYVMSIvOF
vLgX1gFqHhvcWXF9HKs9nCQLOqAqjDW/HuuV+BmkLPZ2QMtKaHsI5sfPb7n4
j7MTWqo7dp69TELakQ4ms7KdsGnyt00/jk9DWz8K6XfC8a6Js8oY+7ZQ3Yzt
OuH11Q5SLV7v1uWDizmhnaDawNbAivfneGlZ5lReJ7xKmV4Vw/rCEQvz1r2d
IHLtUd4Czv/UUKs+zdYFru7Jx3Xw/vU9XkPSni6Ij3ujw455T57LDWbaXfDQ
+sTxbKxvYZB8OPJeF9zx2dm1DuuFBJ9Tux/UBR8/5h8LukhCUN1ZuS2rCxK8
spnsmJ/+sGKs294Fob1q0G9CQvFpLYGUlS44vLS7wcgY/x568FXRS7QbLubm
JpEw3xZ3jGubZjekZGwLaLpAQh2ya8zjN7rBqSPoOZ8Rvg+spS9YXnTDRAav
kxL2c43fbmBfSjdUee8ri8V6M8mZ9bvru0FKXsVWB/ONOqeLJOa64bbZ/ig6
zlf1lHXrF+iBEvOlG+uwfjz7XbMYSg8E0LNVew1xPbhe2Mxc7IEXWy8c9cd8
JM+NmYUnPbBqqcptgLF89xskHdMDDVfOcMTh+LOu4fVPSnqgd/cle/NzuJ9T
3Qr4h3uAmePApoXj+fNKTAfX9cLP8ZcLunh/u6RanApleyHL7x81DfslAhwF
vuj0QvnsiowO1rN9HOP9+V4vvPeeOfwfztep8wzVDcT5V0D0//yj8bKju9J7
oW6Q67zcefx957I/ptPUC6V12eFHMM+iPvU6708v8PMxn3Ab4N/3nG/fsfP1
gYvQ67w7WC+/eMsl6d19kPjmEXcm9ntV/kVi074+ME5wvsaD46+4k37tO9IH
die9nfmxnsNmeKKg3wfKR+ORAuab92z2Gb/cB6cp9T5HcT1P96do+dj2wTfv
TVKuWO8QQ7111L0PiqXdRaiYb3udwu4S2AdyJ69LFGK/XiKzveyxfXBSi/Zg
AOsNJo4eTfveB2n+J2UPYfwvvDn7yY8++N660VHlDP7eO9UvHWzqg8GoqU/s
OF+C5XaT1VAfGOxlHA4+i3+fPRCYGJvvA0pSQ6wsjuffdGxgK2c/CLQ7m3Fi
P/tD0TWaQD8wItzTGjFP+Dee9pfsB8/iPD1vfRLqvma2KHW4H8x+6v7ajtef
2eYQon2iH1a4J+8/wflTr4wtnC70w1uXJdUPeL1pc7nJRzf6Ifrste0HMX+q
PG3Mx7Ef9n+4XeyK+cA7GxYGn/XDhjST05xYz1C+smAxtB++oQE0fhrXr03S
JDKhH/5qLNxqwX4O3eDKzczqB3M5o49/MU/mLtVT+tkP94MDlH0xPybZ0l7T
0g8/PZtcGvTw+7iRS2V+pB/2Kt0fN8P87cQXqyl/+0FNa7uoNM4XuHEtKp1r
AC452ym0Ykz/1rhguX0AnLWafE78f/0S300uewbAYnxj4nOsx/3A6NbFwwPw
/jb7PhGMz+fQj40cH4DwJKGTizieb6Oh6zXDAdhXU7GwDfNisrc2xl0fAP9G
fhFXjFeVtnPeezAAkyN7Pu7SJaHkC3Y+HN4DcLLW5nEH9ieRwW5y7c0AfN+5
9uo95v0/bq1VjR+ALzM75Bcx3iyR2R+bPgBR70hKUhjrjVvlLZcMQI65fjzS
wf6SLSaifw/Afa4gFi+MBXyf/srqHwDqWN+KIo4X1jzvJccYgEchnTd+Yz8y
z/ZeWWEZhP6yypvxGJs+vwse/INwhdhr3IvjaYqNjnGigyAryq10Ceuxthio
rts/CBbHN3x10MLnoW6df/LIINT5m9Y5nSIhXuYJU/vTg8DtKL+zCuMvR6LO
upgNQk3nSqSaNn5/ZNZfyb4zCD2LaW0mWN9izL5kwRlj67eTIVh/3i81+uGL
QYgQeVB0ENdzU6tIxePwQXh9SbFdEuNZ10dOL5MGwZC+qc4F691KFJEIyB4E
44v66ku4P80bzMh55YPwW3X7DibWW94AUh+aB8H609bvf7AflbV1UY+HBvH3
KnVHO/bfZTg2azg3CF4fYnp/Yr1jvzkiDrINwfQdrzQnnH8k+Fiw0uYhUFA8
IVZ6En8P87LfbBIbgh0THJyCON5aUu/6pPwQyNm9SYnD8fYFytrdakOwjfvZ
vvsYX8kc08/UHQJd1aonAzhe45n/8ifTIbgiN7fpK+a9cl0LFG5jnMVH8GI/
HeI2r2ofDoHVqyUfHey3hRGTbOIzBM0vqK9/Yf7ecrH3VMgQKIq4eBZivT+m
+xNexg8Bi0mY4BKON5IFvavpQ+DViZIKMd7SNRa8UjyEz3vSrxHHH+S6vhpf
PwRxBntgD17fekG5fbxnCEIjaGcMTpDQ4Y3/DCynhyBfNipkK96vsU9Cz+Ty
EHjL6D1Kxbg6OcTqEM8wfOFMLV/B2GkH29lMoWEw6bsqdQLj4JjHX+SlhiFo
yO1OPl4/g7kt6fGhYeBkJcnHY32ujU69G48Nw50JCfaGY/h9tpx8NeLcMBwo
bbN4epyE2O9EhtRYDEPc1udlUji+t/D5ZW6bYSCluStfwpj5Ui1j55Nh2Oxq
ebxIA8/jebnia37DcPWorNIdzOv+ojRFhg9DQpfP4MiJ//9/GzobE4chrTPH
cxOun0y9Y05Q5jAcnx6/EYbx5X3SprU/hiFL7x9Swf4VlcXypH4Pw8CBgzVS
2I9QQVunSd8whFCfHX2H4/dEapxQmhmGu1ucf5tj/Vdq2qclV4bhsKHedX+8
n9TlEdv29SPA6fkh/qwmfv/vKlQhCY3AVaa80egwnq9DnUNb9ozAIcqRngM+
ymhdtW/+joMj8HHr2BLDXxkdSw72m9UYgQcnryUUv1ZGfqZFhtP6I/A06vCN
Z6HKKHfLmaQf5iOwxb8sWyZMGR19FWvjfWcEjKsNtwdHK6Mmo/2HTB6NQMYt
78mAOGVkoa/AVPcZgV3P+fn9EpVRienRssk3I1DP3ksRTFFGvfNmi6GxI1Co
kiHA/KaMWGc3PfH4NgLOhQq/S7OUEVtq5oftRSNgo+Uq+yVPGQ23off5v0ag
lE/g41akjBrvKLOmto9AVmr6z4ESzK+pxhqNjsB17V+HGeXK6FH9lS3B8yPw
7uGJvupKZSR/Tf2pKtso7DvtdnGuVhl5bQ3WHts0CiwqfZsaG5SRPzn0r+vu
URituEZnbVVGRvQLB0ZkR0F6VinTr0MZtSnXVfpSRmFkcTL9aLcyGi/1sGs4
PgquuzQkQ/qVEf0jd5z1+VGI4ZNhfB1URgq7POPaLEbBoEW2VGdUGVnPRvMe
vTcKfHsFlc5MKqOPfOsZGY9Hoeoc9+zotDIa+A8W/zwfhUMdymLnGcqo0snl
6YHQURBUCnLaNq+MuN0aPj2PGwWHlMrOgEVllEafOpLybRTOPi1y0V5WRj1L
dedIRaNw8MHCOe5VZVQ3e7/G7dcoSHhz/21aU0ZDt44tRbWNAqfNB8197BRE
CuDN+DE8CtU/vfhZOTFuP9P9jzkKD7wPvdHioaCiAwF3VFjGgGRlfZrgpSDx
3Lsj5zaMgdblbZPbN1IQzXoT2XznGGQVujx/yE9BXsflLwVJjYHSU5Z71dso
6Mvzb+EJB8dAR5baHrKdgrZzf1Aq1xgD8cyf0b47KMi+uHGtRG8MBgO+PnMX
pqAz1w4H5piOwfTdX0VoNwU9/OB3IeTmGNz8pupoKkpBEwtUd7cHY0CkD3x1
J1OQBTns5kvPMRDO0+k4LklBZnxTGTGvx8C5h1M/XpqCNmSGjT2NHIPtp1lv
bJalIPft+yN1Po0Bv+182ZV9FCTGDEsVyRqDtF3fs9bJU1C0CFVB8McYrPKF
XYlRoqASZ8X/lurGILLgzJQZxnuddvRkd40B84f6H+3DFFQj6a0bPD4GGQFc
f+yVKajeStqT+ncMDB7Fuc2pUtCxbjGbzezj4KbnL9iNca2EDl/epnHwMFSP
zlTHftDhKwm7xqEwOVTVSIOC7kx+6rkoMw6pqsRdHk0K+vl5VfHw4XG42PbU
iusEBW3MpYz4Hh2H1v8QeozxE6aKopL+OLw/umAvrE1Bgb6bdlSbjoNmZL7a
gg4FyZ3xSEm9OQ5NvAJF3WcoqFu9KfDIg3EQeOAlloIxe3n/VLHHOJSJCC84
GGA/3526pF6Nw9qZlytXDClIzTXZcDhiHFYOLJSHGlHQK+eb4lqJ49CTKpiZ
YEJBft4Rolnp40CLsX89ZE5BM5cUTPehcfjaU6iXhDG7SzDP5+px+LaBi4V2
CfMnrdr/to1DPZ+KxfgVCrq1bYquOzwOoSXr3s1fpyCfhv+SuxnjsHtB99K7
GxQU9eDPeem1cfij1h7z2YqCBJ/Jm/nwTMDz68VhebcoyOnW+By74ATUJRlI
Kd+loF9PC2iJ4hPwjTRPLFpT0J5YI7PV/RNQE2dH57ahoEOGHe+3qk7AA36K
6/n7FHQiOHHbQa0JyFa7MZ5tR0FTN5NfFRpMwLwdT0vpAwqadHj8AFlMQJlK
EOueRxRUjjSXWO5OQGz6s10xGG+o9BmUfDQB7SztyywuFPSuH3IdvSeAt8gi
wMmVgproPgPJgRMQnKkiJehOQRcIMA+JmgD559nTsRjHaKxfjPw0AVzXPQwu
elFQwuRliZHMCeBJlr2335uC5lTYqnlKJiC3TOSS83MKintbt6O+ZgJ+Vc9b
Lfrg+9HuMDjePgHHc+Qa5F9QUPaEmO7q8ASsnOIq/4nx1n3371KYE6BX+Ozb
jQAKUnbcun3n2gQsXZ3U8sf4wINlv7X1k3DNqfW6WSAFDaucSWHdPgnuPt/J
rm9wf8GsEit5Eui+pSfCwyjIfI+jfeG+SUhtuP/VKBzPh+9H1zKok9CkcCq6
8B2+f6/vcL0+PglDRz9ufhhJQYtZly5anZ2EKn3xxd9RFDRKhFSeNJ8Ea+OU
gGfRFBTMteOW8q1J2LFj/GfmBwpy+6Gn0u0wCS1/1O3OxFNQg4kjR4j7JLA7
5iiyY/x15uSon/8kxPiVmD1NoCDLo+EB5m8nQeruwfnqRApKk6m5pxY/CZYq
Ym/CPlFQZt4X9+LUSajnSV4o+0xBIbcTP1jn4/UNuXNRCgV9WHAx0PqJ9+OU
01KWis8vz0hfpnESmH0dDru+U1BHUuTWXz2TsGY0Zc6fTkGeif6n3CcmwVfw
ba1bBgUp8X+crfwzCbZugq7bsiiIoZls7s46BYP/LLWeYGytduCIyoYpYP01
O5uQQ0F971dTM4Wm4OJYHS9rHgUVrCRsNJCYggcP61luFFDQc9bFwJ79U7Cm
Mby3tJCCDI/tdRVVmYJuBb/YUgL3Awd7ROSJKQgvX/jRWIznr4Cn9OVzU1B6
5H6OewkFiVjtLu03nwIamrKlYlzSqhny5NYU5L8Oczj7k4J8Y/8kjjhMgVHv
jnsFGFNsNR8Ku0+BzKxfckEFvm/huq/f+E2B4j+LIc0qCjpu+eo/kbApuG6U
zrK/moLoAUudl2On4PcSX/mNOuw/sbByNmUKAr818HjX4/N+U5dEzp0C09cK
68MbKMg/azzDrXQKzKqdV9Ux/2Mb3xJ//RT825P3Jfw3BZW9Twm36pyCUwoa
ZovNFDRt5XHGf2QKEvhvN2u34fnC//7pR8YUPL8oElvaSkGF/Km/f61MgaZb
6L2rHRQ0lnQi+dS6afio+LF6vIuCXPZmF8VsnQYBiw2TOd0UxJsoJ1ggMg2q
HyRkjvRSUBJn8TlO2WkYav/+Y+MgBWmteG2iHJqGwSvCYzv6cT2m0tf5qU/D
o2NXZAwwXthOBFXrTMPqAT4PjlEK4ivRMIi8MA2BozYaRsMUtNpp1F1yZRp+
KlaWuo1T0LjxhRe7707D+ZXIyr0YNyvcZxV4OA3B/cm7Lk5QkHf0Lgrv02m4
fyX0ef80BbmyP9RTeTUNGvuf28AMPk+q22Gd8GlIDx7mujyL58WjS8k68dPw
WvThWQEmnl/qhhdsUqfhh2/M9+90CjJyrO3bnzcNvYMubNNzFLQimeakUDYN
ijzlU6bz+P50dWaeqp+GtNZgKZcFvP66/AOSndMQUiNw5OI/3G8VyfzkkWnI
NRgqVFiiIP7N8YX7GdPwIPeD5WeMf8waN88sT4NfdhnnyhoFCfDZqW/inoHo
pUaG1jK+TweJ232bZ+C9P+dNXRYqWqOLEx93zYAk2aIpGce//qTNniY1A8fc
PKetWKloy0FmlYniDGjaqzXoc1BR0itt07NqM9D8NSF6jpOKLp1gOoHWDEjV
raw5c1PR6fLY7G/nZmDC0ebKMI6Pzo8q9DWfgT7FwLlLmI+L47P0ujkDtaqv
udR4qajoPZfwTvsZuGO2tmbJQ0UF1bkSjU9mIHsquk0SYy4ZSQ7H5zOQYCc9
67uFip4aJV9XDJ4BEYeFzqYNVPT8WJHmQtQM8Ev53o3gpyKflms7spJmwMGm
KW56KxXVTkSyPk2fAVWfawYiGK9zrS8iFc2Ac3HFPa1tVCRrViRTUDEDc3/z
5fUFqein95MUi8YZKLdOHy3A2MX/8UNm9wwsCfPf/A9j1eM3Djwem4HdgdJG
xUJUFFprVbp9bgY6UdszUREqStcfzWKszsC7Erku+11UlHaZJG+1bhYWz50M
/rKbiv42th1t3jILR4XUi+TFqKhw/SzHm92zQOr69kZDlIrId41kpqRmIZq2
oS8N87x+tPZ7irOQL0b4LZOpqLN/8CJFbRaObHao4JOgIkdBt/TYk7Nw4Xb3
vRWM5ar+O7d4dhb6u1RFuqSpaG6DUJ6/2SwYqOUGq0pRkem1bd+mb8yCMX2W
lCFJRWo8uo/u3J+Flw6JqmpyVGS9XCPS/3gWro9UKt2Tp6J7i1v0dJ/NQhgP
+aUO5rfqPAnODZgFeZkip3P7qWifYcTK7nezcOdSZer6w1T0b3bPx3sfZ+Fi
Z2ZfoAIV8bN8aIpLnYW/2noRafuo6JN/CduGvFnwffMfTyqVio4u15VFls7C
rZOHLj0/SEUcSllKg7WzIHZoe6gtznfLC8idb5sF5/C6Oi5VKkp0k1O+PDgL
H7eYOasfoaLMnjHVpulZmM5ZWxzE+Sz6j/X+LsyCQvmIkgZQ0fQOcwNWVjr0
yX2YazxKReLMU9coXHQQDt1uelmFin4Law2f4KXD28p5z4dY75bHCsmPnw6O
aPy15HEqKvYqjUsWoIOe50+Vz5pUlB8vXuaxkw5ifM8ulGH9170+RLkoHXyC
G8VctPF52W65NSlBh7jwQcP+E1T0du4VUS1DB5f3P9ctaOB+sT4/tSxPByOJ
44cFdKnI4WPfyKaDdPgm/Lm79QwVrVcU0uOh0mGbY4L9tZNU5LF/dUjhCB1y
ksunSs5S0e1+leX9mnT44m/VzXeOikq+CfykatEhMe5emwPWE5tvy4bTdPjl
OBnWdB7vH26MqJ6jw/pbl5dOGFDRq69DcipGdIgVKOnuv4Dvj8fMSRUzOvx8
+yanBOOLPgGc+67QIc36L9d3Uyra+7p+Sf0GHfbuDXVVNqOivupfTQZ36LCs
d0LM1oiKLLI8T+vZ0mE+vNPn2WU8D4LanI8/oIPQ1sg99deoqLfn82VlZzr8
sNjT73+Riv7rrYwVc6MDr/Q9me1Xqcjg3JXovV50uJy83HPdmorOht82U/PF
9Uoi+zbjfI7Tya3sr+jgu1n5ePgdKrosGjjIG4zzm0kV327h87/oy7bpLR34
Z0XgBc7Xcmo70RJJB2pS1Jv9NlS0548OtfkD9kd/8Y6OMedxHeavBDqc2JYu
mONERfpfbo7FfaHD1j1zh6n2VLS02rH3yzc6rLVuCvrrRkU2wpG3LTLp8HrU
v3venYrChMRe7s+jw+1R9ec7PKmo3pdjRZ3A9ZqiJzd44P0eSzfbVEqHptAs
D29vPA/yCsXYKulw8UT20D+MxcxOro3W0CGloCec7RUVfZ/+/eTDbzqEmFmd
vOJDRanO6/cnttLhyKrYVHMAFfnyoLqgLjokFUlecw6iotxTrqUG/ZjXyGy7
jXHNVTXZoyN0aBb+UhcZgudBwDk//kk6ONm2kKLe4Puf6UHUz9Lhn9GOA5Gh
eL5Iz4r/nMf52yuUvkdS0U53EbnAf3Q4ZrpEPhCL520cW9XZNTqYhnN6pMZQ
UemW2rkT7AzgFS4ovv6Bih5cyB5gW8cAIuMNx3+fqOjHdD2T4GPA7SuQtSEe
z/vp0vy0zQzYP+7idxfzddxPzS23M+DujXKexc9UpBJW5yYkzIASb7VHQRhf
NEsTERTDesL2m4RT8H1x6n9eJsGAgwpcIhoZVPRQNyDnigwD/u7euFL0jYqe
NU0ZasszIGGgZI2ahedTzVO7TUoMsK+VsThRQEVHFijOhDIDzIcj2yAb9+Pg
tzI/VQZscN1mVY/jdY3rfBU0GLBbf3NnXj4VKT6tPi5yggGv2fqTQzC/m01m
nkWHAcwuze1vMM+dWrl8Xp8B2s4BgVKlVOScVNdIMWDAdc7SPsNiKrIUSh7a
bMKAkPsZmpzluD+uJqw4mzMgWYymw8Dxmmye0qZXGSD+9MWGaQL3h3i8C4cV
A6JbQ+PTavF5iPimxd9hgILnM+vblfg+rJdXembLgKAzDV3qFfh+F56mrDgw
oOVSYVN9K+63rQO7Ex4x4Bgnh4rtLyoSaLtm6OvKAIkibsp8AxUNnsl/8deT
AVf1DpTntOH7qhB+IMGHAfmfN9g9q6eiqK8ljbf8GfCgeyklFPMmImv9fwMY
MA/nbY61UJHGQkYzCmFAqmCBUA3mq4NrS9Uj8HmqpWyR68D9mJvk2/Ye18v8
Nr9qN66PXENMRhwDMqeTeiT68H2MWF8gm8SAmIKqY2cH8PvhYbBQRjIDTnIO
fnPspyJ5s9wn99IYsJ0l+IvjJBUF5W1LWshkgO5c0+Enw1RkGB95IjKPAUIF
fu/uj1ARw5F8T5BgAPchnS76FBV9CMp4+ukHA7a1r1rrjVNR6/MckRsVOD7d
JXcIY7qH4+JgNQMOqIRH1DCpyC+E/Z5ZA+6v/B8mkQwqGj6wy322mQE6bXZP
NmB+++R9xRcdDGjbcER3cZGKhDvYhuV7GdC4ryVJ5y8VfTE4tOQ2yIBH8nHU
riX8Pgi0/sUzxgAb9mwV+Xkqqtrd+Ld/igGP32QEm61S0bjow7HjDLzfB/wy
Q2v4exW1dfD7Hwb8ELEIZZ+jIvui+5b6SwyQ+zN8I5GdhgYpOoa9awz4Z33w
nw4bDW1vL7oYy86EpsDuGgOs96lCq5HJzYSfHeVVUxw0tJdV2MCOjwlaYbcq
LVhpiPd01DH5zUwI7OHXe8ZNQ6vpUrtcBJiQy9ww5reehr6Xz1ut38mEwS1s
XoWY72vzsXIRYYLbxN5OQcwn+pkUsYozYVx40JDAPMfRwANlUkyolBNzOI95
Sz2/IyNyTLj5QqDaiR/7y2g9evYAE+Il+FVGt9PQpEl7IschJkzz3k84LUhD
56OUzS5SmXBVXFb1rgANCQV9lOpUY0JX9K6ox5jfNLx5TPMoE37t/FtmuIOG
XGUFGrNPMEG7J/i8qxANMVYZ32x1mFDaN3587xYacvQ2+hCvzwRr2x3VB4Rp
yIc1u3GdARMk7Jp2NG2kIebLB6IfjJnwsP+1TgLmgwY8Xyya4XoVvvRp201D
yy46169eYcKQyXu/K2I0dGM5RebTdSY8mWYVJslh/CM8XOA2EzIvvf66h0xD
LmlU3qp7TNhVE1dxGcd7OiQ0jNsxge+r0edJSRryb5ZKPuXEBApVImGnDA0F
xr4ym37MBNG79RJie3G+7yUk684ETf31vx/soyGJVc3aR15MmN94aouQNM6v
WFuofs4EDX7Lu+WKNFT3sUNI4CUT+AVTPFgP0JCq64J4VSCup0t+MS+Ov1tu
vnFHKBMeJ4mPiyjT0E6t4TcOEUxY/Rt5W1+ehs4O9cWzRzPh7tP+Uzr7aci0
oK5vNZYJ6fFDrS5Y/6TTkQv7E5mgQJM8GbiHhg6m3XX+9IUJBdd+C4scoSHp
9nW+KJUJX67uH9tFoaHOg1sq4jKYkBiT/kbzEA0hztTx0hwmCGso1Dqp0BCP
nOO96QImGG5pGrLBv1rr/CxUsouZ0Nx2z7aISkMv3rxd51bGhJyG2Oa2w/i8
Ciyn4yqZEDtS7jWLsTet98qxWiZcH7zjGnSMhtZ3H/aQ+82ELZvvvj6J9/eN
5bzCmVYm9AYZRXpiP48cNxXLdeJ+u3jcYO8pGio5evKlYi8T9vhxuFqo0lDC
/rhq0hATJLuHFi9o0dAoUaEaPcqECvHXpr4nsJ+WcN7qSSZszbw9eB37zz+i
MelKx/28lbwt9gwN1a5TIOnMM0Ht+IljXto0ZEeubcj5h8/H/CQ18zgNHRLV
iBddZQKvm9Y+Th0aehl8M1KXdQ4oR+xvftCkoS6/tihtrjnoYEqLOWA+j42b
7rh+DoaSZWK2Yt5opMp2dcMcEJNyjfl6NJTOpDRd3TIH8etZxwUx5rvJeCO8
fQ4Obb/aFovriRYkblYJz0Ep/b7A/AV8H0fNovJE5uBlSWSXGPY7mCthOUOe
g/s0W/fNeH/f9QZ6taTnwFUgeCP3JRpiu0xkmcvNgXbZVAnPRRoyPx+++cX+
OXholaZmj+/byl+/4m6lOfBe19OorU9Dzp9i8zuV54C1MT08GdfvgIq+4V+1
OVhJts9nmNPQQ4OnLrzqc3B838Ht9w1p6N/mkGPTmtg/a722Ou730x+MNmee
mgPRYcO9BjdoKLliTTNSdw6cha8sGmJ8XbV19/4zc6D2z+iRMfb3q4nsvWYw
B5e/2dVUGNBQL2fDwkPjOWhz280pguvRpOMzce7yHBhxHk9db0tDleldL3Zd
mYPvjvgdg8//wfVhxaeWc+BjM30rC99vFpmkfTm38XpOLLqNeD9qr3eJ7r07
BzI7VY0s8HnE+bkdrXkwB/JSmTuFLWkIJDdXrj3E+9Pbo2WI+/Vt37pmY/c5
cDLjyHhrTENSnGbxDR5zsC1GaN4N98uT9Pd29/zmQODrXJGMGQ2FpiqqxLyc
gxsoXMumioZsI9Ttj4bOwel50rf3N2noGXWOxvYBx+ex1+na4ft3v238euwc
SCRbSt9cR0OFdXv56r7g8xxW46RhvcDWDv2ArDkwbV4u+u8Kvg/Pxgz0inE/
lGtwE6dx/w+peayrngOP/u/jS3dp6FohyZ5omYN0rTF16gM8/9bVaNr1z8FB
19WMJ7o0JLZ1r5nY1BzMv/1GnpWgof8BN1SdIg==
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
19WMJ7o0JLZ1r5nY1BzMv/1GnpWgof8BN1SdIg==
          
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=100\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736180089052333*^9},ExpressionUUID->"6243adc8-314c-4274-92c6-\
27c92e7e8720"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.736178014873534*^9, 
  3.736178015066565*^9}},ExpressionUUID->"31c04291-cab2-4857-ad19-\
a2775c40ef1a"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"Eq1II", "=", " ", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["cs", "2"], 
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "-", 
        RowBox[{
         SuperscriptBox["H", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"H", "[", "\[Tau]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"w", " ", 
        RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}], ")"}]}], " ", "+", 
     RowBox[{
      SuperscriptBox["\[Zeta]", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      SuperscriptBox["cs", "2"], " ", 
      SuperscriptBox["kwave", "2"], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}]}]}], ";", 
   RowBox[{"Eq2II", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"piC", "'"}], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      RowBox[{"H", "[", "\[Tau]", "]"}], 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", " ", 
     RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}]}], ";"}]],
  CellGroupingRules->{"GroupTogetherGrouping", 10001.},
  CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
    3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
    3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
    3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
    3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
    3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
    3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
    3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
    3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
    3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
    3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
    3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
    3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
    3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
    3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
    3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
    3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
    3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
    3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
    3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
    3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
    3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
    3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
    3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
    3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
    3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
    3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
    3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
    3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
    3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
    3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
    3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
    3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
    3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
    3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
    3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
    3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
    3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
    3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
    3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
    3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
    3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
    3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
    3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
    3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
    3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
    3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
    3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
    3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
    3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
    3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
    3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
    3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
    3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
    3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
    3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
    3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
    3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
    3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
    3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
    3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
    3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
    3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
    3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
    3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
    3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
    3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
    3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
    3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
    3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
    3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
    3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
    3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
    3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
    3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
    3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
    3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
    3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
    3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
    3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
    3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
    3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
    3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
    3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
    3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
    3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
    3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
    3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
    3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
    3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
    3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
    3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
    3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
    3.7352971834201117`*^9, 3.7352972215902157`*^9}, {3.73598066087808*^9, 
    3.735980683558736*^9}, {3.735982701409083*^9, 3.735982722979671*^9}, {
    3.7359898364984417`*^9, 3.735989860821068*^9}, {3.7359942581647882`*^9, 
    3.735994270382619*^9}, 3.735996823468211*^9, {3.735997134764554*^9, 
    3.735997136615862*^9}},ExpressionUUID->
  "2c66d2d5-2f4d-41bc-86dd-68201caa9d0e"],
 "\ntiling factor = 32  , nKe_numsteps=10,  Kessence source gravity= 0  , \
initial redshift    = 100.0, boxsize  = 400.0   , Ngrid = 128 , Courant \
factor  = 48.0\ntime step limit     = 0.04   "
}], "Text",
 CellChangeTimes->{{3.735981823189452*^9, 3.7359819188759108`*^9}, 
   3.735989740965366*^9, {3.735990387929201*^9, 3.73599038804593*^9}, {
   3.7359906368439713`*^9, 3.735990636912073*^9}, 3.73599444422113*^9, {
   3.735996436208637*^9, 3.73599643630416*^9}, 3.7359967540383253`*^9, {
   3.735996929849309*^9, 3.735996932769126*^9}, {3.7359971662645693`*^9, 
   3.7359971677409067`*^9}, {3.7360006963892603`*^9, 3.736000696808218*^9}, {
   3.7361650526073217`*^9, 3.736165068308145*^9}, {3.736165747309207*^9, 
   3.736165747594521*^9}, {3.73616615885612*^9, 3.736166162369762*^9}, {
   3.736169582406474*^9, 3.7361695869669228`*^9}, {3.73617725494965*^9, 
   3.7361772569523*^9}, {3.736177312341321*^9, 3.736177312605173*^9}, {
   3.7361801269141893`*^9, 
   3.7361801399544907`*^9}},ExpressionUUID->"cb8207e3-7d67-462b-8166-\
5eac2c180610"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
gaPRharwPwjX4q4=
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
+HSjLVojd/9/T/4HO9btUg==
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
csVCut8JMvrjLJQ5IdsIDoVRHxXB+KoDpLwqNBrB8xonMX8pMhqwD8vnN2oE
FR95eJmPklGet/fr5meN4IvMsQ9hMmQUXxGsduptI3iw67vTXmEyOrkkVTAa
2gjM85lYyuTJ6KGXpd3vn41AJFu8NRLHs/tdU5VZ1AgUdIZMDbC+eIWOOqqp
EawZ8JjpkMjo7ZX359UmG8GA64UlBhXcD7uUlsx2NQEtr5CcJzj/Yc50b/oD
TcBL/+X5M9jf997oTi+RJtDQ1RgxJEdGXAvx1yvJTeBZ6edjvafIiO2+xfEI
7Saws7dkfFgWx9O1PvHTtAkkZkp80L6I63kJXI6ybwJ2Ih7LE2fJKPL+m1cG
Xk3ge1/Y6DPsf6OT97Dv1yYgvsH+LRv7c3MVYmfJbALdO989A9XISFnN7dx0
WRNg8FcRTVIkowDLQ8uf2puARkxutOJ1HL8gn1FitgmUbBqr3dQiIx5PHZ4R
qmbQ0q+TVaxMRh6Pj+jqszeDDtFzugaaZNRtleH4V6wZxBdaZAyqk5GIzfHs
H6ebQehU4127y2RkNt/cXa/TDGhFGL1f6JKRhJAXL/vdZuAXfqmIE8cb/mew
JGKP/T0c+mOI5Yjde73rvJqBOdgDNM+TUYuesgpLZDMY8ae44qyP5/FBnyzK
aAYlwoKpLTfxvjCzdD9S1gyoppi/hdwhoySXFR/j9mYgPkFuEzAlI38q38Ch
qWZQdVFGUkOPjDRHn9S57WoBSjOZpvetyWiovPoXzYEWcCpcwPa2FRlV3F1p
LzzSAm7s+L6fNyEj+RMVn4BiCxCibiVJPSGjTf81+4/aLWD01N/02vtkVGBe
UyZn0gLOCgxNGJqRUT2XcraqbQugmv1WqemE91WJ41CwZwt4aaT2lrAhIxf1
NB3DsBaQfMP10gt8nuOprANraguwltnbaeRARrdOnCt1Lm0BVhrqDJoPycin
NF6ssrkFaE2ecjXH8dEMrV37WAtIaX/WKv8az/MxYippqwX0Hfx4n9aDjFyB
7el11lZQ1HHtSYERrn/yH8GYw60gK7TVZwvbN5kNth872QpW3208C/MjIye3
Fs/5c61AT2y21A7zISVY4nbVsBUcvlV+WP8NGc3a8lD6PWoFxLCq/9hHMroW
3jbJ5dIK2Bnf0Dk9JyObdTpaKb9W8DvJ4PTuF9hf46Eh6W+t4I5X+C/xMDLa
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
RRuY79cHiApp44ACMvoPF6T/fg==
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=10\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7361777436294823`*^9},ExpressionUUID->"5eb67816-d3b0-4414-ab31-\
35df8039752a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1: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
Iko/jKCcyq9r9Fwb8D/PMEX5
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-3.967260070610412, -11.941332512376837`}, 
     PlotRange -> {{-3.897772880499232, 
      0.5494072866162705}, {-11.765112504973182`, -0.8394720459466932}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.967260070610412, -11.941332512376837`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.897772880499232, 
      0.5494072866162705}, {-11.765112504973182`, -0.8394720459466932}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[Zeta] \\((solved\\\\ here)\\) - \[Zeta] \
\\((Gev\\\\ )\\)\\), \\(\[Zeta] \\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736177743921912*^9},ExpressionUUID->"672fc921-5f3c-4600-b366-\
d6533535add7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1:eJwVl2VUVk8Xxenu7hAExQIUFFFGFClFMAgDJQQEFBEkDRQQJfUvSKl0Kt0l
ZwhJ6e7ueuiGl/fTXb+199lnzZm75s4VNnp+y4SEiIgIkxIR/f/5bUCLU/kn
E34+38la8R8vlvA40VD2kgHr3Oe7T/qVF/N63Lb/r40OVxT9JpE74BOHJZS2
U2ix6uMlSYoDPpWSHvWqhgZz6F8sszngHwTlw9WMNPgqg9DnvgPeuCG3KD1F
hZ0cg8JI/Xmx92BDa6A1FX51ZKNE5oB1yW3OZZJRYcIDjiSDg/4ZBYSzPNGU
WDS8ra/9gMPXA3KI1Clxe7ZKxu6BX3Fnd5V6gwJPhnbfoD/If+++ti+WRIGl
/wtSvXLAOnxVIRYiFFjPb0ogzvtA51WR0RkjxzlaVXHGn3lxtULmm/pf5Lgy
pfTbX19eLHfSleuFLTmWuXvstdFBPzzX0TCtQI4DeW/25Pvw4lfPKqpX6Mhx
714ogfXAv2t3rfVmHxluo6hmEDro9/Ie551z7mT4bW44T/yBnqb9hsnyHhmu
Yah3/HTQvyBULVxRmgwzGUY3H/HkxYFku+d+0JLhUC2so/iOF9+z1E95XkqK
Td5qPhPz4sUOBDX/vHBS/PGtkuIzF178GjtLRemTYqn6pnQdD17cMcDJXXWS
FDNcNWJ59JoXG+x0zPcTk+L6hnqk95YXM95iZqcYI8EULPHerw7yb5aq5Nlm
kWBWi0CHXGte3Guf6XjIiQQ7ZvfMBz/mxU8miV2CdEnwf/SzgtYWvDh2S5KO
7RQJ1qRO1ac5yHvrNVB/iYIE+zunXVD048VHHaPjyaaJsbgy/8VdY16cNP5J
gjqJGAuqcum8e8KLWZe6Fy/4EuPPuTK80Wa8uG83xsTpKTFOCeN6Y/OQF3dq
PT1DcoMYn17+WnXNiBer5zALv+ckxk4nl20E5Hmx7ca/TdcFIlwlxtqUrsaL
PZifHX8FRPjyj50PJzR4cbcvdXdXEBFm4ddv8F/lwfqSoRmbH4lwomq7SNoZ
XnxHSdr9kh0RNuqIGicT48XDMTp8tZpE+PqZmQhKQV68XkpcxHGBCDvy8J5W
u8mLaQanDI9wEmF2j0P2RLy8mIFiU+kUKRFuXh4VyjtgCiH/zbzhfZin5Ap4
wsOLo6M95cWT9sHKJf38vCgv9iyWFsoy3Ye7oWl7BQQevK7My3Dm6j6kLhy6
+3uDBzdU7EQ6M+8DZyy9kdgCD5ZZkn9n2bUHfck+9hsNPDjKQ37wffQebF4z
Se6X5sVjrP5cy+/3oOC58MTjA3+GQd3f7od7oHbzlR71dx7M866TKVdkD3zL
OEnGmnnwKGXL9OGRXSCeMGmp3efBSZeMk3HxLmjJoRC9Dh4smmv37InPLpwh
XZEyrznwaxzmELPbhZse5nwCL3gwdeA172OXd+GNP8/Dj194sJ8TSVox3y7c
yDtd9DOKB6+qRd8uH92BfzLkAnbvebDpFSrPR6E7YOYaWWIQzIMLSgSSnZ7s
QI2KZH2kBQ8O/2l4slB9B1z57/M9NeDBxpevq1fx74ChgkQTx10ebKHEUJFE
vAPH4/g9Uu7zYKSq/cDr3zasa/OeXpHgwXL/OgiW37aBf7cnYuwsD/ZQ8RM6
5rQNen2tf7nYePB9SZqnaTe2Ab3S9N2V4cGkmZdHN8W3gTmveV78JQ8W+lMh
ZUO7DZ+qChf+8PPgiR7P8eHhLbDRaVP6b5wbf1ojE/lQvgVBGS+7+q4fzNfE
sz4leAvCnRTvPanhxuHh8fvlz7eg7svESZ8kbpxDsTAsoL0FYuVk75TjubGp
ZtQ3C6ktUPc+zZJTxo01E0qihpm2IOauCmOSJzdecc+dLVzYBLiBFLPcufHX
fAuLq1Wb4BT3yCM/ihsLLkQZ6ERtAja99X7MixufuRSXnPdpE24XnjRc7+XG
JZmCna76m/BCVvpTwHluPD5pU7wguwkbYiJclKe5sUf6wokzTJuwwPDrh9k5
bqxO3xmnvrYBu126p024uLFS5Di5RecGNE/Vl0Yc6NJb4wW0qRtQY9Xs5UXH
jfXXU1n0vDbA4gfJdvs8F955kecl+WoD2G2ZprusufGdbTHDX5obsEzrUmG4
wYXbKbJNy09uwNvShMD5Yi5MwxrnnEq7AT5/9of5I7lw1CJ5dcXKOnzAVx0Y
E7kO9j9LxLZzHcQ0vganfOTCx2bWF6lz1uHLsr3lA38urNg1t9kZsg4RjQ96
3YK48NzYlEHy63WYf19mrsbChTks4/7FG67Drw/d7gvJXJjdUe1KuuI6fNLb
Frgny4WDnKabrAXXYUTeelHtBhc+lUF7t458HeZOO+xNHuHC2WsfiK4trYFz
28LpKFouXBbCe6GwYQ2ackvmSsY58eGik2IMmWvw+pvSTngf58F63m4f+7IG
aMGB90w+J3Zf753pebkGN+/YfYwd5cQSqOJY7J01ePPeWndihRMvmLoMMV4+
8CdM5Gxkc2L2ntSgw0fWQCto6ct9H06cV0xsykC5BjlBGvrm7zjx8eNelvvz
qyCRllLJ/ZATL6YGopW6VShuUdZn0uTEz5Zi6+zTVkHuq5joUW1ObC/+JtL0
6yqcM5TrkjjFiUPX3C+WuKyCzruAH9/7OPDN6mdGIUar0KUkQDaiwIkfuDwv
t7m6Cqu1HuPPOTlxkg/vvzLpVQi7ZOe4tceBGY7e3xngXIU/FZxlR4Y4sKe9
Uv2/nRUQlw0hD0rhwHsSy662QysQcFYwuzeGA5P/LiabrlkBm+33xntzHHh0
yMv9dvIKHF/80xXlx4FT0EqPbNAKXFo94sTqwoEpuc+t9dqvwGK607bZgZ5g
JNan+2gFKqmYJyxecOBTzd7OkyorUEvv8sHggO+qhF0VklyBr1smUgqnObDo
Z8kjbBwroKmYsUvVy45FvX2J+PaX4a3G6WD+PnZ8bPeiO+fIMpw278/JXmLH
bxYpHB7VL0Om0k0PaGHH3FlyY+7Zy8Ad7a/7VJEDM1O3f5j6uQw03Gr30v+w
480F/08n3ZeBZNdxwiKOHWuzSAvL2i6Dl8y3DeEcdqwKtP9u6S5DP1SHffRk
x+LUfFNCV5bBhHAu+IwaO1Y57HCUS3wZ+B5NCnTcYsfz9WH+/7EsgxrxWL3L
CXbMejnss8vuEjB6W0bEyLPj/pG4yazJJTB2vx4vdo0dm1+ZjmmqXwJ5C047
ZzJ2TF/soztYsAQO4Tq9plzseCCPRTwmegkaIgMcdbXZ8b2+S5dDvJbgH43g
H+4BNqy/Nry+YrsEggUOPcnZbLguLq9O0WAJNtQviusms+H46M2Hg6pL4Hzt
/Y5FMBseIZirr0ouAX9CLInlLzbcmTDkayS8BDf2uxyDCg7qc86FmVAtwdCL
8eYNMzYM8ZBlvLYInvSzHEVxbLjjJL3FlYFFIFI2e3JOjw1HSx5VNKhchLhu
GQaGh2xY8QvVW9qsRTgjZ3HJ+CsrXuHnfvojbBG+aeX2DHCwYUOd8rMfPBdB
Zmh0zqiUFd8gWQsdfrEInOe/X6s4wYaFVYqKew0XQYW2Y1h/gBV3yJndOXJ9
EWonP9lxBrPiczQr63lyi3A+Ms8jbYsVdy25J/iKLMID1tsR52tYsVadtP5Z
2gO+/5VE/sDvHP9OJXebACkPTYxeRbJimYkzTzomCHDkok1EwntW7Po0xvNp
MwGE8n3E9rRZ8XqoQ91GIQGWhWVbOOVYsSBFtdTbeAL4HauR3BBlxUTi2S8L
gwkw7fen9qQuKw41eslR7kaAw+O+52XVWHE+09oPp+cEaDnO81RXlhXPFBsJ
pzwgQP20zPcQYlb87oguwUSZACard8PvLrHgkL6JSnlZAmy+EC69VcaCL4ks
MraIEmBi/iSzQgwLjpRUSbVgJEA+ezFdL2bBR8y7zu7tLMCbs0eCu76xYNFH
DmHxHQuQSHwvQ9CVBYdz62WoZyyA/KXk/HZ/FhyUbCZG92kB6L1EhIMsWPCr
880yiyYLYE/1aebdexasOXU0KebKArQecrkZYMOC+1QfNJryLMAlKWnVvkss
mIpatPb0yjxYn3QXe0zDglXf9frl1c/DRYvJhHfULDh5jeZXT+oBzztXxAqz
YIHgR3fnPsxD27t0S7EeZqwXo/uq2nge/FZgRZKRBdNGECKTLsyDv+/+x0e1
zBgEvqwd4pmH4feijFN5zLgTX6te3J2DOLYTYb5nWTApB9lcbdsc9BtGn1J8
y4zJJYFJKW0ObtLWtgrZM+MmM2n0zHcODuty2Py4e1CfoK4U9GwOaJc1aH8Z
M2Nz950nO2pz8Fv69RCNGzPm1vjY3yk+B/BXYTHoITOuu3gz2YpiDj5Xm+Wh
g/oxYwvxqdFZyLnBK/HXiBk7bLt+fV8wC47bSOWxPDNeCfRaJ4mYhV7uNUHt
RSa8LJyzV+c4C32CIUeq95mwcIA+44DOLIw/v1j0jY8Zb9i/m/S/MAvp0hpJ
VDlM2Jz0zV9t7lnIZl4/LFfNhNd43SzvrMyAW3VVzPBfJnx2gpWqpXkG2D9e
O/K3jAnfTN2VUciZgfsM9yVDm5hwYtOFyvXPMyDf4ynz7DMTZq+Lf8/6fAZ+
T3l0pAYy4evv8T02zRkou2/4U8KOCVfGPkyQPDUD7eqVPiDBhPXKvUtpaWeg
ZXCgS+IpExZ/dTntytg0eJe/XN67zIRf/UrdKKyaBq8o/7xRuYP+2/eNnydN
w+Pbpc6bTEzYa8/ORNprGj4+zPXuUGHCuW55M4Hm0zC1/Tb3HxsTJsu5vPn7
+jRoSktcneJgwj9/8R75fWIaNKruFovUM+Jggr3QefppuDGpYVatzYiPU8bn
HZ6dAs7jOR8DdBgx9diPyy/qpiCsc4HL68D/mf6/oTPZU3BMLGrt+iwDVv59
WS/x6xQ8J18pYbFlxI3j4jumNlPgJuSoEyzFiO+mTbZ03JwCSnqKvazzjPhb
mN297LNT4Oi44vpUgBFvB//uL+Wagi9zNJflRxnwyKLYGb+1SZCIMLG1ymXA
ZIybbNZdk/Bsd+3i3BA95gk75kZVMAnif66Ynm1nwEZeVXKFYZNwmqN+qDGA
AYeMZLJyuk1C50zyv8Ytepy9aditYTgJ0tVNhcOqDPjzN9/9msuTkCvdzTO5
R48VG1w/2otNQuaM03XRwwxYvvHTVDzVJNyXr7fzSaDHJ3RD60XnJ+D2Ov3X
8Df0B/fJQVLt+glY6f9NNX6NHu+6NPH9lzYBU32cMccc6fFacI6xXsAE+Bif
FHFnpMf6RdknWu0n4AFl5jWu2/Q48oK5tJfeBCx4aB5TO/C70FgpnrswAS+f
iSYVnaHHWtc4ZngOTQC3cbbfTisd/q1fkUW/Ow5ZOusuHJl0+GtzIpXT2Dj8
TWtOFj9Kh5Vqz5I61ozDrdodGuZPdJgKlM83p4xDiy9/TL01HX6ZWdjxJGAc
Dj+UnyTVpsM6kiZdsnbjkHDY+3aUBR3mzvGpCNEbhyt3HnMkUdJhFdGJGxHn
x6FSZDfuryAdzhU/HUciMg7RVzSiiWXo8Fsz/pUs0nFQVzxf1JhMi2nOR7oG
zI7B9zT5rMEKWixqYPZbvXUMeFxikx5+o8XkpYNaRNljwBXyTF5DnhaDKIl7
TfAYGFRfaS7wo8VhgtmDrM5jIG5nIYe3aDBRyAUxLuOD+gqN6M6ztPgp0yeL
Q6pj4CdavlcoSYtPtzDNNB0fg9bfF5/u8dPi919gR5JxDER2pabaGWixpdRi
9szyKDQK/rmhn0iD94tlQn73jkJv5lPjT89psNMDluquklHgO5JdFGVCg+ta
s8NXYkYhMp07+ZkdDeb4w3+8/+MovIogtfnhQ4Pdx8ba1p6OQv+WLq0tGQ02
7EnojtQehaSjP7KYv9FgitdSn9wvjALhM2uvCDUN9pBa2tviH4XbvwaPNkxS
44FUnnI7ilH4aXLXUnyYGr92/pf+YGYEUm/cEW35TY37Xa/FiLaOgKnp0/Ym
VWocZBCoblcwAnS9oy4j5dTYNPDI+ZqIEYi5P2nC8ZAaTzjRafl6jQD5NzdW
KWlqnCR7tPGX5QjgBvE62+sHeQnFq423R+D2QLnz6ThqTHwoyvrWuRFgI72U
oztLhe+n/lpZ5h+BO5p3NrqyqLD6sc328+QjkKRgPVf0kwpbqrl7F8wPQ8sy
2dyzUipc0fWTFjUNA31X1se0v1R4oWkuZrRgGEJ2RE4IqFFh3tZC90fRw8Cb
NyWvEkaFz6yxPFr2HAbOgX3OJA8q7Mre7JH0Yhje3P58850SFU5jPipje3cY
nCm6b7iZUOFfF2jJRxWGgauRUyV3jxK7dAa4vxQbhpKqibiyVUrcqrBx/i3t
MESoVta9KqPE4kf38NWVIdBJRsRW/ygx42TgsdP9Q/B0I1RoJI0SQ1d7KaoY
Am5vabVfPylxXabg1KXkISB2quUfjKbEp8KJvEq+DYGtZo/eO3dKPHq04MHz
V0PQlRN9XV2TEitaJvq8MB4C8wchW7IelJjflqqQ6voQhIloNEs0U2D2lOJs
vjND4D0rMd5BSYnJWj/JP+YdglimM7zHkyjwF8uSi74UQzD9YuDN424KHNT0
bNJ6bhAcq9/GuuRQ4CETqb2LrYPwS8/QX3aMAne3OUQK/xmEmnJjO5lCCpzZ
Ln2HPG4Qzv06k80dQ4E/CFeyrvsOQlfsdPbcNwpcS2v8NMdxEJiqB3lK7lBg
zSpP71yDQXB7q75lL0KB+V8w07eoDcKbS/OmStQH9emmYdpnBqHt3k31q6wU
+B3vpEUAzyBouJUwv18nx4dwSV8wySDoUs24rDJT4MPzQpp3BwZgidXY6FYL
ObbZkqjx/T0ATM4Jr4IZKfC3qHD1pFcDoC77T8TOjBy7Up5XUNEYgM9CJkLX
YsixLy2hHR8ZADHlgBYHJXI8+Hcae673Q4MMdfSmBjnW/bRwl6iuH5z1B42z
tcmxmrLKunh4Pwj2VoTf5yDHw7qZKUrW/XCaaPfMa0ZyrM/N1Bp4tR8oVVXt
2wXI8ZNarYA69n5Ymvp7+NVZcqyuSOIhMN0Hs2uJM6NlZDgWVcZ75/eB0+7v
ooxBMnwl9ftEw399wHeSXnOwlAwnTUiNk5r3wZXVhqfTqmT4seWb1wNn+yAp
UkdrRJ8Mv00V3Wan6YNnhDDWL4lk+H5nR2XxSC/cJmJbrHtEhn9fYFN/V9AL
1WcMCiPvkWGl4M1lJu9eMLx6Xc/9Mhn+18eR8Ea/F8w09P0/bZFicR832x3J
XvAxuV0lSE6GjQkTc8eoe+Es8Z/pGy2kmJZIu/B5Vw/wN6SMFP0hxUs0ZK5H
U3rgdLr0xdBPpJiNLOM8s1sP2N+8eqE3mxR3GZYZmD3qAc693hJdQ1JseU2O
UUWqB6q2/Zz0D/zjyS7+90h6QNorJMQumBSfVEx1mujshlZG2PjiRopTqgJ6
85K74cXpOVOfY6TY9OxktMfHbnCXJ/oxx0CK5cfb2Wp0u+HHGuivD5Fgg4EU
Zd/T3RA+9mTkwhwJ5p33GThD1w0K1K9PBReRYCZJxk2u4S7Qy+/s0SYjxQpd
hztsc7uA34WikCidBE/Pet0u9uyC/Ta1SY9lEvxulUlp+HEXdMSXSlIWkGCh
3xWPcs91wTHuWBPSgzzhe3TbQUxdgBtHfz0wI8GL40YbdBOd0F53zPG3DAmW
JbRLkRd3grNn7MaHXWKsRy3aXR3YCaKcVXM9OiR4iuLOswGrTkhxCwickiDB
C2dUs5OvdEJH4O1MahYSzPFZthJ4OqFakzMgZJAYx1NRksqtdABrSPQW+Twx
5t2K5Sqv7oCl7wJFK7QkOMKnNZA0sgOUv3+WOV9AjLvvhRWN2XfAy9aPXsKh
xPhPrzLN41sd4MHuk7qfQIz18ytNVU90wCUC3bmZ48TY9aFS8SppB2ibn+xt
siTGb9kpXcZb2oG2W0jx1zNivPn1QYlbSjt8bzVIWnUkxm04ajHAqx2aUrtZ
V9SJseARFcqXpu1wMX6bkvwsMZ77YcpDf6Ed/N++CXpLR4y1Z4dDL7K1A7dD
i3obgQjf4da8FzTbBnH5Vj9fNx3wmVKH8bI2MH84MEdIIcJ3yU548fxsgzOD
Bmb7f4mwUIfDW13HNtA2MrTjACI8kXT13LhmG2ybv68u+k6EfTWTtc8db4ML
A/PEu5lEWODlQ5XzpG3g8SSGJ9KbCJt/tHy91dMKxcn2O7ZmRDi0o7HYOqsV
wkoLQ0WliDAj5Y8HAZ9bwbxQe2F3fx/I7dPXesxb4Udw59bgaSKcvXPopveV
VvCwnXc/S0eEa9wKT43ytELKSdJKICbCFJysa4SNFvCoYyvmDN0H4SdXvc2a
W6DabE6Wm4II2x5SKvNJbIGVabe+W5v7EMx235H9Qwuw2GdO5fntw7pXY3D7
wxaw/os/3bm3DyjhxpE8uRYobP2bmtOzB37XJ8S72Vtg8BFJs2LYHlAWuswc
m2uGzx9acxVK98ArWKRTvrYZCmtbfJWC92CONkS5Ma4ZpAqUH1t77cFRHRY1
JpdmMAq08mew2YPq+NfFnnrNELD5vOiOyR6Q/3LVkTnTDFl3Sgm0fHuQQuW0
JEXbDKXFSefIBPfA7QmV8e50ExDpn9u3tdyFPNFAx7TyJrh7n/CStWMXBv+7
YEcc1gSZuu1uSrd3IZBV+vP26ybo5CP1dX23C++plv9z1G2CMP8FS/0Lu6Dn
92nqj2QTnJDBhO3AXaCKVWvgZmiC54vK573P78JVTtpE14lGcDj/wklhZAeu
Lsh3lZY1HvS7H7xZtwPGYjv0UtGNAG63rWa8d6Dw+PvaAedGIGw4Ccnd2wFi
aQm7l3cbQblBjPn8yDZomi8/i5JtBJq3ascZjHfgmVuely5LI6w+dZTeptqB
NyLVY0m9DfC23yg1luQg/2ty4WxIA8T8El1zqd2GW+VezMo3GkCkrYnZI2cb
IoNshZZ260GL3olLfmEbTnr1dPOU1sP6lDzTnRPbkNfx6uUh53rw27z++t/Q
Fvi+UmxUk62H5HmzpGbGbTDMkDrLt1YHCVWiYqZS24B+OB0J/FUHh7jtI3ya
tmCTaO4eyYM6ILpqWe3cswVZY88yxLjr4EnPXUn68C2YlWtWsGv/B4k6F/mF
M7aAUOj2WtHvH4i/458SKNwCJ4O77nTK/6Br5YkVP+cWnIwNI+nYr4UnybWj
X7i3oFaGhOY51AI6nXOIynQT1NOP1E8614I526ZAevwmuJky370kUwsKV8OP
VTZswmeTJTbOyRqYU613ijLfBAb3BiP+xBrQP0fxlaJmEzRP+CV0Pa0BKYH6
5I9vNuHY/qWk/cM14Djuk2KuvQksii/axweqwcpw2vPb3AaEl5cZx4RUg3gL
uz1b4QbwvotvmtauBvsrtYFPgjZA7ZmRsgZtNZyWo7358McGaId70NvUVgEd
apYO+7oBu6erswq9q+C+5mXBJqUNyHIfFn+qUgVucItt0mcDSIWtfznvVEK+
9ycVmdcbYBts7RRYVAmrV/XMhak2IGC77dG8cyU0c6j1pjevw1t1zX4FmUqQ
JGTN0pevw7PZKwZv1ivgbYd7UrbTOnirTft8yK0AI/sL21xP14EoZauCx64C
pHyP24SorMOhb57+bZIVcC0gX27s4jpIiAgVfp37C8+jxdQEOdehfdvDkiPx
L/B3SMxJ864DmVOc7q7xX6jZPokTj63DtLpHX574XzCRjTA1Z1yHGdOESerJ
cjihsJY0ELgGccxHTf1iy4GfEw3SmK9B85OwrzNG5aBbMa0wfnQNbI8nrPke
Loedf1io6OkaTJU7n4iZKANL8dj5gAdrMC6CAlujyqAje/i//5TXwC96xivb
sAz8BqXRp+5VSPjc+XFNoAwUcnU8jKnWQO/PWE7LQCmwdguTPqtaBb4FZ7aw
n6UH5w3//cV3q1B2Nj3054NSOK2F6dKur0JrydGzXXylEOuR/XPr/io81lWy
iOkrgTsKG0oMXKvg9S6ugfpHCXwKVMknZViF2hUWjZ8PSsDyo1tjBt8qKEyQ
fYnmK4Hxv6R1/2ZXIKaI2vnpEIY/r99Q0/xbgZ/SjfcCwzA8u6A5StO8Aus5
+9InDTDQkh1niLdZgd/2fTJTQhi2Qip/r1xYgdMmR03uVwFE0vdsMsisgFw6
ZMyrA9C/KyCYyK4cnItTw261xfB121F8bn8ZeArI3py5XgxuEunbjdvL0MwN
YtrNf0CiN9Jtn2gFeDXVn9Bp/wFnqpPH7elXgDNHiNDUVARPa12a/H4uA9H5
sJBHKkWwysi+/sF9GQoZxwS3Ggphf0p8knN+CdLqA7vsHxYC9+vObUGrZTB0
oAzy7C8AnN6pREW9DHppfHGqBgUg0Myj8oljGQpCZhL3JvOhYeW5pdvEEiRn
q08/t8yHQ0wC7z/zL4OcwxeJrNk8aH+VOj9evQTQd5TG+XkevHsy5T22ugSB
MQsW96dyocD3W6ux3RLomkh3NTvnwn3DIa6HNkvgObbwxYwuF3o7nHJTVZeA
9Ja6Y59vDhyRMpQ4RrEETs4mzhHMOXC2T0xYUmwJDjlMajz3z4aeotiIPMYl
MDpV1kgnnA10+zQ8P0iW4E4ydf1EYhZIhixYkeFFyO3L8bM6ngULZRwRh4YW
4YreoUwtyARRLvt2w/xFKL92bWvkUiYIzjHmz3stgo1VlxZPaQaYEZyts+QX
4bfdx/ujmhkgOtAR1d9OgL3FXsHUlnQY8sqOMLy0CIRTCguXzNJhTXdL4TD5
ImheuGXbNJ8GDygjv8ysE0CLXCfHwToNSCpdX0WPEsBODFV/3EiFgViUemeN
AAYfWqYTaFJBJO7d6VuJBHBrm4o7yZwCf+deOVw0JcA1WaHPD6SSofN2gs67
ewSwb+db7buZBCUsuz6tUgR4rzztesX6N2wPF/c00BHgaKHUaL3LL6Dz5SVU
rS3AantWrfG7RLBJ4Gx7zUIAaskblw6FJMDq+T1iW1gAni2uE5q/4sFS4QKb
/OgCvJR0W20ujgOtFg29CMMFcLR0uvm1JxaSOAyCzPwXoLzdaXiQKBbmGRZL
ZX3n4ToQN2syxMB/T8dLyO3mgbLH9NSiWDQUZwqXNTjNw43kZwPVSlFAtcmw
oUk/D5ff/6CLvx4Jl0nvGg7tz4F+fXmK1ZMIEKD1NrjbMQfyJ8sKj4iGA6Pp
yOcZ9XmQWQW1TNWf0NImeFg1cw7ab90NOKL3Ha6I1QvS7syCV3bTVsyvEEDb
mxqhaA7o3haR9DcEgYjZw71wuVlw0Vq+7Hw5EDxC1IsSWmchs8GGuOBFALA3
3tEayZmFI4SHktbfvsJi+n/hFEazoG5Qb6Fb8gWE5wgki0yzwGU1L8d50g/I
Q62SNwkzcGc8hbzC0wvKRbPu7JyfBetTU7uvFzyAXLvjatDcDBzrVfrw44Mb
2NZYsX6fJ4CutI9zJvc7yOH8/keaYxEaz1W/sWlyhDNkmkVLbQSYx9UT6sI2
ENqYvpe+TIBodKLH280U6D3KV4nLCXCK9DGrJakW/NbrH532JICfvNgN7Xeq
iE/p8nRAFgHuWvv8vbZohL4BH0d1HgF4Vcuyi4etEYEsy+nbIwJ8jU5oa413
QLl7V2eDbxEgyKI3ePPMW8SQYFOYpk6AB43VeRoxrsjnqVWIjgoBHHZXBeZl
PdAtBo3qUSICCNNy7siYe6JuproEfSECsPdhOcVOH7QiphTOXrgATaTlgZsX
vqDJ+vJunuEFCItd2nEh+4o271hSk7QugEZdIodYjD9yqztXliGxAJdk6+TV
TL4hWdl89m4tAnSRhVztZAhCyzoltrecDvyiF6pPdQSjx/H9EoUz8zATedxf
/HPowdf2T9ZpngVw8KK/0HvzByp80xC9y7gA/nzMFRcnfqIY9uNWjyPmYein
P+XUh3B0JNfyManXPMhxs554lRSBko8WsJj5zAPrC0/uJx8jEeGEhoy38zzQ
60fSvtKIQg/GZpdT786D8NUv9WfEo9HJSxn1tTbzQPH3alIibQyS89RcUGVa
gA87ac/eDMSg5uEtbqbsOSAd9ipMD4hFK1ev3CvamwOlvWZmP9s4NPR++cnF
kjmolqLVr9WORzmyOneoy+dgx7HmY/mphIP5dG10P5uDrWJFT0yTiMpc7Rjb
5OdArvFoe9hYIjo/xTnWdbCeEb3m3ovxv1A3qzzhl+AcyLYoaz62+Y2MNY6a
FVw8eN+zdmfmLychesq5nZC+WcC2HcGt3MlInZWT6vLqLFz9ItB3aDQZ6dvs
vrRpmoVozVMgV56CrM0eW5gGzsLtnmCJ/M+p6N454zqS17Ng1IE7w6TT0Dij
cvWo0yxkR5uJx/9IQ66+cefc787CQPkn4/rdNHQ364XtSa1ZmK/TC6J5no54
FUwHtWZm4KNsw4ppRzo6fpvylSXRLDhICYaNymSgORMXtvbxWWh7sPuGIToD
TaeztlSkzEADA9cGGWsm2hQuUB40n4FfKraHLV5noqKRR23OeTPg1K0Y/Ko7
Ex27vU2RVTIDo2XsqoYoCzFtHSsqZpyBXCe9D4spWaim9r9/ZbQzkMH362sU
azZyoVsk/nx8BqxllxPdrbNRUdHFS94t0yD+4/FmUm82Cu45dDmKYQacnRdJ
7dRzkO/xc7Vn3abhrsdob9PvHDS++pU9NWEaRkS6U6YYc1Hi1ldLbrtpuJwm
lFLimIvs7gUM64lMg+Q1hoIPPbmosOPl6wq9abjIun/itXIeKt4lPXuTYhqU
p/OGhSPyEMNJbut42Wl4rJlrrEKVj57kP1Qf4ZiGrBMTKVPW+YjN7vhIw8sp
KBpxc/jYlo/iCHYhLYemYe2sa/77swXIzzmxd1V/Ck7mGwrwhhagS2+ZW6cL
p+DxqV7q8L0C1P4qMTZWfAr6wO60yuNCxH684szE4ynwlpCQlSorRJvP/5kP
UU2Botzw77EjRWiK7VZeqOIUjAmNhdb5FKG51RWt+epJiBZUruWdLUKywWuO
2lmT8OY/l86AW3/QVb6h+akDlr7r8zkl5Q8SvFxOGpI2CX0BAvtqXMWo4FzG
ISU0CcFdF7bC3hUj9xmOhlLTSVhXMLWYnSlGGsenJD+JTMJrqsT7klcBWbuM
lD/gnwQKGUHt3QRAodqp/SztE5B4Nq0fkWP0vSC4ZqVsAgxeO6bTyWEkJxcY
Wxg5AXfs6MPuP8Gos3Pic9HYBHy5Mbob/Q0jDr5D9/6+mQCGn7KIqQqjxikR
+qIbE/DU0kp0YQcji82BlH+sB/n/6E8NSJSgb16NZI/MJoGe5jD9hfsliNZ7
qiOxbxzswy0Tt31LEIPGL8rs7nG4q7N/5CEuQU9f5FgGZY3D9XAyS4nFEnRN
4qH2yx/jEO6zGpgvVIqyw8/ROXuNgzHZvWRvjVLEHN/taWI+Dou9d4T6XEoR
BSUpX67eBGQ0hGf/TS5FUiL5P1dYx2Hb++NDhsFSJBOfwnyTfBy4O2Uym5nK
EIONQO3h3jF4q985q3ypDNm40AfC+hj8Db7uNfKsDA2w3KYayByDeq3Lv1p+
liESxdJej7djwMlBJCfRWIYE5uoZ6PzHIOtD3ADbXhkK/+LVySk8BumCQS3X
JctRW/vIuzyLMch/IT0kZFiOlhl0z7+iHgMdFQ22w37liFT3lEzayig00Hpo
V/wpR1y7d4wukY9BbdBijMpcOeI8e+LjVfcxKHsrJGrN+xexKVhWbVWNggNE
BTeo/EXuxyIkvKxGwX9aw0/O8S9yFWW8pWQ7CvVuh/qrEv+iuQGfwAXDUXDj
u7rX2PEXvTLL+1V/fBT4ZXkoLSkqUEia0FvJnhE4u0Sl/FmmAiWO/i7IWBwB
Ig6vr4HGFSh2Yyztft0IZDb5sQR9q0AxXxN//soaAXhgyCpTUoFyiR4e5n0+
AmJGjR308xXIDhcnLrmOwIO3jZMlPJXI762ufNqFEbifN9n9RKMSnQjNvfT0
6giYKUzEUztXoohETd0R3hEwdRr/UxdfiZ6gjJ9ZM8NwzL62+VdXJXLjeKmU
qz8GvrlCjcIUVaiw+RdtsNEY6N5mrTgnU4XIfpOPFoqMgRmFe3qGYRXS8eZ1
/XNhDMa/5ck0+VWhaUUrhYL1UaD+nHXSB6rQ4LquJnXuKLTvb9ZrLVQhmyar
QLHUUTi6PNIfy1uNbFPKCpWTRiFr1CuC62o1Qg8M+JksR+GL0ctmJ7tqFBGq
waR9MG9X19yKirhqxL53xpCLaxR2PnSIMTdVo3m7VeoshlEwfJFy2pqoBjmT
ZWbPb4+AuvDwqrpEDXI4b7F3pXsEyv+5Sf++W4PSaGTCKStHINRavIDFowaZ
XzsZXuY7AucDI9dTMmqQjKGChvGnEdipv+ecN1iDUoee3HpsPAJosHYlkLYW
uVT4y7Hyj0DVVysBP7laJHd19IHA2REIoZdL0reoRY1cr7gJFcMQ05/4Kflr
LVrZeVjiszwMZS9+d+fiWmSg93xX4EA3/yrbvD1fizTPupMNJw1D11tD0u+8
/xArfRJLdukgyOrWZAWq/EMPi9xG9x8MQ5XueaL5l/9QAI8B3/ejw5B7u4WE
M/YfujGpmR+5MwR6S4NfL9X9Q+LxlgH7B7ptN0kD3eY/9MuKx3lvbQgUzR3m
Kw/XISmFVeqTGUNwy8IGXb5dh/Tp+onCg4ZgvEiln/tdHbq2LPPQyG4Isgkc
JG+T6tDvXbbzFJpDEGPyvde/ow4V7rKRBoQNgepFDfnvJPXIymBChPXMELid
5zl1V7IeFabvNq1sD0LW5p9i2nv1SJY4n+tB1yCkaBvmTnyqR95qDz7fqhkE
ydABtqOZ9cg+apJWKWEQRiyOuZcO1qO7OoTAqJhBsPftQFq0DeiVcXtGPn0/
5MbsEkRlGpCaW6lN7vVBYBU5o1xr1IDMJivlxbkHwT2C8esJvwZUxMTRv8I6
CB1yP37TFDSgho2vTCb9A7DIoA8d4w2oT8s/Zt2+FyIMSe+dp2xEQe1/CL5J
AyBD6v78nEAjspJXMKOwGYAHp9tJj8k0onWWXi9ijgEIlIolUVdrRJmnL0WP
Z/QDWfum3rx+I9ptbNdhUOoH7SjrGysvG9E1f9ssDqF+WNa3TAr1akTxpftN
JVl94KcY36QV3ogWb3R+jBXshxc3vKk3sxoRVYagqhdjP0i7q3ZsVzciU9s3
AsdV++DTc/MzSQONKKOC0ZSUpA+sg72lidcbkW/2FZ1Hyb3QvjQczUTbhBYi
YhMoTHtBYd30XbBwE9rPTdxfCumFGoEuagHZJsTw4gXnO+decD5ySq5RvQmd
8jxnq67WC+wKO7omj5rQCSXph2ZiPfBe64nUs5dNyESh16fqeA9o8i/QeXo3
IXWRvUKByz2g5aQg4xvehJ6eldUpO9DLf7eJSWQ1oZyQwYjo7m5gSU6P1K1q
QnaHHDqYz/cA4vt78nF/E/JysG2u5uyGAtn0F2tLTeiC6pLnoF8X3Po6Oe1N
1Yz0mGpG5Ua64LFInJILfzPyE91L4kvuAofDG1eenG5GxGjVa/9TF+RmSxTr
qjQf3M9JNa70dsF9dhaf2vvN6KH3tFjcaCfk69+YY3vRjGIr59sYXrVBw+Uz
iooezUjryrcrx890wv7VOg6l783otbFxRZJlJ3w2X9y+mdqMHtBKh36+1gl1
iq0K5mXNqGeBvfSEVidUfIu8ItbVjD5yZJeyS3ZC2Jf8C6ELzehxZuTz/HMd
MERaNfSXtAXxukSwVEM7zDLnOUdwtqAR5sbchOF2KHg8H6Z5rAXx3JCVDEts
B7p7L8yZLrcgw4GLx343t8PrzdLE5zot6NZMm5IPSQfYdghYqZq3INrbPWNz
/u2g/2U0KP1tCypolFMtMWgDHZ/+JnX/FvRmwLZJV68NzMSP/ZBIbEF2mi2V
SSptYPmVl2ixqAWJ29GZK2+1waz4/K3Zhhb0/rmocKFsG8i8+rqhPdqC7DuY
rK4+bIPDKceKnmy3IImsM1+2xVpB3p3hMhtDK3Ikv5pQXdkCzxytPXSEW1Go
+wXD0IJW+ON6OHvmTCsqpkp4efADBPWBkj616q1oVk5n9ttuC4w4/SwWMmhF
V5gvDkgMtUChr++79petiOcN83+aY40QXxuifPFjK9J/JqngHdkM51YlSyZ/
tKKgU1QuVZwt8NTnmWNRWivS+vOuoOJPMzgWNdRll7Wirmg4LTHXAOXrlGRR
ba1oONZN0CCqGT7e9lZTnm1F1f8tmNRbNsB94kurJsRtyJ1bMuCJYxOMc2f6
UrG3Iect5ZvcsU3wazC610e8DfVWcsfxuzcBz3K8zj/5NpSrrqr1tKAJmCye
nA7XbENKqquTYcRNUK5rfTbtcRsaexHjS/OqDgq00M0opzakonvc7JlWE0Ra
vHe559OGLkjqkoqeaITtXv5DXyPa0Mz7Sd4kzUb44H6YgyG7Db33Z7RMUGgE
ReUPqvNVbYhq9/DuX+FGCHwmsPZfdxsykrq3ROrQCEwlxbQnCW2ohcLR1nuy
Afi8bvFNkLYj1bY2mm+19eD54ojuXY52dC6D1TLhRz30W2W9rpRoRxEUU8ej
DOpB3O50XqpCO2rWXTmhVF8PJkvt/c232pH0e8t7/aL1cPKwDz+HWTuy3i0c
mNuqg/Gae6viTu2oYkzAZ8CkDsKpWXybfNrRRwXps+fs/0GHnuJlhsh2FMpY
WKgz8g8cLIfO4Kx2JPao6eJF0kp4b/LM40hVO5rzJ3IV26qFJLd1P6PudqQj
evOYWv4/+Eb6NWhsrh0JXhpKFdeshWuTNk0fiDvQVfoE1RSpWhirrs8hZ+9A
/q5anReP10Kt2Xp36ZEOdJTQH+j8rQZkz9b+hy50oB8N0Rs3ymtg59um0xfN
DqRMvkhFmK2GEtOGKhnjDkRpfU3zCUk1NPMo5l2x70AKXD+VbldXg9bf12Mh
Xh2orinplpdBNbipZNx68LMDcVJUvrDkqAJO2zPOjOkHfu5x4Vr+Knh4VrXC
taIDpZ88pOGTWQJ+FfES/9o7EFX4py/zbJWAFygcu6c6kIyWbJLtAdOdEJ1L
2u1AtsYX9yh+V4I7slfYYuxED+uuF05F/YUPyX9EYg51IhXLF6u/TSugzWS0
+8S5TuSnOsVuP/0X3nzo8FpS7UTXBb3t8qfLQVLk74c7DzqRWLXnXTvSv0Cw
5yMJeN6JONY2aVFJOWiHdc3yuHWijgitNyveZWC3RUkhGdCJ+KK8J560lcGb
VoExqYRO9Mbq/qmm2TLYjVd9lVHQibLiDv/LbSiF12J7HzvrOpG8Xf2MdnIp
2Fi/buYf6kRN6iKLJE6lwP07fXdprRM9f8isTa1eAgudxnw9lF3onchiVodP
CZwKYLjmz92FGhpva7yKKoGzxjfD1493oa2GtFBww8DSZjEXcqkLJZmJ/hRw
wXAoaDvG6mYX4hC8Ial6GAMh63tot1kXWvL6b3MovxjEh4Wkfjh0oVcrPFbW
kcVw8nPC5CWvLnSpOow1i6kYshx2dJq/d6HkL3IXn9QWQbcPr/KttC5UQxcn
VStTBG4Dg4bHSrpQ7gm//TyDQlgNeZi539qFzsYxrM7iAmAYa0n0Gu9CJCcm
LeKICuB6g63L0a0uFNV8/PxHlXwof1NC5UjbjT513isLdM2DgPcd/ROC3Sjs
dAEfkU4uXLGOy/GV6kaODT6KPJK5kFPS9Tn6SjfKXDJSU5DKgSgpcoYP2t3o
o6OMTIF1Nth8SP6RZ9GNNAuihW77Z4FVyoDD5qtuFHsyWujiiSx4TrboM+nX
jbh9eemZmTJB91HGwrWIbsRXdm6twi0Dhl+Y3jqf0Y0Oz6VZffmTDvqVcaJ6
5d3IgJe8opQtHb7L3zRN6exGt/0H/d+zp4G3Hz3f/clu5O56zdjGPhUOP3O3
DN7qRsnkBru0ScmQXMTN2MzYg4oj7zL3yiXBXb8vWeaHelCs7J2jwsd+QaRr
YvPR0z2oQd9Rf+5sIpRKIU2Rqz2IWaF379edeBh6FBH/6F4P+k3zQi/9cRxw
Nmbx4Cc9SKa186lUcQyIflYSff6qB721O2KUoR8NeXw0j7l8e9CVKyGX9H9G
whwJY/9ceA9SH28/tnY/Anb7juvtp/egebXP18/a/ASJyaePJ8t60ItygetD
at+hWlq1zK+1B/kJHOHfORYMS8zXiuonehBN0+7rKO5vcOieamr9Zg/a8vQU
bZD7Cs0fuo8J0fUinRWg+uHqBzdX4p+28PaivHOew886PUHX7XkxsVQvYohL
kTfhdoOYCNen5kq9KEg7g/59sRPYq3oa3bvdi67niik9ZbUGGUlujgrjXqT1
8FpfoKYucC11MfU796LC0MIaq/eGUJgrmFPp2YuKZIkHH921AfIaT+8nob2I
O/DaJfri19DGXvEy+Hcv2ja7mPLGKwnc+j0CLhX1In8nDtLWI57QMlsWxdDY
i/g8rxWneKbCvUKp59HDvajXpZRWoeMr5H26335o9YDfr81StH4Dlk4fE22y
PtS+cqZcSC0Y+jWVKWY4+pDZ2kw8L+V3yPeR4zlxsg8FldxSR0FhoGLySfy7
XB+inbxzYr80Aq4GKTZQXO9DSZukN+UZo8B17VLLtUd9yG0Z3/Z2j4bFhxok
5NZ9KL1DqM9yPgY8LhCX8r/rQ325SeIyc7GQrexy49W3PrTlIfQy92wCtMqH
Cf6M7UOsilD/yi8RvIROk8dl9aFe7QHmh12/gFsQ0VOV9aFBnQ6lt7m/IbLl
qeKVlj60fOJxyCpZMsi9A52M6T707ZSbEMftVJDNHIvi2e5Drs9OMe4+TQPi
H3TRLPT9qEskSt6LJR1mnygGV/H3oyuXivle/00Hx1kFQpBkP6K5uXHx2OMM
uPZv7puISj8qOJH3elI5E7JNffZmb/aj4XOnjylpZMFai699h1E/sqY3T9Vq
y4IjWiRrcnb96LDvCwkPp2zQFLr+Ise9H7Va/Rtfo8sBUyrR6S/f+tFfq5cO
18JzwPWDpbXn737UEXTSbFskD6xPLWis5vcjc22H5B9JeTAbfPF1ZlU/cmLj
2I+VzIfWuVbN5K7+g/vy9zL5knww8kuyJh7vRw6iWsqpYgVwnr6jKpF4AFmZ
FwS31xTCUfmEitOMAyh+83ajrH0R2HwO5S0WHEA/AgxS9Mj/wLCgUVyn1ACq
/9PdbRz0BwTcXnDFXR1AzwnDZJSyxTCafe3O7L0BpOwgTn/eGMDTQF6R0mQA
GX332TE5gaE81et13ssBlKowX9NtjqH4cO5/DR4DiDvs8U/HNAynnhZZCn8b
QPNxpCmXxzEEeXOcz4gdQIsZKlfqhEog+6HUgt2fAVTneDwyU7AUiuflZjOq
B5DQckM/nXopGMhQ3k/oHED7cSxF8LoUeuyOqdyZHECGdBZu91NKwfDPiVZ1
mkFU7d45lkVeDqV2LTEtDIPI63mhTY9wObxJezj/nHMQ3eAd5dfSK4fWuP6A
CuFBVGA2NfL4ezncWJN8cFVuEPWdG7c9SVYBDg1usfjSICpXMXR3Pl4Bu+Ml
tBVqg+j2Y0+9rccVoHf3LsXG40HUnCdtmDhbCZbLutFGFoOIYrzrXg11FfQo
ZF3gtRlE3AZkd0jPVEF69OPgU18G0T/eWLWq1moo+qGx99d/EF2PlHrpO1IN
218aTctCB9FSxP69dOoa0O0j89D9M4jCFebbFitrwY/piH9B2SBaJiMPeDBS
C3vuxKohk4PoWjnDSuZ/DXBbEnXtzA6ioXC6d91RDXDzmUsXZh1CqtZH5fWq
GyEsIaf1E8cQul44sxFf1wghnu/f06IhxCre9W+2uglmxPe/b5gPoSOUxG9R
RTNYWVEEFQcc+LU+h2WVtsD/AAlSKv0=
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-4.3265819700629224`, -7.394828084302827}, 
     PlotRange -> {{-4.251566750729396, 
      0.5494072866162705}, {-7.277472444618097, -0.0014227841649495816`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.3265819700629224`, -7.394828084302827}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.251566750729396, 
      0.5494072866162705}, {-7.277472444618097, -0.0014227841649495816`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[CapitalEta]\[Pi] \\((solved\\\\ here)\\) \
- \[CapitalEta]\[Pi] \\((Gev\\\\ )\\)\\), \\(\[CapitalEta]\[Pi] \
\\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736177744344792*^9},ExpressionUUID->"6a5c7185-247e-4de8-bf0e-\
b6ab0faf914d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
2pFWBj16xBBcHDAExs3qpz4gCvofzIgU6g==
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
2pFWBj16xBBcHDAExs3qpz4gCvofzIgU6g==
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=100\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7361777447777233`*^9},ExpressionUUID->"5c5c20a0-eea0-408b-9ceb-\
d42ddf1450b4"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"Eq1II", "=", " ", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["cs", "2"], 
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "-", 
        RowBox[{
         SuperscriptBox["H", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"H", "[", "\[Tau]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"w", " ", 
        RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}], ")"}]}], " ", "+", 
     RowBox[{
      SuperscriptBox["\[Zeta]", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      SuperscriptBox["cs", "2"], " ", 
      SuperscriptBox["kwave", "2"], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}]}]}], ";", 
   RowBox[{"Eq2II", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"piC", "'"}], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      RowBox[{"H", "[", "\[Tau]", "]"}], 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", " ", 
     RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}]}], ";"}]],
  CellGroupingRules->{"GroupTogetherGrouping", 10001.},
  CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
    3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
    3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
    3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
    3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
    3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
    3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
    3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
    3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
    3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
    3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
    3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
    3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
    3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
    3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
    3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
    3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
    3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
    3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
    3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
    3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
    3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
    3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
    3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
    3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
    3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
    3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
    3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
    3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
    3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
    3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
    3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
    3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
    3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
    3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
    3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
    3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
    3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
    3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
    3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
    3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
    3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
    3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
    3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
    3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
    3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
    3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
    3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
    3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
    3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
    3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
    3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
    3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
    3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
    3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
    3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
    3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
    3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
    3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
    3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
    3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
    3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
    3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
    3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
    3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
    3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
    3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
    3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
    3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
    3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
    3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
    3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
    3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
    3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
    3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
    3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
    3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
    3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
    3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
    3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
    3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
    3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
    3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
    3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
    3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
    3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
    3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
    3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
    3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
    3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
    3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
    3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
    3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
    3.7352971834201117`*^9, 3.7352972215902157`*^9}, {3.73598066087808*^9, 
    3.735980683558736*^9}, {3.735982701409083*^9, 3.735982722979671*^9}, {
    3.7359898364984417`*^9, 3.735989860821068*^9}, {3.7359942581647882`*^9, 
    3.735994270382619*^9}, 3.735996823468211*^9, {3.735997134764554*^9, 
    3.735997136615862*^9}},ExpressionUUID->
  "8f2a9a5f-cc8a-498d-a6fc-095d0a8b3eb2"],
 "\ntiling factor = 16  , nKe_numsteps=10  Kessence source gravity= 0  , \
initial redshift    = 100.0, boxsize  = 400.0   , Ngrid = 64 , Courant factor \
 = 48.0\ntime step limit     = 0.04   "
}], "Text",
 CellChangeTimes->{{3.735981823189452*^9, 3.7359819188759108`*^9}, 
   3.735989740965366*^9, {3.735990387929201*^9, 3.73599038804593*^9}, {
   3.7359906368439713`*^9, 3.735990636912073*^9}, 3.73599444422113*^9, {
   3.735996436208637*^9, 3.73599643630416*^9}, 3.7359967540383253`*^9, {
   3.735996929849309*^9, 3.735996932769126*^9}, {3.7359971662645693`*^9, 
   3.7359971677409067`*^9}, {3.7360006963892603`*^9, 3.736000696808218*^9}, {
   3.7361650526073217`*^9, 3.736165068308145*^9}, {3.736165747309207*^9, 
   3.736165747594521*^9}, {3.73616615885612*^9, 3.736166162369762*^9}, {
   3.736169582406474*^9, 3.7361695869669228`*^9}, {3.73617725494965*^9, 
   3.7361772569523*^9}, {3.736177312341321*^9, 3.736177312605173*^9}, {
   3.736180146572987*^9, 3.736180146831354*^9}, 
   3.736180221617972*^9},ExpressionUUID->"bc3224e8-ac1d-4ad2-b759-\
d57819c19e27"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
XdvsH3i0Q39CovgnbTq+qZORDHZqh80NQmN9dDoqiSsXRFm3g7Fn6KFHhnQ8
N+Jl8MKoHQSHjGa3XaJja+OCnaFuO5zvKtpeeIyOWYEWeWc12qFqz98zGip0
/HePZ0+kSjuU7PLOU9An5lcvpu8h0w6MIzJ5BXqEPy+9eIWp7WDVN/i6/BRR
H7zQHLalHTj2rVP3PUpHrmXrkQvcBN9stqIAezrKMtlri621wU/7HQc0CP6V
z7m8i/vb4LlN1pKBFbH/hz9/56xogz8uypJPLAi+e7ru8XxtA3Ud18U/Z+kY
bVA1UxbVBtte+zfeN6HjenOFZfRugxEmSRY/UzperHrLQnNug61e0ZI0Qp9y
c3jQnFEbOFkOjVneJOaf0dzOd6wNPpde4lE1p+NOzzoNZdk2WLX6KvfLjo6/
usc1+UTaIPWaobHQcTqmC/8o0WFug4xTOc95nehY0pd8NXK0FWQOPTSLvUDH
73c/W2bWtsLU9SJjxnU6OottSl741QpM6bdMtjwj+J0QZe1OIeoV9z5adqSj
jW+GReurVpALzN719jbht2WB/JBbK3zb+qyL4xpxfzRjnN7btMKv6Z/rYm/R
kd896MLmk62wPZm8sdmZjgNtZ00tFVoht+m/9V336PjfZbeTQpKtsCdGVGid
Ox2HTws+Ul7fCpLdrIcNCX3+ATYVf2dbYP2eDgMuwn/7XhOf1y0t0N5uG5jt
S0f99PjhzX9a4HcepUr6IXFf1jS/TX1ugaWG9INabnQc3ah6ghzdAj9dXfbJ
+BPzd7KZnvZpAYrLYSPhO3Rstv6w99nNFuCTLnaKeknsY8mB3Z4mLfCPMvTn
yw06ns1/e+Lm4Rao2rw3SMebjmnBBfvf7mqB96+0x2pD6Pj6HeVcweYWYLob
u26KqJdPC4lfZWkh/n/UrVsj5vXhq7tF6HAzkI6VFOSH0dF68o5fe10z7F8k
l9Q9JuLNnV2Buc2gLVZ+euEpHV/NRMs2pzZD+V9DajrRz2WV6uUV1Axbn7j/
nnlFx31lUodU3ZuBwnX589EndDxSbFf862ozDGoshXp8IuL1j/ll9JqBr7Mv
zOr/ek6ScsQONMOxoUc/RSLoGMXKepJ3WzMkNZv4ZiXSUa/2cafslmZQ2b1N
Xy+ceI+MD08orTSBUuPZBx8/0NGu4h9JZrgJDus3d799S8yzhPPfQnkT8Of/
+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
v/8S9yHH5Mz2C5t+Q2niQ8uthP7/AeDe0kc=
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
krRrxcdaGPg/+MvKVg==
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
jKo3rFr/4fmqb47jP9fhpMy+A5xqRFTCEe6VH7sOl8uF7hv9xv6pXrrR/W4d
cpWOsZp7ENGq7vpDNY91UKYPGjI+jvltNtSmtV8HHgmil3AmPl+6k0n3+jr4
9q23d/sRUfWJcSSmug5mLkfPHgYiUsq8W1xweh2+CM9+szhDRDTAaGB7Yh2q
D3XFuOL8ati//DjOtQ70V0d2mjRwvWt5U0ao18GAfeymhRb2WyyX7/DiGjT1
P2x97kJEb+x75Agda5A14yfUj/UoHuvuulG9Bm7qLdQqurj/BJU0W8EahC8x
3eu6SkTG3i/U3yauQWhDa82mOhGlc7TdOfZxDayzJxr2vSci4Z4PL/PfrEFU
HV8Z8wUiOvOBUUzGdQ2mvkum/ZQnIubd3c9lb64Bj3+FwkoSEYXrsXqv6K3B
Q5srTgduEZFe62DY7nNrYECbH3UWxz8jc9jul/QalGS5eP2WJaJnP2ZEpFgw
PrtvYM+J/aqXvL+Kag2unRENb75HRIg84M84twoxVKEXrykREWl86UdQ9yrw
7OnwnrxIRCaMIrOaDasgXLq99hSPrzaU1YzkrQKhWusNNdZX7GqS+IHUVRBs
sCmUwuOQA4XepR9W4eZRNQ8C5hM+OzLtPF2FRroWB3fcXzYds16IP1yFr9Q5
qUmaRBSzkPElynQVan6yGv0fv9SlrKfeOqvQ7bmn+qo2EUVWGw37yK1Ca91N
I2+sR3h4aNrIyVXotwwYZTcnIga2ePfvjKsweuXMqArm+/3bPdz/tlbgp9WY
z1thIpK/8D1fa3YFogI16DREsJ8qEybf9qxAlvQSn9oNItrTceJFRNMKFAbv
aw4yIqKe5QtNtQUr4GR3y90C15dxy+rgqYwV+EuTEemoTETXlx6ZPo5dAfdS
UuY7rFfi7aoA7fcrsHzp3fciHuznMJlz7/xWYORF2+Ch50TU8CWK4ZnLCrwP
PxMjz0FEnmo3fjXeWoFJQY2YUazvrNLnL+pXVsBl2uxNkzcR8QddZUpUW4GD
fBbXmHSI6LzRIPG2/AoMMq6XvsH++pDJNc4gtALPfmmrbCoQkdxZ3TfXuVeg
a+dIXoUkEZVzvachM63AbkeOt0WbBGRcqbvRuLkMrunEVx+wH7QH7eVHF5bB
bNqKTgf7R11+Zlm4fxmWLCvfZWYTEe8Xbo+jjcvw1fPJ9VmML8A79GPs32UQ
P7Y4LH+eiPrc/0x4ZS5DzMf57/04X3sDs6P9qcswleIYp00golrRiVJK8DKU
xvWH257A9+N9j0oIWIaICvkPnexEVJrvnND5ZBmyD5oR1k8SEdcLbuLXu8sQ
y/7r7yM8vn38qW2o8TI451OyFKsJ6HYx12/jS8vg9uCiPKMEETXVGmzkqS4D
q8DCwSg+7Odbt+QyxZeB/dx0f+AiAdF9MbX+cnwZJAdCmfcq4n6z/V4q6PAy
fBsfX0o0ICEx7uSG6X3LECZrPXBChYiIjtSa/zaXYOdb9x4x7Febos+Ti7NL
sOR1Re7pJSLa9ejHNM/YEkxPel09hPHfyViRSG1agktC/Jp5qrhf1CrO1ZQu
wdQwlXDuFgG94S2dRjlLYHJ57cBPjM/t1qzv5PclODDrem2aCdfPEz7l2x+X
YCLtTMzfR7jf0jwotgpcAq2E68O9x4jotctt5VjvJfDJPhbmsU1AomqvdDhd
l8D9c02xM5mI5nlKerIdlsAtet30uigRSfNy/1wywfM3jxf40BKRX5ifhunF
JeDnnRrr2U1ECusWzJXySzDcrTPhOkBA2keyr0VJL4G27sWCqKO4f2QRG40F
l+D1OfVSq34Cqh/ecdDkXIKYHdHCOszPaInY3jLmJVDqyRrnOURELBwjPYzU
S1DkePbPBNafOOPCoDCzCP1hu+htFwjoWl1er/PwIsjJyV3tniWgO7dWB9+3
L4Jd9xPZYrx/9HU7lWPNIsS+nD10FPszWIOzhFC8CPe5zdA6K34fNNFax/5c
BKuhHEZrOSJyILfRxSctgmdNh5vRKgHn4/OzK3wRjDglV//hfvYMMs+GBS5C
doWi3+FxAmJ11u/Z92QR9sednTlJRUS6ZMagcy6LUE3FrVmzl4guZe2Idlks
goV86EVRfB9snakqv226CNeO3LX6ge+XoM8Z0UEXF+HTp7S97/B95Xs3q8b0
3CKk6i7XNOwQ0F7xSTlJ8iJ8lpOYtNhPRDefPVFdO7kIKxL73zEzE5FyHNs3
Ku5FOHtdwvwRDa5/zj1fT7MvgtD1O9MBgwQkWS3Ap0q/CIp7bRM6JwmI6V48
dfL6AoTLN7U+mCMgs3mZhPiJBWDyWqkYEMDvrw5Gjg99C1CYM++dhfk6sjS/
f7ZlAbwjJYZ2DhMRo50Kzb6KBUgVpR1c20NETL1cvfdyF+BN4HT+P9zfslnK
E2V/LoClQ2tDET6PMbHLPTVpAfZnz4rcYySiDf4ar3sRC9Bo4aMxi/1hqNqY
e+PlAkjOXzerxvVUl23ik+yzALrDzsdfYf+nEfaqvHBdAJN2ei4zPI5xCzu9
134B/PKuVhQfIaKuFhRhYrYAwqGxjwNO4X5lUhg8brAAHh0OjtOYvwi+vP5P
agtgdnOQ5zYe8ybG3/WUX4CNJjOJm1g/0+om19KTC3DFWju3DNePROLepwcJ
C8ARwX1LDfsnvD7mjRoHPs/+DNt4H+bjZEeBDMsC5PrUXdvCejcxGux8pV6A
AjcL1y6Mx+7nF9vF1Xl4o7A7gMhGRD/+spUpjM9DRdPhTpN1Ahr0YfLvGZyH
5l0Z+gu4fkPPrQ8l1c0DwZPy9/AQAYkz3mjLKZ2HHi5TyZkxAjq7/EnI7c88
7B0q4VCcIaD7fX3yC9/nIfEAlxULrj9KhVHstUS8vzl4Zwrzl9HmYTkZOQ/W
hy58scPzOpOnr9AHzYNorQ13XA8B3YAaH3rveahVpz5ehfPpIrx+c/nhPAgw
iTleXSEgmu2zx4wd5iFm+upWED4v/uNhCrvNPKiYMla/PIj9d7pyntpkHhQ8
Y/vUewnoionan65L81CXJ9cji+vP9OitgDDlefDd/cEkDus7ms5lfvb0PEzF
FgaO4PXDTuEHrovNg0uIufG7dgKaXRQ+vEdgHnJCqo8XLGM/5n9WMeGcB6u5
mqIJzO913XmKKuM8SFg+5gwaJiD7ePWUcbp5yDWmT9m/REAvx9Qi/FfnoKXQ
Vvo25k+mZVTi/vwcFFiPnn7xi4BeicPyp745MIyJT+/B9XBYcIRU1DoHGbKe
5y+QcP8zKovaVzsHx9e4+u2TCShJZ+33FTQHu68lG70eJaCBrWGJp7/nYL+5
bYl0BQFNW3DwKaTMASHz2zQVxtNmcXg9JmEObq93nN4YISDhxNXKd6Fz4HCf
UtjXhPWihPhvv54Dhfs7lEPYD+WBVsG6T+dgIlt4/us+IrqvPKGw6ToH7J/1
JiSaCajQ74lboMMcDJYrZAy3ElDNHlb2O5ZzUEQJs+bDfGbdrKL6enUO+I80
+w/8wfXN9FgyT3cOzI1ooQDrt7WuzBZybg4CMnfqSqYI6G8A1SN5xTlYi/rv
KgHHZ2z8sD9TfA4Ob6Ll6BIC8mI788TzxBx8F1oTu4H1CN4sUPrFNQdd3yNy
x/B8yWyluigr5tc457vPbwJCc/+NvWKYgxTB9atLeL2h9FXq39uzoBpiedwB
+xXlOTD/WZmFo9nsb+sxXukI1Q8F47P4f5FZ0amSgPLo/Ifp+mfB85FMXjrm
M8BsV2ZAyywcaS8yZMDrSXnKm8Nls/DVXauovI2AdAYjpHcXzsIv9pHsmioC
mlzz+KqVPQuWjBeCrBoI6PeFzYPKqbNw91aVjz3mI72lIjs9bhaOBx6RDsZ+
N6r/p28RMQuhO446Jbifi4mGaex6PwvvEgzCgrE/gsd+SJ/ym4WPrdr0a9g/
zje54/c9mQXjo683NxoJqD/vmUzL/VnYuVD7WbyGgN5tvVQvuD0L+3oZBh2x
n+cumPA9MJ8F3YI4j10YnybrHyeJK7OQXpViyILfExxqv74yac+CWENxa98a
5if+lFiu6iyEF+gPDtQTELvv3d412Vn4sOF9uYyaiLbNUvjFxWahQuRYQ3IO
AZ3nVbDfEpiF9y/fM8ng88dtxhdPcs0CP0djWwR+3w1WVqZd5JiFtCdfHgbj
eha5/Lb0AeMshBQ5v/xQRkDticUPPu7MwMHg3wFX/8/3Hz3zf4szkGunFheG
/TXkYzNQ0DEDDTp9YbQY/9lXvMi/cgbWKNy942kEpEE/pfIvbwYoW7q+ssU4
3kC50scvM/DFNU/1F8b/6b7Ny+agGZDzrj7H+BPXjz2r+w2vGWhhjU8oBfwe
bKqVdbGdgWOZN8y/lhNQg5rC1M/rM+A8NBjrg/HS3G63vKk5A/rj/RIlWE8+
u98xx0/NwL+H5/9G4/O1p9V2WgkzEFb8kcEf+7Hw6uGLH1hnoJ5hX+nFAgI6
uurxX/f6NEQ0LrZH/v/9JkZ2qZqchiilI68T8PlnV5x9HrdOg0hB5olbPwgo
dkQzZRlNw69LaglR/+czTpFHMGsa3h/gPKyO/e2cFrTKGT8NgUPX+V9hPi69
BKm6gGkoMmWTr8X4Py1Ljud6TkOo7kmffrzfVsnAWd5uGjiXtIS8sb+HHozY
yxhOg7K119LzXFyPakq5rhrT0IJMOWLq8H1ed/jTnPQ05BVcpCb/xe+f9fjp
YN5pCOBM9X6D4yf42rNqHJyGI25RDQTs505DpusLNNMQPfjHNqubgEzkj+od
H5uCjgGNEpkEAkqulXu53TMF3fmMItPpBDSSZj/1q3IKrGOaVR7g+vww1/Rq
LHMKTFxU/xhivjiTch0qv07BbW/rgiocn/bYXdLD0Cn4cHGyPhnzZ1Hi/4PR
ewoiLnP8PYn3L4Uk/ux0wedZCJ4rw340zVdhXrGcAqdJ+fuOeL22td1/xbpT
IDw53kuIJKBKCbHn/WpTYOepdKK9COPTeiTiJjEFflobyWZ5BKSSpUwTw4XH
W+as5jh/Y0qymQfDFLhPvK8qxv1Jr2LWNXhrEv5waN0v/kdAdnJMYoSxSfBz
sAr/jfWcd6d4W7VMgozWi+E/77AeYwE++mWTsDH8Np8T+1tTbmG8K30SvOOa
fUqx//cq2wXmxE1ChumSozX2u1iStrh86CQ8pvnLkIvxN72uNDvydBJsrWk5
3iECeuBQYKLkMAkvOC3kCdjPwctnXvKYTMImI5coC+ZLp5hLIPLSJKjOtTlf
xnzvFvtTGqU8CV71jsxPWgiIR9JTiV10EsJUmBPlsF+LV34K8/NPQrDHjUxF
7A+qy4Znz7BOgvufpcEkvD8nVkpOaW0CfJV4rcswXxL2DTZd4xOwr/ixy6UU
Asodawp63TkBmmHfDa5j/wrm3CzIKp+Ak+rU3hxJOH/5TsZ9uROQ8FTRbQH3
s5ztmYSTqRMgGiPBTsL186L0nI3ahwlo87pr6Ij9Q9GMHeH3n4B/px9N0X/D
71ce/h1Hlwl45WY9fBvz+5Vdk/3y7QkIWIrzF8bnMxxKekq8MgHit7hzdb/i
+/poGNeqygREv1+b5ownoDg/o9lKyQmopww9u4T5JGctXUklTMD4zTH5QFw/
p09ds+Q4OAGJz9Sl6HD/CCLZnaSlmYATVfciwmIJ6LPvdwe66XGwDKN3Ncf6
89/mOeY7MA4lCotUZ7F+AYJZ9uGN4/D9hY8x63tcD51TessF4xD9MjTlJPaj
E+/uwUtp45AymG3yKxP7+5zy4EjCOJzM8PKpDcP1zyt7//K7ceB0+bk6iv2n
qq++Zew5DuLtIapKMQS0mlpg4PDfOLwxt6r6gfP9TLWCKR4H3UiG6CCsz6eg
f7yfDMfhy1SWbDaun98JhT4jSuOgf+jK2adYjyzli9o5EuPAetVgqRDjvdNc
a/eaNA62RgutkdH4/WB16Xf7wXFIi1Fdlsd6hB1I2BVFOw7NO7T7z2bheurf
RcibG4OW0vFWEt7vvMv1UtrwGCif3glfwXhjn7Drq7SNwbDobsp9nG9MvaUO
pXgMwuhkwk1xv5J/OCFsmD0GWmyriv24H59x0Vl2TBmDcj7aMia8Hm7PZZ+O
GIMxJg6HPd8JiO1wWEL7izEYWClxpML9S4d9jT3WbQzyTRyD9fF8eL7LC1qb
Mbh/P/xvFPa7bwPflIHZGPDR7OroxP71dT1BM3d+DBaDstbuYP+0JnIM2yqM
Ad3rsSMkXC9f1WgS95wcgyin4bAzGQR0L5R+roRvDJ5dyPz1BI+11FuGDrON
wWMFw5RjH/H7QP7HceqdUcjOkmdqwu+vI2KF/x5OjkIo2IlGYn5by2KfdnaO
QnprBY10OAE1Vt7+cbRpFJTV3nuY5eP3/Sm6/1pLRmGOWf/cPaxX4s3fUy9+
jUJ+xOnXtVjfhCbwvxw7ClRd1HuW8LjowFf/kbejIOzmzNuJ6+cflcMjJv9R
+FjBQCv3HMcfP7ru6Y7HDy7tyiwlIA+ndnsPm1GQjdO8vYL9XuVkwK9yZRTM
i3TJzthvch/Xjk2dG4U1oRCL8hD8P35jV8r1M6OgSv2vSwj7j+PMBI2axCiI
en2qlsXnjcz9S73JNQqGOYR2xmwCer4xqje7bxQMaCnBYZjvjSK9FrrtETCX
tGN0wv39Mc35qB9LI3BmYH4tHe8vYpI6WT46AuKXRW7exfUj/YGZmq1xBAi1
+dPRUQRk7XEvwLh4BB4+8GPujSMg/aMscsoZI6A8p/9kDvOf+CVJ/G3iCByR
XKFdxnxSdHySvSJHQJW1XjwP+1/kP4LA+9cjkDozMfcL61m+fCxhzmMEblWp
JnzBeA/6Lutl3R0BvXiDFReszyOD09qPro/ARjXQ7WC85ZRuKfOLI7Ao8XBw
Avvpyao2lb/KCJwi7tr1EfM1IBovelBmBK703Y/99hm/h7SNp7gER2C2pj5i
FeuXtJxMGGPH+w/zXqfgelmoH9la3j0CzC8U+ieYycjd7Ka588Yw0MZJiZoc
JiProjlqpplhuKxX+0mMQEbHouVTrXqHQYjGfK6Hk4wigl2YOOuHwdbm2dLT
I3j91cD0+oJheMCvuPcQ3v9E4mtmfvowvI2ft6k8REbkUc1S3ZhhKFnrcmWj
JyPKh18GXz8Og2R7C3fwQTJyS+8wJL8ehpm7+WyFB8jotXf5s/OPMJ6rP6O6
Wcno+qClPtlhGOSG1RkERcmofznvfNr1YVglq7qV7MfnPf6kcV53GLpqvFOM
BchoPFihV+/MMPCMrX3UYiSjK0objAuyw1CpZzc8wUBGhlV3m/4IDcOJfcEH
dI+T0feh5DtNR4fhu2KupiEPGSkdPuf4lGkYrGbf9p3iJqNDL7a3+baGYPOr
wfxTQTLK8Itu55gdApejKXG/MD/S3GNGwb1DsDfrdfxZHK9GYE/M7pYh6A0W
3puL402EEz+blA7BFdJzrqM43tPIM3XlOUPA7u2pZozHn+iepAymDEFulH+4
MV6/a+yruGTkEJQaOcuyk8iI6ZDrvlNvhuC/4dcn/3/eFY/Hrz49GYKzQXvK
znGQ0XJ/83d1lyFQsbi4dQfzmSn0vKXUZgj49WSK67Bew7Nl7ilXhyDD6bz4
XS4yytkap9LUHQLZcS5vVRyfRn36Ct/ZIUjSd9EcPEZGFsVCXy5KDcEhnsxD
sRhPu39xhAlxCE6zcuZtYv73XKSLt2cfgr+Bzd4yOL7H9JTQ8d1D4JvHa0qN
+dcUkSQ/3hqE4JSDVn4Y38GYgk3FqUFozKDroz6N+dvkXMnsH4RWJ8XyEZz/
46b9ey1aBuGWNe87a7yfa4K7LqN4EObfzKlN4HxWRfS/yecOgu8fQ6IiHxnZ
tCbwPEweBKrEaztXTmC/SBIGVT4OgtFJqYfH5MiItlBX2uPNIARKmRgly5DR
8x+Plvm8B6G5rLxjVYqMzPTNLZRcBqH4YwmDJ/Zr4eSt7EXbQVCvYC2vJJJR
14nbl5muDQL4dcerYH6iiFOPYy4MAhp/ly94ioz8+zh3klQGQU7KOvs9Pxm9
7O62zTg9CH9vXtmIECEjP8ffiewnBuGbyR3XUoyPlUHyxN0jg8Ct2CKuj+d5
kq93wL5BGFqxH11UxPWwIvWCmnoQHu221zp1koxk/gU8Pz4/AENKxUfLcfxR
urzzHwcGoGqjS1ZVnoy29EXN1NsG4GF6clkoHjuiKtvw6gHYUzZ/lvEMGSVx
sC1H5Q9A/Nvxkcc6ZGSgkeZL+DkAd826TzFivlnzLu69Fj8AW7Xbx2jIZPQo
rd9k8sMAjDQ079/G+R1l394682oAFJr2ip/AfLBNG1xQ9B4A0uhEaRtev84t
4XDYeQC4lDUO3cLrGZ0LU2etBmDxxKGQDsx/34v0P9JXBsCzOe1Suyr2R+ET
9FFrALodW7tfS2N808UqpxUHgJXsYsSG/ZREY00sPDUAnFcLqX5JkJFx/D2f
n4QB+GOVGpCO/bKaprtkxzEA436Dt2vwfj5+s6A+hgG4+R/XSQPMV6J/TX8P
zQDsUjb/La1ARtPfbXR2LfXD2S71GS517NexsdcVI/2gsg5B2ZhvL7X5ibKW
flAW6Lkijee3uex8W6v64dRk8Y6IGhk5fNLQSC3A80Y6PvIXyShSPZAokdkP
KbHxxXnYP4kUtziNlH4QYx5xatPH+WYRvU9F9oPsJQunHcyH88OVULe3/ZDm
x2RQhedjh546Kvj2QzKv9VUvTTL6+tzqmd6Dftj3QCzLG+PJP27o8Ni2H17q
O20GaZPRLULFxafX+yHwHyjcxHzHvszufK7XDxmZuvtIGB+DjLLaCfV+sDiX
NSOH18ePFu9alumHwSWXCw9xPl3Bp1a5RPth6EmMByfWPzrlhFkwbz+4JKvN
8pji9ea7R83Z+uGP4c0FEbw+endmg/jufjgf9MXCwgDP13Sz0W/1wYzlO9Io
3n/+7JRk0lQfkHirn/Fcxv58KkJSG+iDjlT3eC0tXD+93xbUm/tAvsAp670S
5q/unutaRR+0Mq84PcD5WwrtmnT70wd2pwce98uSkUbCpc8SP/vAcA/ht7k1
7t8ZZyyCYvvAoNY/eRnzLcP4RfRjeB/sMwp5vH6DjH6NM+2tetUH/60lzf/G
4xg25r5t7z7QX6utPYTxyd2hyKa79IGaviQX/XkykvrLf+q5bR/cVzSuGjTH
fj/wlKfKtA8USs7tenaNjLTodL4s6vXBj4LqtmN4bGfw7lufWh+g87IHhPH6
bT/BoQNyfVCrXpX2yISMBJoqxzeE+2Ce2eCMFR5funspTJ2vDxw55FcnjMjo
onDG4uWDfVCjrfVLGM/vKMZ6xDH2QYb8f8xhOF4+jarjrZ1eYP1eyaCL58P1
c0KSFnrBI1ZAZwvvDzurL1U51At3q9cvrhnj/mLyxzS5oxfsLONar2H+eiTH
z3RW9QLJ73W2xk0yomv5IRpZ2AtFboExVZZkBL1GtKTfvaA99O3jNObHT+o/
Wd+UXsAP23/Wt8mICKq7yqN7wfNl3+0IfP6h2VPMge97ISIJqdNifKMMl+xF
X/SCdOefPU138P0lRLLzfNILlya5VoRvkVFoiwghxLkXjr69c94E7z/NRymO
tO4F5lTiVo0DGRlN+RoEmvTCC+3fwsquZNTdvmZ7WRfPX7729LQZvm+CbhYa
qvWCOHUc16wuGTW7Mwl/kusFGlLaaDbWX671mP4TkV5IELgwzmaF+Xnry3KE
txeYhKKttnA+zSFrnREHe6GG/19fO/Ynw6b1lDFjL7AFmDsUPCIjMSo7rWM7
PUAUnBmMvE5GdW8YnpaN9sDj5iWdQBfs77O/svfW9kBT3j+h9P8wXuEBd6bM
HqhWmhqdwflHGdQvVUX2QGXOhMg7jGePhdQmetoDVPapfAE2ZHStPppGxqUH
hugTpxwxn5TOD8ErJj2QvVG9y80d6/+zs5f1XA/8nFGy9MbzJ7xb1ChiPXDm
74j1Mj7v7+CsOuvRHij68WUtHvv1x5HcCh3qHmC4cM5TDfNVMfL1zqfpbijS
+iMmgP2Y/eCXZXpTN7B2fy9/7URGLseYv6797QaRJzE8/m8xPm1O2sGUbrDX
eS0SiOPbPP95s/tdNyTEFHBx38d8WxZLTDzuBqeFUydD7HD9qH92jrPpBrVZ
0QsqzrifewQbHzjfDVR/rQ+oOJLRWI+hmaVUN5DFmwY8H5LRb/PH5w8TuqHy
cUhQ7WMymrzI4UPZ0w1P44vsBq+S0avXNrXVy13A6sJzqBL7z27Y1P99Vxfo
u79tk3tGRvo/4icPlHeBZrvtlR2sz6Ud9ayFX12QyDpDUHbD/Xm/gjZ3VBcY
BipIDOD1cs42i4v+XSCw01rFjfF2WieLBjh1gYrHe+YLz7EfK+RPept2gZll
J6kJ+9+wKFrb6WwXWNS/tWfDeNNCiiWjhbrgv4M20SqvyOh9LI9R8YEuSL6/
T3oM+0ciLSx+m6YLztNy3tLAeidnetwMn+wEw1MGfu4v8ft13u1lb0snFPTc
ymfC+KwP9A8EFXTC0jFGG14c/91SlFhnaid8fauWf/QeGblu8/r6BnfCDVLV
1Q0vMjpVRTyj4NEJ9NG0M8HYb8pltmV/73RCtY3qhOYHPN7zjE1ErxPOuce6
R2A+as5z5R+T7wSzA83igjj/SFra8yykTrDKOxL6Fuur1/SsX+xgJxj5UqUn
+uB+dPXs3OmtDvhPTVelIIiMbGubuUQmO2DjGLckyQ/rWbG3ea2mA36cGpCN
9MXvOa/xwce5HXCh+sNKcTR+Ly7VChATO6DIWMCA3QO/f9TGNbtedUBPz6Xy
wlh8X522ldr7pAPKqwzFHUKwvnlMRinWHTBDfnxtFvNfmH+oy0G/A3zNhbgr
wsmoIffsHlaFDthv8fzYXAQZUXfYTvw43gE+ZQz2lz+RkVOyzPMR5g6g26fZ
H4bjtaQWNK6stYOEic3MbbyedTd3/sHBdpjpGWcseYL9zpV3LaKqHZ61PWYq
DiUjzv4OEc4/7RDUoKCab4vfB0tevvQJ7cAiM/gq1xv77UVBYVJIO0zUtQgt
4HiFLe+kgzzb4TqLtlE75meBFUzOWLRD5G0dU58A7BfvbYlUvXboOHKhWBmP
64TGP3qfbQfBe9xMirlkpCguyEx1oh3CtVfEbmC+fEracybZ2qGGLzbOLYOM
yuaKqzt32gD0yDLHkslIRNZ0YmSiDcw5D30k4fpPIYx0FDa3QQ1LrFQkxufj
4V7o+rcNjvN87/HDfO1xCpQbSGqDK297Dnp6ktGK1YcHoWFtwMDSQreE+Upm
15cJ92kDPv0Hio8xX8Td/9RS7rTBUcnoX4Xx+D4znTHmMm4DAn+X8EIa7jeE
HNNrKm3Q/vshfT+O7/nkqPlh8TbwD7A7dgf74Xhq/Ww6Rxs8FvLIH8rB/1e+
qkoX6Nvg/nHjpUeRuB9d/xH8Y74VLuauxlVk4/85JvZ77D2t4Ljl6aaB/e4S
crqXqrwVIqmF40IeYL+49r6/mNYKR8tpLMjYX3n7etyYYlohemGI7wzmx/Lm
G0v+160Qde2KK+833E+cVEXI91uhIrVuixvjEw5d/Rxt3gq6Hu2mVxPx/1Jx
4u5onVao7w2+xPSOjP4VveZ1lWuFMr1hyuov7K+awwUK/K3gzqbSTFVHRi84
PiS8ZG+Fnaq7oSpYr7X35zSEdlqA5jljTVkmGSlcPMMtOdoCrwS09c5j/YY5
bYwnGlpgeprx1TT205TRZcGo/BbIXP4yTYvzjWI6+DkquQXMAnNi7mTh+7WY
+rxwBI7HcvLgFOabmcAhHv+sBbxvXZv/ivUR1e6cCXJugX8KvfpvMX/0v+5u
D15tAbGpB58yS7D/ZOfjX6u1wNAiG538d8yP2aEZPdkWmD89xuD1Gr83OZlj
ivlbYLFT0H4E66EexOHqtr8FOIPbpDY+43jzbH9ilprhZMrHcZZSMipICKMZ
H2qG9xvpX56V4/+hy/+9oa5tBsHrOS31eH3+BL9lT3YzNNtVcRum4/rqC3/r
Et8MFQwBOgn/cD80OniQ830zuF9wafZ7iv83tlnffvBuhkX/QcJEDF5/9tC4
hlMz2E0r2ZoV4nqfY8t5YdIM/l/1pt60khGpal6aXq0ZukbC/e/GkVFq8W4/
PYlmsMq2STz0B7/H755J5ORrhvq486f/qyQjQl6czFfGZjh0MfSMWgoZ1X5m
YZSabQLCvYmZw7soKFjh03T8YBPQbX4S48Z4x/jCeDmqmiC2+Zb2DyAj9Hps
MCunCbwjlL3PN+B+MFvDt5LYBBv04qJX2jG/4pY9f942wW3z8kLiD9zf7vqN
UbybID78EqG9GvMn68LnZt0E00tc71Ix3hZGxvf2pk3AU+PplLqK75vO9vsJ
5/B8yuGCXKxXHdWJBy3iTZAnnRy5gM+TipF85kRqghnRg3bZBWRkUkj0zNnX
BJBQFb6wREb3pE76a6w2Qos8y2wp5qtzn9NhlpFGqPPizNPgpSCdDjbJsMZG
MA7ZoDk0iP93WNZUpaERhM1vze1gPjhXrG3LkxqhcDjNk36SjPrNeLaOhTSC
gt3Qh358fp392NFHfo3A+6rOi5mdgnKifnho/dcI76KFB/afoiDzW9k9/Ncb
4aU/f9hzYQoS67kQFH6+ETienTlhjP3kfNGIrkG+EVaP9UUHD5PRwyDV09yC
jTD5V+HHN2YKKhfLaDpxsBHmDqaJfNzC77MjxsvBtI1g6ZR8NxTzrzXueHhg
sgE0O2JOuFBTUN37xrIv7Q3QNXhx+QOu55NFjwNzShpArv9mjPUKGbWLf15d
z2gAB3TvbiQrBc1MkpRuxDTA5ItTRv/YKEigsqAb/BtgxPINZ/4+ChrjtFS3
cW+AhCgz3wV+Cvpm+vM9l3UDdE+8tVrG+jlwPHixx7QB1hQk5yXWyCjhvOr3
XUoNUCEq7Ky8SEZDc+dFfcUawD3nR/YtzC+nfutGFl8DbOd/K6jG/DMo7p+8
TtcAlqgnuOQQBV1rzG1jn68Hzm1/N3qM12AyKrhxoB5SlM59IR2moKAJqunt
hnqYVnR/ZkVLQZ9nUo/5FNTDkUfUl6elKaiDxVl/MaUeKnR/+CYdoKANcTtT
lo/1UHs/vkSEm4IkCiOKpALqwe9tXEgb1jNUK33S4lE9XJ75clhonowCBax1
P1+rh/1zllTUWA9XxuQvLAb1oKm7pubLREFvPP6W3VKoh0gl5+9/TlNQ6ptT
dzcE66HxmJdeiiIFLQt5ZG4drYcBIdfgN1gP3dxTNC709fAmvzDxNpGCVCMu
ayxP1cEZs/9efMJ4120+9DwbrIPGz/18Ong+kt83H9XWQaj+pzoHjDfbJyHt
R2YdZLW+H0jdT0FLPHtEj0XWwXrgaSZu3F+v9fyqWvKsg32VNK+lWCjo3t6G
khMudRCZp+K3gPGZtfqv5N2sgwjfkyKC1ykobfgEMr2Ez7ujWfn4MgUN5Usq
WMnVgZTX/SeVBAriUXJ/9VCoDjzapggBjBTEF26pNMdaB0trSQ1b+Hz35c8b
Gmu1INrNl/CzGf9vng4Ja+mrBTueD7ujTlBQ0fU/PLlJtWC8+VJpu5eMqvzM
PWQiakGi5pLeU3xe9hxlice/Fq7uu/6oQJeCNOasWeTu1cJv3l5mSazv2aQA
m4tWtWAU2BGcfo6C1FIf8Bka1MLOXmOmeREKcqb3ab2lXAsHNBKO22E8k+Pi
fotHamHl2WU+OgEK+o+48k6VtRbOsS0u282QUfWxDH3tohpYuUt4dVkMx4s8
VnoksQYc+vbLSMtQkF8Ho36NZw24dPU+kdOkoEbXtjMixjVQ/zy0j06egmQu
F0ivKNTA8j1+n284v+CELmvCfDXMe6VlWuF6nl47dIojsBq0byoePIrrNYWZ
MHRbqxqqirNCD7lS0M32bnULwWoI+iTI882QgoQOvHXvXa+CmqM2z+Vx/vk2
tfdY+6rgo+jIGaejFHQYmCu2f1WBt3dk59AlCqovtaP9dKMK6kzMbStUsB7c
z/SC1itBZ1XSrf4KBf1kFVCqba+E+9Lvck/foKAEce5HqUWVMGyrPPvJjIIW
9kWzHImqhDen/Q1r7DBfMelfw+9Vwkk/8wvWohR0zkSVvG1TCYHFMq5uLhS0
M9N044hQJXy75LfcLkVBbg63zjnXV4D25fXH+zwp6IscKdrRogKyb4iOVzyg
oJOGJn5h5yqAR+b1+6KbFHT0amxSALECAhVVErruURCvTgiBYaocVLwEMp7h
/O6cm125FFMOFx0J/OvdZLR71b0xYbsMTPeOpEd6U9CzD7w+T+fLYFVMiuYD
1iOjQMnasakMiJ3npagcsb9VnKwmksqgIKLtSqU5BSl6Rr5Lsi+DOUve3fvT
KGhvnlP6p8BS2GFYENTF8zIvn+Y0eJRCgPNQxSb2U+oVS53T5qVAr5Te8RPz
czGpM3leohTmZN0kfs5QkAg//0iGQAl8/NO39M6Igl7H8/ebsZUAZB/6KSRL
QQXS23ujZ4uhL92K67MCBVVYaQyl/CsC/UZmW5rn2P9jX1L5vxZBRsejsbkv
FGQSdzxyt20hrLwg3yT+wv5T2580alYI34tPqpdgv+SbXhIwZv4H1fc1666a
UND/ABZuEjg=
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=10\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.73617744136379*^9},ExpressionUUID->"ba81caf6-998e-431e-b8b3-9cdcf9044651"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1: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
as5SBlPZU4XzIe3ofwkrxZM=
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-3.941573420517098, -11.485596510735899`}, 
     PlotRange -> {{-3.8832246892959392`, -0.14890589114177105`}, \
{-11.296405486020229`, 0.43343804635119215`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.941573420517098, -11.485596510735899`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.8832246892959392`, -0.14890589114177105`}, \
{-11.296405486020229`, 0.43343804635119215`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[Zeta] \\((solved\\\\ here)\\) - \[Zeta] \
\\((Gev\\\\ )\\)\\), \\(\[Zeta] \\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736177441714679*^9},ExpressionUUID->"14921cec-916e-45ec-a9d1-\
a215b85d7d29"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1: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
aZyHX3YnNp/hKwGSTQlaU+fgfww6ikI=
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-4.30089531996961, -7.315668105598038},
      PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-7.216381749981256, -1.060627701740825}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.30089531996961, -7.315668105598038}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-7.216381749981256, -1.060627701740825}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[CapitalEta]\[Pi] \\((solved\\\\ here)\\) \
- \[CapitalEta]\[Pi] \\((Gev\\\\ )\\)\\), \\(\[CapitalEta]\[Pi] \
\\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736177442017098*^9},ExpressionUUID->"c4f927ec-9f59-4ad3-9327-\
4c5b66919f42"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1:eJwVV3c81m8XNiLbM/hRlKxKyZY8DxUhWQkNspIKJRmlVIrIaChRCZUoIwoh
q85RQkX23nvvvd/v+5fP/bnPfZ3rus74PkTtXEzOMTEwMOgzMzD8/294u7GA
TjQJX/pcq3o3uwC77u8p/+nBgxeDDuYu71wHofum157WcmGhl8yJcW9G3CO5
S2v5Eyd+PRQq8zFlCWQ/pb27+YcDt7UXtod8XIOoCR3J37wc6JJgaTuTvQIL
RqqTCoNs+DN3G4n/CBM+6CiveX6FDS8kih4pn2TEkyxu+75sYEOVAhmHaU1G
TM+dUNkcuxFfut7haStlxDfzYVkMehvRz8B9/Y4JI2qsrM6yL7Diwkp3k4ow
E/r4za1vT2ZFZ/Vge6+rTHhCuCTCSZwVf+/crrdzgRF9hA4rn+hlwY89dmVi
E0z4e/+X2/+SWBDL7bLLjzGjqoyvoKs7CwqBlBiZ4IOj9eVD+1mw3k3sddSO
DXjTuej3DBcLBhu9HzJK2YCrV/VrjrVuQG4jNb7pdSb0sBAw2+e3AW931f5O
5d+Aqcdvky5abMAvham599NZMPfVkTcaChvwlPSF2rb7LPh8w+q+KM4N+Ot4
JzUkmwUtLlp9cvnBjNIPHU9vhA3oOXHkWfYbZlQzkJBYr2LFW+gl/86KGROG
W9nK77Pj46bW5yL7mXF/k5OXYjcrdsfLlD8SYUavm+kDVp4b0XalfqyNkRlr
Zxi+1jmxIq8JmZ+1lwn3Wyi1WfxgwdKHklHzJUyothrEKWPGim78pE8JKUxY
kK+/pqLNii3XvlwXu8GEkzVbQmx92dA3Mv99ow0Tlv44tl2zhRVdn8tFSB9m
wvxww6CTsxvx/ZIcF58sE/aH26qp5LKhLmR/DBJgwoNz98Uvkjkwb0HA7T4D
E9b1ZH69/poVpa7Hxm8YYsSXYnsbrlVvxIbzPr9cvjPizueF5g9d2bD66NS4
SSIjaqe+TeGcYcXnl/8+fxfGiFvdHsfUPWLD9xtfPDp9lxGHJe0Cp5XZsHU1
7tyNS4z4Syghz02cA5+NSbbOn2LEcuefAwas7Nhrw/OrWpsRzfO+2tpPb8QX
O3qcn29jRJfTrpZ2P1mxwXMo6BoPI9aREixiFNnxjfReevwKAwZlq/vJ/2VH
9iO7+iWHGfAF7b1emQE79lhS9jH/ZkCp2mptLXl23KVw6KNlNgOyhC3PlJmw
Y9Mj9qbGFwzomdBdwLWFDa3kXqUvBjAgdwg9aXSADQMvb1Y+eZ0Bz0pu3pJR
S8zFazGVSQcGZFQqOrbdnQN3GZXb/jJnwJQfrOGBJA48Rmp7W6XHgFqfp0bP
En7O/2DM/0+NuHfOmSDdZMf3QxWJ6iIMyOnJeW8zJwfq6T1t2UJmQAX520/3
EXPIw7qoJcvMgF5syf99S2NHZy/e0I6hdag9knx8cDcHzuhNrGP5Ouw6nyEJ
/lzYe96RtpyxDjnFUr+e8HOi+phR2aNX65CSe7MmqpcDg74rbMs4vw49E86/
uVQ4MGbDyqym4To8EnxxLm2QHcXblcpFldbBkrr18/E6dlQUlsg2EloHx9MG
4l6qHHjnhtfvYqZ1KO3pv7sQy4Fleq07Hgytwe5YpPA7cuDoo2vML6rWIO0L
a3oRkf/dfXqHT+wauL3bSu4yY8ewGdxl/XANzhVJP/F6yok1M+qbb11dA04u
PdXPPpyYblv2q8l6DTyKs12NQ7gw/m9shpnCGrwPPiYlw8KJmTl3ey8Jr4HX
8K1+u05O7NlYPSTZvQrvbFeeeLZx4OU163y+4lWQVBm0td7OhRtZfFKPpK+C
BXlst5IvJ0rVNPRmRK/CG5dLlbsfcWOYt1aqadAqJFMjm5uI+x5Dyf+2X10F
Vf62rjORnNhRGdFxxnAV2Idd6Uu7udFKvxhLVFdBOSvDJWAbF0Z7e7ZYb1+F
4EXejMPqXPjZIkhPgroKZ7Ikb9jHcKKHqts95ukViA275nJJjAs33NNE36YV
2KF6eUelNRe6rh9MuxC7AvP8+/x8+rkxeZ1af/rpChzddSbeIogbRXJ1LKo9
ViB8+UdZ6UkC30vIR8pyBQRNxmsubuHGN9FnZPL0VkC59GpYjyMXfufWKzq6
cwWUdrbY1N/gwvyYbanGAiug3jdx1JrGhU5aPEXJjMRen7TS/SjEhbkb2Rkz
a5bh/eLmPeG3uDDZxUL3bOEyaJmpqgvYcaFqaf3ExfBlML56MzW/gQvd5Yev
2vktw1Hf4c1kUR6cZRR0TfVYBu1qAfWvutz4yAXctpxbhqRCz6OSb3kwft27
MPvIMnyauAt8JG5k/qLZs7hjGR6HyX9QecqN1P4juxYFl4H0u6+dNMSNfj84
d+QzL8NwYdy1lPPc+O4D/82okSXwSH2/P8OIB/PbcrvY2pbggl8wY5IKka/I
2CGkfAlg0DdqhzU35pd9ch1KXwILZc8DvmVcWCwQ4fM9bgluPt6PZnE8mPlv
1rbt2RIo/55JYq/kxgXjpZva3ktQoNv2S+Ax4W/dcX1m5yU40re7Tb+OB98p
t3AZ2yyBYkO7ic8uHvwnNYSyWkvw79SnTYuivKiRdbmoYO8SsDyLGj8ix41M
wGnmJEXk69++nhLEg+X879J2Ci/BFff5nWJXuPG9ni+tn3EJfgSYvWB9wo09
ccJ+fTOL0DngetBamwdDnNvp4s2L4LrC5DbjwoNFg22ttv8W4WGXgtF0IzcG
hhbXnYdFMM1zaWIS4EFz32CdpwmLIHpC9EkNcZ8h0Hhxa9QiVCdcfaS1lRel
2yMffg9ZhJwgJaNzPDx4IJJTVsVzES7dk+ke7OBGXta2oH1nF8H2es17/0Re
jDAh+86bLEIkzwly9XseNGnoecl6eBEmb2O68l7ivYrgpS/Ki7B/XeLKCokH
76eN71EiLYLBpupRFyT61eQjTxnDIkyLL0oIq/IiqnYHck4ugE+qzdYX13hQ
cmg2LbRtAUblfYsafvCgBeeeiSPVC7BveWTzwVIePF39u7w/fwHaRw4eYjLg
RdnTiXKUlAUI1c6o3G/Ji88phb4lkQuQK7SxvbqHByHGlWvdfwFem6qj00le
XHHNDpa7uQDK5a77PnPwYux05rs3lguQEBc9928zLyody/b3NVyAsjHx6Bl1
Xnz970TfPfoCuAiUG1GJfBERL1L7dy+AgFwQ/VkmL3JQP3h95lyA1NtDrnHf
eDH8KduWn6vzoG1dI3KexItqRp+/603MA4Ow8SHzbby4UBo/8rR9Hk7s7ZB8
ssKLbM1Swa9q50Ht/CETz3ZebJ8zqq0omIdYunvUwnYSmtcv9ChkzkNd4CWv
K5940Wb2luXtuHlo6bZ3UhrnxQTHsgf64fMQWqrv+l2TF4tfqhx+FjAPH/R5
spO8SFj97g3HfY95sNVt8rx4kBfvatt+qTk3DyUTLXLWvbw4oRHzTufUPMQc
PxUp7E9CsdDTXAna8xAp2WIVKkZCgxM9Eo5q87Ds+YCDX4aEkVnCQxy75kF+
vxRrHZmE9IPGITZb5uGuY+1/Ecwk/CMczqTKNQ8LNitWOXReNC81Xq5ZmQOs
iX69KkxC/R5ntYHpOVAoY7T8QvDTURufk+6aA6YnlH5haTJue7fFe3PNHDAf
0qqxVSXhA98XUXE/5iC/KCja2ZaEnV7fhn2y5sDCcWfRS24SOptZb+5KmYP/
KvvnnguSsEJmuIQWNgcTjms/1OVJyHPNuxQezEErj38KnYeEJd/d41vuzMHs
qU61vQdJKBy8RSLp8hxsvDSR8OAwCR13+ju9MJ+DkRGbDbdleNGxSPir+bE5
uCy2VF5F5K+tMFvO15qDa9HUzRRdEoqcO0fPkpuDL6evdGkS9djwzvLCu51z
IL2dif36YxLmr4UrhQrOAb3hrtf1nxSU3fKxeox7DuJNnb9GvSehhCvjkZ8r
s6DZYvJu/CsJHX7FjMxMzMI+6lE0rCAhy620MZHBWSjNO9qz9zQJL2bOy6fU
zsJ7edv1rp8kfF+xf7K8ZBZqPFXJfGokDNlWMoa5s/BnuYZUEkzC6+cm/EY+
z4JtmP3B6+dJePqOqKZj1CxIJBlcun+UjMxMN4rOP5mF87oNsg8iSPjYw1Ez
zncWFIM5Jc/bkFBG+5GhkOcszJGlPVqbSDglUtye4zILY7biWRolJFTetiV9
1mIWZDk6ngTcImHAywBdy6OzYKnRB9WBJFRfsuMtVZsF6Rc+IhN6RP035Vi9
USbyG966np5PQpNsiRrzHbPwnT12QMiUhFV96y5HhGbhV0r81W9CZBwolmX/
zTsLJMfDP9p/kZAk0N/OyUjgjQQ0BHcQ/o17cKiPz8C/w+sXqU9IaFWZ3+He
NwMTG37rKoYQfp1b6AlvmoFWCUeLDCJ+4HETg2v5DMRZMupnpJIwTFeoWLxo
BrLeajsPE/eXa5kvxKXPwNKFV5HC6mR0UW3c8CFxBm7pKWfr5f1fz7301ogZ
OH2g1iiTnYz3IevgyyczMB+xJFueREKyu2k7950ZeNYeymXZTkJjVc7Qwx4z
oHVaa/7PPAmPZa/LtNrNwBFtV8s2JzKuHij742hJ8MtJuL90kIyhMZlvQ4/O
QISCwWRnHRn9LmeXWx6eARdWRz/jRRKyy43QFVVnYPXlQr/iFjKevX9Ha3H3
DIgmXjFolyCj5nvqJ4YtM/Ceeb6pnULGaiG2pL38M6AYMHL8K1E/xX/bRbU2
zsB4rEgK4xQJua5+YPy4NA3tObP3DzCS0XpKJf7D8DSU9OoNqLuTsaaZUyCy
cxqKzytR0sXJuGl2imeifhpc/nM43GpLRs5Lh5i4/05D6S3pg3M6ZOTqEO64
mjcNe3uu6S6skjGH9CdhX/o0MDqwXDu7mYhPaPVKSZyGTae2CtecJuOyWLnP
1VfTsO+dUxE7HxmPa9Xk2T6cBhsKn6CXGhkrcyzufbw3DdJW/vHCvmRMFWc/
FOw5DZG5+/j9AsgYe/3lXnbnaZiy0H5hFk7G1np8ZWE9DdxNUUaNZWSMtCgM
GzKbhrkTdBByJuMr0fyuaO1pKFQ75nGC0Lct4cPlu2rTcFxGWeqNIRkt/9V6
luyeBqfXKR2WhWSUT2D35xOfhhPqL6auppExoio2RFtgGryepAhaGBF+7G4u
UCEReqw+PW0MIWMtp9l6EuM0RPzlSL5bQsZL6e+cZhamIMU/5IMckDHtB/W3
+tAUPGy6O/s8jIw997gC23umICGiZZ/pazK+OLzUm1g5BcvHLq99vUpGOU7b
xtySKVhrDGN8e49M/N8Vvev6NwJv//Cn0GdkvNbZqTb9eQoUfbrsowvISPt7
Is4qYQrMjqQbjCeQMbPR237k9RS8d2/hsf9DRsORvac2hhL3NtRNY4FktIXy
ext9Cbw5M9N/BJ9W8cchJ29OgZxFVC/1JxmZ1g5uNXeZArJGcMieHDJ+iBKk
8TtMQcVsfmgIKwXP7i2dYrSYAgu+D2sJcWQ8ZaH9rfXYFGhM2OTZE/otN597
8FKTiL+pIOOWRcxzhvCZg3unYAV2cv0mzn1uERQb2SmYKHzNZpNCxokZaUG2
7VPwgpvvh+gQ0Y/fYw5ZCE3BiLjL3jvMFLQxnqJpcU7ByTortCHmw/mDTvLQ
himA1AajE3NkfDio/SpwYRJkxNzz2lvIqFI/IH9tahIyphmVVm+S8ZEczEV3
TkJFptFoWB8ZBXf0S/5qmCTwEuUiL1Lw8Ynfb7grJqH/hOGFaSI+0XDx6ymc
hIgV75Vwop+7V/vk/b9Owrce6QscxWQcsxMQVU+ehJfhXjyjjBRstBNcio2f
BGZzti0cbBSUTlgoffZiEp68md93ZpioF+154NrjSXAUmmKudKTgnyfnw4z9
JyG9+GWM31kKXtMcVl/xnIRH/w5JVC2RsTDgzvUnLpOg4WytI7OBguVsZP6L
9pOgiWm3WrZQMPtsGUPS6UmQbqLRverJqMh1WzHfeBLsL8yjmTEFV5c0qc8P
T8L5TAH+xIMU/PGA4Zba/knYnmm4CPwU5KyJ5MmSm4TQ+ZxUnnUy+lAP3Lkr
NQkishvnhndQMGylQOOL8CQ8O8petkToKZ4o1ZEhTwK/j/P1J6NkxMkrg484
JuHV1NPhByoUPK58mvHr2gS8upJ3n9WCgpjvwvttfgIsO1KneUwoqPxKK7Jg
aAKeb/xUYylFwfwNgX0buibg43QM5+xuCj6wZsl6UD8BQfLuh3xtKCiZr7nS
93sCIuyefrE2paBhzytl1sIJ+OCgGyW5n4Iji95JejkTUF6zNmRiRMGvRit8
mikTcNrxUPsSwT+j/m9OxvsJCGyo+fzXhYInqn6a2r2agHdnbihdiye+xzIv
dVnCJ6DlQfT+EBFC72CaskLABOygbND5FUxB97NbPnDfmQAmjSc/n12iYFf+
fZX6axMQ73MPyuwp+Gz1oU6B4wQYSY8nn31EwUkjC9EbZyagJMVk81knCh4h
f3OTPzUBP4x82ouuUFBA+0sSl/4EiN92cvH9R/jzQUE2T2sCft731Pe4R0F+
v8sdi/smgE9Hfiqtj4Jr1slicrITMFAS/nrdkoIG29SdV7dPgB2/zlRnEAWH
HIZmdgtPQPjnrICPIlTsKS1NPSowAft/vvFuy6TgnpNPS25wTkC/uq7u+QcU
bEoouhG1Pg4snqNv9cMIv7+ZnPk5Mw4X7hvdOZxGwd57Dt0FzeMQyLTXsecN
BQ8+2oaBpeOw09m5dy8xH7obRw/9zB8HWeaF3dciCLzuPxpR74j3tr2uHtkU
jL7m8LAudByyLkw3FHtRMNGZ7GXrMw5MJwWPHHlFQfPain0eTuMw/yVW+jjB
r1pbfTTdZhy4z1IWfXopyOTYZH/2yDhMNfdcki6noOilr7E7FcaBc+tjh32P
Kag/pr3eID4OV++ts5sABQtPCx6NJBP51n7kU79ScPOC95W2pTGIZ5wXHKmj
oKOsqkfZyBgIXcsyV80n9My737vdMAaDCrsGreMoGNd/JHkOx6BBSnyMRvg9
9H6/yI7sMTgyeerMIwLPPTV0QejDGFTt0fE/MEDBYw9BqfLBGDhbX35aRpyj
5xSH8u6OQVRyrP2tWQo6aZi5q10ag7yr3ZqXpwk/b/Q7qxwfg2+Wt5t+EnxW
tTXyPHXHgIPj7Z1OFiqyVwpGTyqPgexPlUS9YQpWLX0YC9s2Bj+qJz41MVAx
3s+ZrMs3Bgah/E+riXwtx7lsppnGoEa4/PeULBUt1Dab7BwchW3TGZJ1RRT8
WEF/uNY+CkkTOeTTPRTsT3Ue/VI6CoHMzo0NilSMnKx9NJg1CtTdqWnBrFQU
SsxzKU0ahTV9xjP7majIvPWy5M0Xo7CHTvvPbicV7YoD0zh9R+HDcet8LS0q
zj5PSG/xGIXxSkW4y0ZFy++HeOftifgd7I0uBL7+hUtXioxHwUUorv1SPQVL
5WWDurRH4UlGjoqZFBU/6t3ac11+FGTkX44xClHxULYmU6zwKGQVBav83E1F
c9pHa2+OUahms+b5dIqKJn8nPMNWR+DexXH1KGUqXqJzyYoPjgDlKf4TU6Di
lBfN93z9CDRZ/Hik3EbUY/DBPdPfI2Cq6jwjZkzFI/TpodaMEYiWF9q8zYTw
W/PSk9z3I8BZwalX6kZF2UR9ObUXI6D+PG9rvh0Vax+XWm/yH4HMkv74AD0q
3nApsNBwGQGr/IvJEUS+sLkDD0UsRqB5+zE+uiEVDYuEt78+NgIjX13nMtWp
yCr7reSN5gi4md8QcQygoojiXQ1+mRHwt33hdv8iFYvm06XFxEZAJ/eaxYHr
VGQ4efzgAfIIGAcMv+s1oGJunBJdY3EY9JcfRD32oKK8c7VD69AwfEnoF2wl
/M8brA193DIMbMkjyQqEnh25Zwuy/wyDl/18cbw2FaPVWji584ZhVOrzyX5r
Am9tPH53yjBolS6XOFpQMbjksIN25DCclCa5cORRkXYkrl8scBjmOxlY/Il4
sojYuqvHMDRGcp7O8qdiEv8R/pOOw3Asr5Ul9wwVOf5L9Jc4NQyHWZp924nz
xOaXwguHhkH+xtP1FSsqvg84MVGqOAwucsbjbOlUVM2ePZUiPgyJj7yNJTKo
uFfByl6Ab5joX3eT4AQqhkpe2s3MNAwFbdrL4EjFGL/PLhvGhoDvwVGdv5VU
FHMU2erXPQTOI3r5XTlUfLAj2zmiZggcl87GNZtRsaVl1GSuYAjCHW+J0mOp
6LaNtedY6hBoZPyjqL0l+vuwZk9//BCkbnK8efI8FQ9u23ft5DPifclwp8gX
KmqZ6qya3x2Cre437Lj9qLiQUmDmcmUIek0TLG++IvgwzBMWD8ER56FPlBTC
39Cf26KPD0Gae9Ok3x8qfo0vvNevMQRnBeU67n6iYrbmUf1c+SHI0oy/8aqL
ihfrKi49lhyCHztOP2F+RsXu88e+NvENwfH+bczzmVR8SYlnecM8BEkt+5oq
fxPz1MUinj85CP9lkV89H6eiO4vnsdS+QTAd32XzqZGKcXf4TQ81DkLD7aqV
9/VUjK2yN6QVDYJznq11ci0V1W4OSx/PGQTfV7f7n/Hy4QEPwznX5EH4eaXi
ZWEHFcFxMmfvq0G42DRz7Nc/KlIFX8Y3BQ9CTJmqqTCFDw35F/njrg9C3qGP
V//UUTHiu0cws8MgzEQY3CHNU9GvWnTUzHoQGK+K3vokwId+nlJMkwaDIK03
mBfXRsWGBIE+J/VB8CJ3tvoNEv2jzZTAtnsQNhxO3V8yTcWrLzZOFosS8col
gaZzVNTTqe8VpA6CYc9y5b8iKiqrpe1kXB+AtLp9bolDVNwkW/jz5sgAXElx
zzy6ROD/jvNvaRkAPs65HWOlVKwpdUzbXDsAZP7653OCfPhKYcOVhuIBGFos
6+dm48OEs19Hg78MwNzgpAp9mNintRB4Mm4ApK6zGzaPUfEXJSmw/+kAvLws
1Zy5RsWfDC63uAIH4JbPjZRoIPCHNi/d9RoA76v/8h9q8KG3W5Ozt8MASLMM
8TAx8WGZm5nYoVMDwFTYezZQgg/pUYtbRw8PQIUqc8CfASqG2LIk2xwYgG12
/605jVJR4MAwk7b8AEQU+wZEEX73T/5MOSs8APEp7WnVe/kwaHnAZIJ7AOK+
Fn7lP8SHy79M6jes9YOgTcOc5mY+vM1k8CZtth9ExJ9av9rGh7+4lHb/GeiH
l0PhH1oJ/cqRvIzUmn64F+JfUkzlwwveVx+YF/WD6J1g40PifGi6mUTXzOyH
9A1hyiKHCX/eJco9TSDwb7rXDpP5kGZ476PP634oe6jxJ0GVD/dcEd8e/rgf
Ks4Fz/Ec4cM/c1vjJ737oUFFy8zEgg/5/OZMsi/3Q+VNxYlbhnx4y2yv/i2b
fpgIN5xrVyfiaW1KZ472w+ZhReV9x/jwzoI+Q+ChfvjQfV991xk+7Jb5IMOn
0g8POWJSmGh8iPrmo8I7+sFKoGWO054PE+c+ig/y94PfzX9fjljz4XRV/+oc
az+8LfQTSMlSRS/rs2fcl/uAIST0e26OKl74NcnINd4Hs2uHsvS+qOLWt2op
5zv6wNBrJxgVqeKrMA8uoao+SJsIN/v5nYg//SSjqqAPUl1tr2ShKt6RT8r6
ntEHb4wkh0+BKqoOHCkxju0Dzus/gg4T+WiRX8ySovog4peqFjcRfz2j+bjq
4z7YK/L3wsV8VXzs++e+wa0+yFP4fPvhD1W06bE3VXXpg5/pXevOxarYNZdv
kGrTBzHbM/dLEvnv3I7WNTDuAzVOAeuZKlUcClPvMDnQBzKn7HSqclXxlMYy
5/S+PqBXdBkfIPCPl12u/barD1SeyH1vKVfFz70fL9Zu7gMHuu+m7TWqqCF4
2NWfqw9Kq4JKDteq4n/Ba2uiq72Q1TFBLitVxcyAt00CE72Q7zavd79VFZW3
DJ4I6+iF+h12my51q2L5drZY1vpeGHgq5niZeD8cIRFjUdILLw6MjOjVq6L/
6wOVf3J7wWphC238nypGb7iT3JPcC/fTKuf2/VVFlsEkOcXXvWBmx++T1auK
XP95ciuE9MK5jsZPW9sJPd63H0Xf6YXLWo5xKwTfua66zzoevSCxl2qhRujJ
2hVUX+LQC6y2L93yOlSxb+K3V/LpXgi02bZ+sUsVc1eHGI4Y9wLX5by9/COq
yKQzdkr0YC80mdKZRftV0a5o17ujSr1gUKNUXjygik2BRa8sJAh8H1r/tRlV
ZDu64YMzfy9E2pVR2vtU0XtsdNdO1l7QbHskSZ1QxSN7FFVvr/aA7H9D14QI
/nyxBSv7R3uAtb7ors084d+K0HxWVw9k0z8Rv6xU8XYtD7tdfQ/cE3z+yGBa
FYWHt1RmFvXAgF5sTDmBv7DH9JNaXg+cnOZ0Up9SRYeGeJGbH3ug6ej52wNr
RL8oivcciuoB/zu5GdWrqshcaKzsHdIDXc6i3Bu4aRiUdmtO1LcHlgPOOOks
q6K16Rk7DY8eeCn6dPn2mCoWjpzLmXHqgVMOKT2aDDRslXI8yWXVA3LbW9b5
GWn4RmL0dqxRD2j84H91gZeGgZ1C64mHekBsUKI/lIh/2NbmlLm3B0a7777W
YqVhgOvXBH6pHshXKHnAzUJDMoei1OVNPfDArk9hO8FH5KNNM3ATeu8GdlFE
aEibVwpmZOyBLB5BX10uGqr8fBC0c6obCvyyHwYy03BgQ75BVHc3WBY9GDi7
iYarpjLWOo3d4KDaWpQnRENXLHOK+NcNAT9s790QoGGiAHXuzfdumDzw++dH
ZRqa6ab6iad3w7db5r0jBD9y/lF2qw/d8DnYKUBSkIa3UrssRiK7Ie7X1bwF
An8z/9rqgUfd0EK/Ir+LREPqmJnRft9u+CcYLMPAT8OlLfIugu7doCn07sIU
wZ/TvTBl4nw3eF8raeGVomFncMY35VPdIL4r5OjL3TT0LryDUXrdsK2XyeSR
BMFvrOjQ3v0E/7NXKj7+ny/TBYlChW5YGxvv8RejofmHq/fSxbvhlQr7WPRO
Gi6kGs9eEuiGO7o5dx8SZ1Ex69BOjm44EZImYk7UIyGwvKudidBTuac/XZGG
Y58dDFlmu6D4pbjDVhoN2QYHH//t74IHO2Nr5Qg+PtpTw7/ru8Df8l6ltSwN
14Qv+TWUdcE1f+WPssTZJVpXN6WgCwREBfQEDtPwtc4TCfmsLrgf8XV0Vo7I
R7v+Xje5C6LCkmsyDhJ6syV8FV53gbDcM28nQr/7zfkX1592QY26q6+tJg3j
ev1d1f26wM/fUXdBh4ZJQefvm9zogv4fW3Y0y9Dw+87jLreduuDmsyCJNwY0
PCf+96i/TRdspw9x7iP4xz3MaQky6YJ6T2pVBvGeQ0VTW0qnC9rlxeqdDGn4
YaCIZU6lC5xPSAzf1iX6N0xhQVimC1aN7ytaGtHwbbKUddi2LuBq+NMpb0nE
n2EdOEPtAt8iDdKaBnHPmlUtx9oFrJ4Vf+eNifvyNurG1U7gnjju+vcoDQ0O
jiomjnZCfF8+b74J0Z/+eyS1uzthU++37ybHaVjY8Wlap64TGnKT6L8IPJfK
q56LfzvB0P9umrsVDe13sYxc/9YJ0o/xPYs2DXXjj8XIp3fC/FbO/w460vBO
5gG70LhOSK0K57hjS+BzvpOJiuiE5/JCYrftaPhliIu97FEnnDn8WO77WRrG
Unk713w7QTVkne+NDQ3pF2n7Mjw6QcvcgpebyKf0Q0whyKkTIpPyGisvEP1O
8Rcps+yEs8lcWbn2NNTbYPhuxqQT5NIO3754kYaXzJ596tTuhIu8zxq5PYh+
CNjRS6F3QlRKydq+yzTcXls6tCzdCVv0tqnZOdHw2OVjL3VEO6E+Sbyj7AwN
j0pnzpzk6wTzblOJuw40XN8f5/2esxNWFaKetN0k6suk5XpuvQO8Hp62+uVC
wwjT3OeJ0x2Qc5ye5U7EvzxoqlTa2wGRAaFabkT+QItvlh+bO+DciNu5ZsKf
dsWhAy1lHUDHRf0pHxpuqE+TeV3YAV/PtjmI+tEQOk4wS37tAFOZA3pSxH2A
0pV9fskd8CW3LPdqMA0lQIvlz9sOyNXbb2Ryi4b/TSjwPgnvAM6wpEcv7hH7
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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
r7aPQgojj3yyh4L96a6jn8pGIZjVtalRmYrRE3UPBnNGgbozPSOUnYoiyQVu
ZSmjsGrIfGovCxVZN1+Uvv5sFHbRaf85bKeiQ0lwBrf/KLw7aluoo0PFmadJ
mS1eozBepQy3Oaho/fUA/5wjEb+Ns8mNwDc8d+FSsekouIkktF9ooGCZonxI
l+4oPMrKU7OQoeJ7gxu7riqOgpzi8zFmESoeyNVmiRcdhZziULUfO6loSXtv
68s1CjUctnwfTlDR7A/DO2JlBO6cH9eMUaHiBTqPvOTgCFAe418JJSpO+tD8
zzaMQLPV9wcqbUQ9Bu/dMf81AubqrtMSplQ8RJ8aas0agVhFkY1bzAi/tS88
yn87AtyV3AZlHlSUTzZU0Hg2AppPCzYXOlCx7mGZ7YbAEcgu7U8MMqDiNbdv
VlpuI2BTeD41isgXMbvvvpjVCPzbekSAbkxF42LRrS+PjMDIZ/fZbE0qsst/
KX2lPQIeltfEnIOoKKZ8W0tQbgQC7Z953D1PxeK5TFkJiRHQy79ite8qFZmO
H92/jzwCpkHDb3qNqJifsJuutTAMhkv3Yh56UVHRtcapdWgYPiX1C7cS/hcM
1oU/bBkGjtSRVCVCz7b8099yfw+Dj+NcSaIuFWM1Wrh5C4ZhVObj8X5bAm91
PHFn2jDolC2VOltRMbT0oJNu9DAclyW5cRVQkXYooV8ieBjmOpnYAol4spjE
mrvXMDRFc5/MCaRiiuAhwePOw3CkoJUt/xQVuf5LDpQ6MQwH2f75txNnxsbn
ovMHhkHx2uO1ZRsqvg06xihTHgY3BdNxjkwqqufOnEiTHIbkB76mUllUVFWy
cRQSGCb619MsNImK4dIXdrKyDMO3Nt0lcKZiXMBHt3VjQyBw77DenyoqSjiL
bQ7oHgLXEYPCrjwq3tuW6xpVOwTOi6cT/llQsaVl1Gz22xBEOt8Qp8dT0WML
e8+R9CHQyvpL0XhN9PdB7Z7+xCFI3+B8/fhZKu7fsufK8SfE+9LhTrFPVNQx
11uxvD0Emz2vOfAGUHE+7ZuF26Uh6DVPsr7+guDDNEdYPASHXIc+UNIIf8N/
bIk9OgQZns0TAb+p+Dmx6E6/1hCcFlbouP2Birnahw3zFYcgRzvx2osuKp6v
r7zwUHoIvm87+Yj1CRW7zx753CwwBEf7t7DOZVPxOSWR7RXrEKS07Gmu+kXM
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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1:eJwVV3c81t8Xt3ciFUXheagoGc/zIJRNicpIkYgGKilUkii7IZKsjEK2jOhb
yLkyQmTvvXnsvfnd31+f133de855n/d5n3PvR9jK3uAmHQ0NzVl6Gpr/fz/0
XODViuJCBzUHPNK7jyBxH4maYidOdGFizP6iyhHE72P46F0TBxJj+OtgNHIY
SYiKa6x/ZUfzDp/Y5nUOIcmvWbFPK9nQ4RQ5emuTQyhyRku0YicbilT80Hm1
QBStnDsxKzPGgnS2rp32ET6EXvfWNIbcZ0HruU8fsNSJokuMDvLfGFhQibVf
q90DUZSdNyO3P44ZsQqBtfF1URSzHPydRocZcaUrpP3iFUWqG5uLrCtMaLZc
8fAPYVH0wmtp+1AaE/qPUUHUbJcoMhYoD79NZEIN31LyStNF0At+bYrxECNS
0bzoPFktgipOfXv2L4URebloPNWvEEEnjnvwPXBkRP8u19tIGIsgNNlSQz3F
iNioa1pJeP+pXVnFAgcjcum5af+vTgRtPjzbqN/FgITOBGg16okgJ1NeI3kv
BhS1OGrVYC2CMi8+47pjyoCYJk59mP8hgvIizsSoyjAgTu4LZR8iRFAIw6Z8
JDsDCmSV3XXhvQgyvXP1q/1vekRbW7JTSUoEPZ458/5HDD3yExxXOhgnglyR
i3TsVXo0erVinUdSFL1t7woRPEWPHujsvObzSAQNJB6v8RekR6ID3YYX3oig
axstU9209GiY/8Vk4gkRtNOAew/TEB1yVKe1PE0rgqreiEYul9OhpxrGZXW8
IshhD9fXpHQ6tBCvVxzKJII6H31zJjyhQ42qkKLoIoI8PhZ8abOgQ1Hg+nKa
QQQ9CJEKP6ZNhy5MfYpYOSWCvqxJceyWpEOsIesrrDdE0Gn4kfqSlw41b9vs
PIf5z1/hdfChoUP7Bn1395QSkZhzXCIDlRYFmwRvjzKLoNZbL0rtC2nRd66o
Han7RFDD+blpg2RaVEFDTOzNIKKQe39DYoNpka1CQscaO47HHOp/5Tkt8igs
D1CZIKKuzfibT+7SIoGjQztKr4qg91OiXcuXaVH20mCCPYcIGrLgLG3QpEW7
CpleWxQSUejhQbsQIVq09JSbtdmCiFofU18+4qRFlsFWAmLzRBRzTFYxcYMG
BdoonmXlEkGsZ8RHRMdpkBmnKv/fESIaNNslT19Bg0oZrvGw1hKRuIx6qtkP
GuTte0OEC6/b/Vnb20JpUNyj6JDTDkR0VSoie9WXBhlcb3B4HUVEfvf2Uy45
0yD2I4OK9O+IqDiaIDdrQ4NuBniIK85gf+dqrpWa0KB4065n97E/fa7uT/U6
NEhFj//soQoiWv5NW7BXiQYtbj0/rB5JRF+otcknBXH8yUsFf7KISEfnXecB
bhr0yOAuFaUSESfTqoYkPQ1SWE1LfehPRHYuO4N6qdtwKDFTSf0LES3ozGyj
mm2gyUnQ6CBjvm7ZKqznbEM82Sxzo46ITk6dq/aP2AZZxh++T4CIXhbKCOXc
2oaifI+OWh8i+sywsaimtw3yl05ssNkREbGHXCNM3ga+L1JsfyyJiCQg8uMc
/zbokOsjLzoRkfsTl4o/dNugeGZm9a8fEVXrdB1+Td2Ci4yOqM+RiCb9H9GH
1m9BiJm7qmg4EcX6KPa+iNuC9tk/rUwHiCh4AYmbv9kCGZ+izvMJRNS4cHK/
68MtOHWyaX8o5iP7WnVpu/kWqJZk6Sm0E1Hi37gcI5ktSIiXXw+8S0S5P58P
3RXYAj2/2bYNXI9B5gaq6MAmDFLePPU+R0T3tswLdv/ZBJoljpFKHJ+Z8UXm
mexNcB15NuF2B+u3sXUoJ2oTRGI4A4ZGMR43jUzDl5sQl1V42RTnO6gnuvfQ
w024leMkY2VFRL114b2Wepvgeb1JwqcA6+HsH1R+YhOGX0+J/cR8RLk97jQ/
tAlszHffszwmogzTlzoiPJswbrX1XOMsETmdcPCkn98AavRl38/XiYjBUw15
tG8A+NR0OeF8HmyrZFnHbUDD14NODYiI0rZ5Wq6824CWvGnz/ngiEszTMm1w
2oAjk6Span3s34X/hZjZBpwJUPZ454r1HmV5PF9nA1QQk+wdHK9wh07Z+SMb
kPFmW/+3FhEVfBbKvMC7AXZBcim/ZIjotgZnWRrtBoyq30l9K0pEecystLmN
6+C/1G2VjffT7E1PXy9Zh18s+fFsR4joRFXLzJ0P6zD9ime64wQROUqPP7Ty
WgeVi0cvdfoS0SIt34NMp3VobNkondQjIn97cDhwcx2KYunD6D/h+m27lfw4
sw53uH/OMFCIiP6b2uDq4XUgNJobs+LzPCNnxFf51uHZnacMnrifvX6zHy6g
XweN55ee3cDxYhP2PI2cWMPDbDIwBeuzoDuvn6V7DfSvLf2nIoLjlV2wCahZ
g49kjWl7cbxf/fUBNXsNTjGYp3JtE9Af3vAXhfFrcHBKw1LtAdbPv8Vr3e/X
wPRomzOfPBGtXFh7qum2BnGyeakbfQSU0XzxLL3dGsh8z+xtt8fxKZ0cFyzW
4OvdbG8HVSL6J0ZFkhpr0HzLYSbAmYhUv98rK5Jdgy8vkum6VgiIDtiNbout
gVhDw9lGXI+aPbFZRwTWYIks5ydDh/tdx0NhhHYNoqyPOTjQY73FC3gNL6xC
odLhkUgJIgqw61EkdqzCfr+MYJAmorKx7q5r/1bhW+j3FCIrnj9Bf5pvwSr8
pVz87b+biEw8Xmm9S1oFXsc7xDc43xzetjsHI1eB07d9x0fM77Gej28KA1bB
TmjzajgTESl/ZJeUe7wKcqyHdjEsEtBOpu6X8tdXQfD6zQgS1nu4AbfHssEq
vHvJb7Ab96tB62AYk/Yq8HVcEFbcIiBlOb673yirIP/QMTRghoB8sqYlyFyr
YFPNzJNVT0CCBqmc1TSrMH7z4fIJnA86MeDHPrsCTNFzptWYH1HqYlZQ9wpc
Mlfe2MlMRKbsEjNnGlaA69r8rAfGd6WhomakYAUiPhN31woRkeSVZKld6StQ
J0DYLMLrkF0lHuUfV8BOW/R2BsYDnx9wbHuvwDJdemDdHiLaePDjldTTFXje
HGu/hvmIm8+NjTFbAYPwEHqeDQIi6//w9tBbAYfrMhQZWiKK/mc87Km4Aj+r
bnwTp8H5h4dmjhxdAbHeCsP0vUTExpPgksG+An8ZrWpfcBHRh3csB4o3lyHZ
5NpoPdaL0rmMQp2ZZVgj9lxU7CeglarEiXc9yyB2fuS2FMbD0iH2KqJpGfKo
srtd2ImoZ+lcU23RMrwZ2hDmI+D6tawMyuQuw9Dg6+wjywRksehq9ix+Gd5/
Xh85hvWRZFv9+uyHZZA/WiN9oRHrOUxO+73vMgS55J7UOUlEDbExbD5Oy0D5
Rz935S8BPde89q3x5jII+WRxzuL6zKh+jtW6vAy3jdTNqmWJiBB0hSNJcxlc
39GNDuF8dY0HRWyVlmF98omYLgMRffwuQGUTX4bK6cCy1FkCUlS5EGBxYBl0
4nfd1BohoEqBD3QnOJbhxBlOzlOZBGRSdWG9cWMJGOs1ssbHCejsoJ3S6PwS
JBJUjYL5iEhLaXrpWP8SGL0bjqjF804o9oDb/sYlkBHgfLEyTUCvPUIj438v
gZTK1n1+XK8+l1/jL74vwRmZUwklWE92Rub7+9OXIPLDzxWuZgKqPT5erhC8
BGOmKVaMnQTE+citCl4vQetw8LU75QRUXuiY2Om+BAop5LE33QQk8OqASMq9
JdiQct491UVAtke8b4eaLAG53Wj8yXO8LhP4z0R/CeJK9DdUBgioqdZovUBj
CXLCmtp/NWA937yp+F1qCWaWtOOCEwiIIdbMOvbIEqT4DpsPYfwFWx/IQXxL
MKLLfH4nfn9JHkhtmNqxBEfPaJ/4vUBAIg9ozxRvLAI5S88kc5WAbEo/TyzM
LELa9yz/MTwPGF2zpgTHFmF7q5HsWEZAd3KXpdObFkHk+YuD7bg/v9Semq0p
XwTjYJOkiq8EFCBUPoXyFoHhWK1OGubH+eaM10TGItx932nR94uArrgLq9lG
LkLKH74uR9x/9HRPym4FLkLNnSiGBzUE9NbJVi3eYxHyIr/zc2QQ0HFNfz3+
x4uwi+/HdtEYAc0J/un5ab8IGd8iaZIwfxShA9mLposgd6svPvwbAfmG+Z42
O78IOlldtRPfCejkmtXOKqVFsPp46/Wp97j++35ejaEsgsbZlGmDSgIy+CHS
aHJ4EdwOzEQ1viOg+uFt+zP8ixBgQ1N1bp6ARv9IslbsXISbI49fuZYSEBfv
SA877SI8eTc0N/MP8zftxHZyegFaRhQdNGIJ6GpdQa/j8AKQVqSPfovBfN1c
GfzQvgAPYu7nOmD70bftNA9qFoBrjeleUAoBBZ/m/0MsW4BsJY+fDoiA7jXR
W8dnL4DJUoZRKs7X/kQbQ0LyAiy6/wOLhP/n45ndFb4ATAJGu8Iq8HyD7yph
gQuQVhFxeiiUgLgdDXt2uC9AurJuy1I6AV04wR6k7bQAJU9a0zT/IyD9H9vH
u6wWwOJE7R2bCQLaVK6utDVbgPXTtjGtTQQU9Dn3U9D5BXD+rO7nguer170f
NWbaC3DPrbmjMI2AWKUmFEknFmDUJVD/SD4BXfdx11g9ugDM5p0pnnit9oXn
K82BBVhSG1FLwXpo4GdJkd2zAK9ynFkKAwmI9O+QsAbzAuRsN49NhxEQx8ME
2tS1eeA74h6nHkVA5nNyiQnj8xBi6Lg/GuunsYOd92PfPHT6CidLJxHQvsU5
zpmWefihyx31qYSA2O+q0+34Ow+ulAOt53Kwv16B3of585AjeFi0F8+zn1yV
SfLZ8xBtdUFmGvPDntTlkp48D6NfB3aaY32sE2pePIyYh3E62zfxbwnookZj
/rU388Ar7LD2Gtev7qepZ6rnPAjLZ3TQ4PpkElnVXz2eh9+daRwtgOe3c5gs
q9083O75qzRaTEBdLSjC1HwerjcVMAbg/v9oWhJMNZqHZdmIyzXJBBQhXNAf
pTkPWjbSmRs4H6GkhHvPleYhzuHI8iTWp9m/psflR+fh5z8xChHPS+kkVu/d
xHnQ9wMZLxwvvD4uQJN3Hm42HF3keI35ONpRJMc1D+L/uISXsf8mdqPtFNp5
iPDZnG7/TUB3s2NvL6zMAU2FRNkIrk/Wb56Kk9Q5GNlZFzeF9TroyeHXMzgH
fIdMLB9gfYVqrw0l1+F9iXB9K38CkmK/1pZXPgcKMt0LckEEpLIUJe78aw7+
XVOjnsF8PurrU5rPmIP6l6H7B7CeFf4ax19NmoM798bdYiMJKLfN7cZE9BwY
kuLX6FMJSG9C9jJz0BwURg8tc/sS0DWo8WT2mAPrBqb8DT/MH/FtwKWnc3A1
X7f3XjR+r2ypHDSxnwPaAavUxyEElBDJp7DHZg5qXMJn7P+vP9mqOVrTOXDS
0C/c8iGgy6aav7r05yDc6axuKT5vtv/m6zC1OTjnxvdi8SXuvxwBSxXZOcg+
ZKq/A8cfdgjfZSE5B72tVyAHz9uZhWN8LIfmIJ2t0fwrxm9e+FndlH8OetT1
BZowPxYX5hQ02OdgSv5YDP8bPP8TtNKoDHMwdFJT920EAb0Z04zwW5mF+LaI
leRXBCTXMir9aG4WuCS/vmq6TED+UrAU1TcLr2hCXeswHr7DI6KlrbPgT1IJ
5cHz6K1xRcyO2lkojr3mfvQCASXrrf53Gc2Ctn1m/xKON7A5LO393yyIMMIx
Y3sCmrLiFT6ZNgtWUtU7WrG/Niu+tbjEWRhurYmlw+ePJa1UvQ+dhT5difHP
T3C9FEL8tt7OAuXK8NUUrP/KwFvBF7xn4crU3DZPFt5XGz+58XgWfJbOjeXi
8yW+7s6B9rPAlO+6tPiUgGpYuPfcuTELo/zuJoyY7x/Xq2lSrsyCw6Pcxcpr
uL85npEKLsxCxo91zVOYj801NZ4Q7Vkw+yt3noD7//drGlelU7PwO/zPI2dn
3I+NHzm/S81CqOWdE2G2BPSCR9n9udgsTDWN/dJwxfNxo0j1m8AstHxkivLB
+39mqrSOc8/COZQd1Yb5RLP3x/zZZsGJ6XKyMT5/kXKF9r+tGajqueaRiPlH
BfY7fy3PAOPEEa0WL3xfRGh8LKLOAO3F15Fadvh+ZPAbZuifAaoLw4fTd/F9
b874/XXLDGwqMo7YeOL3YIHaxnDFDDjnOI2vYT70BiMoTCUzIPQmyrgP20+s
uqXo/JwBg1P9G5KOBPTfuY3daukz8E5qNGXeDL93W/7+zPmC46vLLRxzJyDj
+mJDq4gZqLO685YXzz/J42GnGT/MQM5+n6AmA5zvWBZFxncGnFpcG5cxXsfr
BxJ2uM/AKBJ71YX99xf4yLU8moE2BW3adhz//eYbrSLbGTjsGnmY6kZAs+dM
hZ9YzsDsLtt9kncI6Az3LwfpyzPQcIG1Twbnx6v5LYXj7Ax8lxzVK8T9ixJk
JPM1ZkDU5phI7n0C2uN1r3dVfgZYtYNPaOH5t2WeRpCSnIE4QkUFLeZbV+ik
3eahGfALacu1wP6oNtSFowLY30c+NX88fwerqjLP885Ah7N1uRvGI3HpXfkT
9hnQJDmKqt8ioPaksieR29MQekn0fKU15vuXgWXxwjRIhbUPMjwkoCFPm4Gi
jmm4yPVDlw/XW8VfCPlVTYNhYCepU5eATjNPqhcXTMPmSqroDivsb6BSNTJ2
GjSWY5eN7xFQ1CObN81B0/BSZfLEYz3cP3bcLtdeTEO5z0YK7RX8HmyqlXe6
PQ3B7Mv+KTfx/aR5cjLbYhr+vdD0uo/1Q2fbfuP6mWnI0K+ReIH9Cd/9L+6I
zDQ8a9iXJnIWvx+mNLdbidPwYX1Hcocl7o8rfOc/cmP8qpabltj//hW3+91r
U6CWcVbS0wa/3yRPOFVPTAGr09dAJROcz7Kj57PWKUjXO/V6QoeA4kfOpC2h
KRAPzpfuweepX04JHv4xBX25/rG+uP8dM4NW+BOmIH5oZeAt5k//DZDrXk9B
mvLK1afXcb5LJGr+8ym4USrt64/tb6saOSrdnQLOkbSx1RuYzycjdnIXsb9s
ZXKGIe5HTdX8x6enIPPkbZ9QzC9rHV/ULGUKTA50VdOb4vfPWsJUsNAU7kdV
/eOY30QvO+7Tu6fAtqtTy9+IgDovcljM003B9b1jAtyPCMhUab/BkbFJkGvy
Lbh0ioBSaxXfbPVMwn8R+2dKMF8jmXaT36omgTSjFML3AN+Hs03+Y98ngXbe
IrHiEgHxJ+fbV6VMwhxvmzMN9k9/8J7o09BJsD8X4Z+D8Vv98cti95gE/sO3
oql43i2GJGV3Ok2CsmWg2WXMj1mh+s7lG5MQPXBlfxfm46z13ftlFybhi96H
IU8SAVVJS77s15yE7Db6R1ScX6qOq4Sz9CQsMi02KOsTkPoPNbo4gUmYyFIv
pMV4TBRSzd3YJuGvReYNOdw/Bn9nHgdvTsAflT3qe7H+7ypySBLHJqBA+7Mh
wnzOuSh43GqZAFtmpg85h3E9xl57GlZMQOYYtSbPHPef4jy1K2cCZixqVY9c
xXyr3Q3M+zIBRvFO+0Kxf8nks1JKoROg/WvXl59YT01vq8z3eU/AS3nRQSPs
/4l9kamq/QT0/wn9GamB58OS8htB0wk4pkupvXYez6MygUPR+tg/lytbgBYB
MUn+Ko9Rm4DkBoFtG1xfQdJz1T3HJ4BksVU0gPGXLWcfIxAmQPrsr3MVGA/N
pYsqytwTgGw3hLc1CSgvnqyoujoO3MutXCXG+P1h12DTRR2H1tZ+KfWTBJQ/
1hT0tnMc7M3zgnarEdDhvOtFPyrHoY0573jICZy/Uif7jvxxcGFxuC+D8eZt
TSceTR+H12Y86c9VCOhVubaN5sdx+GaysnwM95fCmfgRgt845F3tosZh/9yC
hO0HTuOQtFrZkHKOgFL2nNlzyXYcGvSPrd9RJCC2vcneIpfHoZy+7o8Cjjez
P0xgRX0cugm1As1k/D/iazxTRRqHA6ny21V4/p74sXg5nTgObCYTZd9xf8rK
XL3Bu3scUvjmcnZivQWJ3j1KTzcOCby7d9yRIaDPXhn2DFNUWBCNuyOK9Uew
FTzoNUCFN18r337CfLw+/MMuvJEKuksq2mcJuB86Jw2Wiqiwy46XclSbgByE
mAb1M6nwa+Tl1VvqWN/aaoMjiVQ4OPuM3kEU97+Q/KNL76lwWePXI70zBKRh
qLVp8pwKT0YrHttI4v/z9CIj+/tUuH+FQSRGHuOhWcYUU4GRhTOOgvmLCioW
irpIBds8R6I8nm//JZZ4jqhSwclN2uS3Er6P1c6fzZOmwgofZ08Ozu9Oc+3d
t6JUmPKSs7c5it8Pt/T/a99NBUsH1Y18BQIK25XIGENPBR/hAfpXuJ5m/YzE
gtkxeH5ZzksZ68+R8bF+5vAY7FkYFm/C+op332Oo3jYGvVf9eY1xfePqb+gp
lI3B68UnUc0Yn9LT8WMXf+LzRyI8hTD/yk56Sw/SxmBnDi2ZGfMBtrM/ZSPG
QNCORWNejoB4+MIS21+NQegTLZ5o3H96e1b3xDuPwQ3+CK8svB9e6PSK3gbH
k4mT/Ib16dUgPGlkPgZJ7tcvduL8vB6L0c3qjoGqvdqrg7IE1JrEO3z75Bis
z795+wHrI0WTLonl6Bgcd37pE4j5eRjKPPtHeAwCQ0rN/PFaR6tliI9nDA5k
HRTtw/WkKGUdod0eBQ6JeR0trId9kiXFTydG4VvmgsUoxtNaEe/d2TkKiWFc
eWKC+P+kyjZrf9MoKEb5mu7GfETIMNxv/TMKR0tHdihgfpOu/zf56tsoSDjU
XVEVw/O0CfwuxY+CyrvZEGG8Lt2V4jfybhS+bvpYlx0noGIae1cOv1HwVbLN
HNuB/VP3rz13GYXCv+9s9+F6uzm027nZjEJxidugBK5ntYMRQf0yXtNtHjHH
8RQjVw9Oao8CXdQd68f78f/4NcY0C+VRcCqsNUzgx/e/8jidpvQocK8rR4Uc
w/N5tjj9usAorLKvXWPBfLxcHzWY2TEK94pfEPVxPddLDVoYtkZAoLjzXhfG
+4xONyZrcQScqKGlEzh+KQf5aOXoCKz3cUu9PYT5+7iTlqdxBNSimhd1hQnI
2u3ha5OyEZCet7FzwPPRcD+XolruCJy14vQ/hflMik2Wepc0Akq7bh7fxHgV
9DxTX0Rj+yWFzAAJ/H64Tzz04e0ISHRV3FfH87xy6WDirNsISNG0S9PhfHd7
LRn8uDcCFma/n36SJiBXI9mzrhYjsJx2lK0Lx6tU6CZbnh+BB/kHjr7G/eW+
cpbGT30EYlTbopixXgaOJxzfLTcCXAK13c1C+D101mRS4PAIGOes/e7B8ZKX
Uolje0bA24xd+Quuz3z9yOYS0wioPvVve/yBhFzMr1s6rg8Dqbz6kHcYCVmX
ztJyTA/Dw/Q4qT1BJHTwk1L6rd5hSBHkIO37QkIRwU4c/PXDEOiaX+Efhc9f
CcypLxqGuIisjucxJOQunfK9MGcYqBMuV4nRJHRi9Ez5hbhhyAzcu8qN4yl8
/GaUEjkMrnmPElvwvnNOx8UTb4eh+IvdIOUjCb31qPTRdR2G9lM588afSchi
8IbhCfthCHdveSCfQEL9SwW6mRbD8GHpW+50JI73LOq07oVhWA2sKy3MIiFq
8MleA+VhWP/PPT8ynIQuq66zz8sPg7kmuYwV+79Yfa/pl/gw7HR+fTjxKwll
DKXeadqP9ztawmaySUiVT/uBN8cwWF6/eX5XDgntfbW1Jbw5BAc6X/uFppJQ
ru+ndt6ZIfAWna+7UEBClANjxsG9Q3Av7lqY7G8SqjnEEsfUMgQBqiEj8th+
PFzks2n5EKRfMTfd852EvKOV6yrzhiAx3f+/n+kkFMXgnjaYNgT7/g3Y06eQ
EONYihQpGts/HBx9XkJCHHsf75AJGIJXN/pExn7hfNye+Ue5D8H0LxL3n28k
tNTfnKHlNASX87QHmHA+38VftpTbDMFWcfGEN5DQ8EyFS9qVIXDqin8sW0RC
eZtUmjMXhoD0WCK5p5KE6LSmLgurDAF5+/qd8VISsioTjz1PHgKved/LQX9I
qN2vLMJUBNuPqFuqNpAQy3mGBLs9Q5CRnOuWjM+7TU2KH2HCeFreRnb9I6Ez
EqQTzzYH4WKd4dhQMQntjivaODU5CDHkrWmxZszfBv/y9/5BuCssxyVfRULP
mjhZrVoGIcDIeXtvPQkJjB+oyy0bhEsWCdIR2P+KhOFXpfxBWIouqWeuIyGb
1kTBp6mDYGeuv5jdhfVCIg6qR2L7k0kq0Z0kRF9ygeIWMAgZ9wUf/hsnoZdZ
rkvCHoNQNDc+yNVOQuaGllaqToOwN8rV9nQ1CZVM3Py5cHsQRJXyL+3oIaEu
MdtLHFcHIdjitHcvXseITD6LOzcIQhmxB2WmSMivj387WX0QyO2al6/i/Tfd
3bdzZQchN81um3OIhHwf/Je0R2wQJOZGqC0DJMTNRhK7t28QtqqVC2cwHsFU
iw7Yge2H0+S7NnE/LJNf0dIOwpm2fGYevC9X/PrlkbkBIO9OWTfoJ6FRhgLd
yIEBKJDsvnd8hYQ2DY+ba7UNwI17NCo+ayT0AFXfDv83APQ2iSPqSySUzMuz
FFM4AGzGdKcf7SYjo9OZXsTsAejcKDL9D+PjLjjPejVhAI6nPuSbweddM/tN
Jz4OwGIG1+Fi7H//nq1NZf8B6NIpjljA+fJMGZ075TEAp/6896ucJ6G1A9L2
fI4DsBCh1F6wRULsjiXpM7cGYO+Zy2fbmcmo71XOL8rlASjn7+ywYiMjtxJ3
FKkzADarYTWX6MkoeapMXfbUAL4frIwe/R8vnbVIicwAeMmaG1+gJSOThIee
2cQBWKqotrbB/lYyLyze5R2A6VfEQWO8FiaYB/WxDUDZhPp3IsaX5FfT30M3
AEcD4PazXWQ0lWGjx7jYD3aE6PZRPjJiGRt7+3ekH66PD8mvs5LRC8258YqW
fli8sENFjJOMtgTuerVW94MbTyfb2g4yso86fTq9qB9uLZQV9omSUbRWoIj0
935wUif6oJ1klKTg/OV0Wj8MuHTccBfE+f4Q8ZCJ7geLiafbZBYycny6HOr8
rh/en/BeEhcmo/gh7wcnvfoh4otq3W/sL+XlLR+DJ/3AWdkS8QXHKzxy0f7Z
7X6IPtQXbXuUjG4S/573tugHdbozT+n2Yfs3PztfGvTDbGeMiju2Z5NT0xTT
6gelnw32lGNklDBaxrgk1w+/RF9ZnD5MRl3BMisCx/uh74FY5CEJMvqUJmYe
LITjHys5v6GAz1syjVry9MNe9aNh5UJ4n+l7gxRTPxR9fGv9WxLv13TzMG/2
wc3lS80fjpORrsokKXmyD6rtEp/6SJORnLeEqOZAH9w+tUY8QCajkt6v81rN
fbDpuyszAPuzr3v4ePVvH0wzXZU4pURGN8QZJ5x/9UGDCj1NLZGMTifqf5bO
7gNxolAC22kycs9VtgqK74P1dH7DM8rYP3vs8cjwPjhCXgzRViWjb1QO1mr/
PihrD0vxUyOjOJ6dfVsefRCZHJlqe4qMFO8oyOc49cFiZYZTiyIZkX8TZF7e
7oMnFRHKkVpkxL3LW7DarA+0mj5weauTkQ6DXuyCQR/keA9zyuqQ0V2j91/7
NPvAUSxJv9UA68H38NAuxT6I/RhkTa9HRoeaqqjrx/og5Pon72NnyEj/nn6Y
lnAf2D4YswpTIaPzx3IXLu3uAwXzzQAdbTLaPhXv9oW9D0oSfrEmm+L60mk8
uLndC2x0wZkB58go3DAvJHm+F1r6FXafwufDVAzJVUO98OuuzXMlQzLyM/1l
ltrRCz3imn1fMD89JKpyZ3UvGHk9+l5wjYwYWrKOR5f0QhlL+si4FRlBrzG9
6H+9oOdhPTVvQUa+5PvyXmm9sPDjuoGKLRmJgAZj5adeeGFb2y9whYz2zsjs
DPzQC/RG1C5LbD/Kpm93/FUvdFL0LffcI6MacdG7z9174fozY6WDNmQU2iJB
DHHsBb/8Z6wRl8lIVlihLNq6F1Cb+sATJzIynvQyCjTthfEMz9k2VzLqbl+9
felCL5wwH+Ixu0FGeUHXSy5q9oJW8Xf/rEtk1OzCcSxKsReqfoSetbDH9Ws9
aOgu0QuN1s4JX3H88HdeXPuEeuFJQbq/y218PmS1M2J3L/w8mX+dCefHtmE9
acLeC3fDjO2KfclIkuauzsHtHtANpdMwvENGdQFs3hWjPZDVd6b74Ausb5Vv
P1lre2DvcdOGvW4Y77EBF47vPaB95Ki1yH0yijGqX6yO7gEjSs+psEd4XliR
N5B3D5iSvw3ZOpPR1fpPdHJOPcBp2EY/9oSMFDo/Bi+b9sDQH56m6te4/tmd
vdzaPTAb8jDM7SkZiXm0aCpI9kCfyL/CYk8y+j04o8W9vwckaGa3NnD9svbl
/9Wj7QFv7b1LEdj+70jKnaipbmjnyYUdDmT088m3GzlN3UBH0H922Y+MnA7u
TFn93Q3RP75+LojF+M7y0w+mdUOm9KpYLs7f5mX29e733bD+ojp8z1vM940y
6fFn3XDWzmr0jDfuH63Pjl9suiHtZOTVlDdkxOMWbLJLtxsy0m1WP+L4Yz0X
zW+Qsb0gMj/8joz+s3ymy0fshgXjT1kHgslo4jyvpwJLNxRmVx50wnz4v7Wp
/bfUBc77Gu0WML93h838PnR1wUZi07f9MWRkmJUwsauyCxpGrT4bh+B+2db6
Mf+tC1ylfPqVg/B85jx59kBMFxgJyYwPf8b1d7RZWPDrgu/FAV1dGF+nderx
1w5dUKcrLdf3Bevxr9JRD7MuEOj/uZfVh4wuln4666DSBRpR55K5wskoM6SM
9Em8C89XG/KlNDL6EC9oXLarCyxEha564PylM8MStui6YHNs6OoNbJ/63e16
+EQnlItfNPqUTkbWc85vels6gU6X5ZkH9me9q38gqKgTLjn2H7kVRUbvF2Mk
O9M7IS9JO5caSkaPt4S8vII7YSBaoWsQ45OpFlE+6dYJFY6swuthZKRWcbvi
951OmDN3Tl5AeM3iwyNh0AmW3YU3P+P61egKFB5U6oTi9/bJu3H8aHp6XS7R
TvAiCw3Z/yQjgyaffsndnXCTgUG9OxXPoysqs7KbHdDv36qzkE9Gt2ubBSQm
OkAwiikmPxPX8y9r82pNB5D+fFLhyyAjuhfUwWf5HSAt9/inVhUZXV6sPSSS
1AH2Aurvi5PJyFyTeqbLvwM+7OZL2lOH7yvZ22RW9w4IXqI5VFeM61vAYZxm
3QGqExP21P/wfC/c22Vv2AGF55d/RZeTUUO+Cgv3yQ6QFXCudKskI9qO2+NZ
Rzog3El7JqCajBxS5V6O7OyAjK7jRsF/yKglvahxebUd9thvRR7EeLiZDhTu
HmyHzhsnGQeysN4FCq5GVLfDvR80bf3YH39/hwT/r3awBNdLpZj/5MUXXsyJ
7UCtGhro+I719qqoJDmkHTh+FbxrrMH4Wt5Tgp63w2VLxqSbGN88N5gqW7VD
G3uF3nIR1ovHlnS6QTusiNKEUX7j+SBOjfRQaYecLM5zg3NkdErq8E4asXaY
3LucVdRKRp5/2vMmeNrhKvfkmNcUGVXMlv3r3G6DaFcztb+DZCQhbzY+Mt4G
waHEusM5ZJRGHOkoaW6DyXFPH9tf2N7NpeTx7zaQSnB1OtCE+9UhUHEguQ0s
5J+YZRWQ0fKtj09Cw9ogRUiwp7sd63GPoVy4ZxuINxarsDTiec1UrJl2pw0y
9D1Udw7h+8xs2kTABMe/0LxSO43nDTHP7Kp6GzAGfvV90EZGz933W/JJtUHH
gkDCc8z3kfT6mRzeNriI7jNUrJORs5eG6jlmjCf7VmpfD55HFlnBWXOtUBIs
1laP9yM49jzc09MKZUT1vCqM3ylEtpemshWED0k5FmK85o97P5zPbIVaGhV3
NcxvwY4eZ464VsiNclL5sYrv9+sBNwhvW2HXx4X7J+fxPHHQkDjxqBVGlAhs
S91kdCx05fMny1a4xJRq0Ij5pJQlMX3Sa4WjarOG4jj/4tK3Qo8VW8Eo0+Zf
BMbTUMNXdJLQClc2Ywut91HQK96PiW/2tAL/7TrxHQwUtPpB+7T4dguo2dbK
qdJQ0MnzygdIoy3gkWDe8JBKRsP8NibjDS2QjeoFcvvJaNL40uGYwhZQn2CR
t8f2MRy7P8ektsAkU9xXW7zuKaPVPRbRAlW8W8UPMP6dRF6pBB9sH9O7rwz7
O362czrIsQWeUYT1lSfIiPnbva3BKy2wIPgzbv9eCiqRn0t4q9kCQu3qL85u
YX7M904byLdAiNgXzeUu/N7k3xlXRmiB8Mi9drTsFKQVxPvYmbMFxB+U+2Ri
/THP8fyKW2wG46X5EU+cb1FiGB11qBnyK9Y+PBCgIIFL9wNoa5shJuffjxsL
+D0xTrjR87MZan+/tA1gpqCWvvB3TgnN4CIXL/qQl4IyjXfv5v/QDDXnde8P
YH0IbnG/++jRDEd2N4+Vr+B+VNlLPe3QDBGZO6r/w/H8Z3nyXpk2g3TV5aHI
4xQkWj1HYdZshqdJJusHNsgovYzJ10C6GcheQoWmuylo5Z5yEr9wM+wvOe90
XISCiAVf5FLYm0G/UrYtHvNZ+5mLnTzTBGHMhR1a5hQUfDJqKmGwCWb971Z8
3kFBY8JhQrzVTXAkyNZ9GMdHb8cGf+Q1gXe2JYkdx/85UyO8nNQERJVbsR8p
mF+pGz2/3jVBZbripz3Ynu6e75iCRxPwjqSlnjpKQczyTsLO1k1wR2CnewQd
5oOd/YOdWRO8EUu6edSYgqY62x8lajfBuGnlzkZRCqqjEXvSItUEuvsusz+V
oSByHMnHQbQJHOo+OtYIUZBpicjzvB1NEHeuW/7nRQp6SD7qd3qlEf8/3+KV
wPadOxz4uEYawX35PeOxFxSk18FDCmtshI7FI+4vNCnIjWtVgwKNkMOuMM2y
k4L4l61vVyY3guiTDbqv5yio31xw82BII3TmV3zYJ4fx2I3td/VthOkTop1Z
zhSUF5PlpnO/EWS6ko5fCaEgy5s/ewgWjXCUje+O4TsKkuw5FxSu2wi3gxIe
pQhSkON5Y4YGpUZQ+B6xz0SXgp4GacgeONwIlkKfHnE/oqBKydwmsd2NsDb6
c9bvBgV17zNZCqZvBNd7v6s2DlGQDvUB38BEA8xSB83dbDGeD40Vse0N8DKS
65041tPR0meBeX8aYPV9gJz7NQpql/q8spbbAGbLX9MFnlLQ9ISo6rW4Bnjg
f7yy7xkFHaoq6ga/Bgjb65sTifMZ47+hZePSAPuYlx6feEtBX82yPwhYN8Dp
a3yn/ihQkD3vk1csZg2gL7/qYHCTghJ1NTIYVRvAMT92SsSSgoZmdY97STYA
1e9qQak+5tOwdf2HcAO4OxYpe2F/bKc4JywYGqC5J0jXzJuCrjbmt+2Zq4ez
pxyqD96iIKOJmODGgXrgzt12jvCloKBxmqmthnq4/63DwsiRgj5Ppx/0LKoH
9ml/sEigoA4uR8OFtHqgIXxiT/ekoHWpu2ZckfXwaL1oOwHHky6JKCW/rocc
TkH/KqzvUJ2cCSvXetAKY2H0wfwGHrK+8PlqPXyOULsna0JBj9lTY7mM6oFR
M0J1052CAtx+V9w8WQ+Vv5X9m1MoKD1A5t764Xqg1yYxm32joCVxt++b++tB
g341IwLX70K+DJ0Tcz0oPD3BuRVOQRoRl04vTdbBnPpG+WAqBa3ZfOzxGayD
vfHsbs0RFBRN8CpEtXVgpMEd7hmM+8kzMTPrex286qWtfuxDQYuCLMcPRtfB
/k+6t4POYL56vlUvPq8DxZw7S04vsd5ZG/6IOdWBuHki9U0mBZm3+i0XXK+D
C2+KEmXa8HwZFkNm+nXQsxldxFKP61NIOnlLsQ4eb82HT0dTkKCqi/9T8TpA
ocGaRMy3cPgN1VnuOnBP+c9F+TUFuSx9Xj+9Wgu/z4FRtCEFJciGhLX01cJi
biD3sUQKKrX4JZifXAsXK/wecWC9VftauslF1II7IRBtNuN8ZhUWBf1qYbvN
Ojq3loJOz1pzKT6sBTPfs4pJYRSkkvza5vytWvis6e0ZUE5BmulPhC8a1ULs
h2An7QzcL8yerTfVaqFeq/69YiAFTVClfBf21YID/9H9w0kUdF9k+b0Gdy2I
mmTVvHSgoH8Hcw3PltaA8+2I3AxcH83og+X7kmrAaPftjul8CvLtYDeseV4D
BeaDvi7/KKjxcZuyhEkN9N3/qVZRREFyl4ooyydrYKXo06V/OH5wYpc1ce4f
sAxpdHlhf1Ore2V4A//B3zg9puehFJS2kzhkq/MPihgn0n4yyqLr7d1aVof/
wcPRlbL7PRQkvuudS+9aNbhnPtoKaqegQpvah9x91TDc63H+4BcK4oOdf7e+
VUPcnzLy4S4Kqi+/Sx91rRpcLLZUhTBfwgd8DILWquC1PJ3M42EKyuY+pFrb
XgWrqb9vvZjH/Sd1wDW9tArcjbK+HJujoPkdn7j2xVRBWk8tRzuNLJqIy0kJ
f1gFV/3DVngLKUjbVOPElk0VbN489leKVRZtTzdd2ydeBdbZf9bESinI2f6m
tmP9X9CPBtrEvbIoVlH00wOrvyD58HJcBbcsOnrR1DdM+y+4BJ56yLdBQfuv
xCe/FvkLlzm2A2M4ZZGQXgiRbbISegROpLV+paA72jPL+nGVQCpbYD/hREFM
Ky6NiVsV0FMn/N/mQVnk81HI03uuAp741Cnu7KOg3CJV6wdNFZBwLZKzd4cs
eqjucGs8uQLYMjh3kLcp6NTz6PfJdhXw7vB866CeLGItcMiJCiwHq3puZSE6
WST3xjuvwa0cuAckjVkGcb9evqEna1kOv4vyrkauU9D55M7UOelyIN8M0nny
ThZJEAgjuYf+gFb/1u//8P7bBEK/Oc8fUHF1n/7ciu93yhbrp5kymOWJiPTs
pqC/t04PpRWXwhuP9GAjGVlUOhabTkgphW224JsJurLI9MuRaKbbJbDMSy7N
uCaLNDU5k0fNS0ChXbv2yQ9cfzP9QyY7i8GbeoU5gV0W/Q9QOxGk
          
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=100\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736177442408736*^9},ExpressionUUID->"d1d636c8-e2f9-41f7-a8c5-\
1f16686f1e25"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.736177315962401*^9, 
  3.736177316112557*^9}},ExpressionUUID->"93f4d43d-0c21-470d-9de7-\
ac34640df169"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"Eq1II", "=", " ", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["cs", "2"], 
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "-", 
        RowBox[{
         SuperscriptBox["H", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"H", "[", "\[Tau]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"w", " ", 
        RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}], ")"}]}], " ", "+", 
     RowBox[{
      SuperscriptBox["\[Zeta]", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      SuperscriptBox["cs", "2"], " ", 
      SuperscriptBox["kwave", "2"], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}]}]}], ";", 
   RowBox[{"Eq2II", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"piC", "'"}], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      RowBox[{"H", "[", "\[Tau]", "]"}], 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", " ", 
     RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}]}], ";"}]],
  CellGroupingRules->{"GroupTogetherGrouping", 10001.},
  CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
    3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
    3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
    3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
    3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
    3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
    3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
    3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
    3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
    3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
    3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
    3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
    3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
    3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
    3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
    3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
    3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
    3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
    3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
    3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
    3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
    3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
    3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
    3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
    3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
    3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
    3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
    3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
    3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
    3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
    3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
    3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
    3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
    3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
    3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
    3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
    3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
    3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
    3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
    3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
    3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
    3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
    3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
    3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
    3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
    3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
    3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
    3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
    3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
    3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
    3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
    3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
    3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
    3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
    3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
    3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
    3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
    3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
    3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
    3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
    3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
    3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
    3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
    3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
    3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
    3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
    3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
    3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
    3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
    3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
    3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
    3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
    3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
    3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
    3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
    3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
    3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
    3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
    3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
    3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
    3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
    3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
    3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
    3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
    3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
    3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
    3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
    3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
    3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
    3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
    3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
    3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
    3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
    3.7352971834201117`*^9, 3.7352972215902157`*^9}, {3.73598066087808*^9, 
    3.735980683558736*^9}, {3.735982701409083*^9, 3.735982722979671*^9}, {
    3.7359898364984417`*^9, 3.735989860821068*^9}, {3.7359942581647882`*^9, 
    3.735994270382619*^9}, 3.735996823468211*^9, {3.735997134764554*^9, 
    3.735997136615862*^9}},ExpressionUUID->
  "d3a08106-f7b5-4682-80ad-0cee53023bfa"],
 "\ntiling factor = 16  , nKe_numsteps=5,  Kessence source gravity= 0  , \
initial redshift    = 100.0, boxsize  = 400.0   , Ngrid = 64 , Courant factor \
 = 48.0\ntime step limit     = 0.04   "
}], "Text",
 CellChangeTimes->{{3.735981823189452*^9, 3.7359819188759108`*^9}, 
   3.735989740965366*^9, {3.735990387929201*^9, 3.73599038804593*^9}, {
   3.7359906368439713`*^9, 3.735990636912073*^9}, 3.73599444422113*^9, {
   3.735996436208637*^9, 3.73599643630416*^9}, 3.7359967540383253`*^9, {
   3.735996929849309*^9, 3.735996932769126*^9}, {3.7359971662645693`*^9, 
   3.7359971677409067`*^9}, {3.7360006963892603`*^9, 3.736000696808218*^9}, {
   3.7361650526073217`*^9, 3.736165068308145*^9}, {3.736165747309207*^9, 
   3.736165747594521*^9}, {3.73616615885612*^9, 3.736166162369762*^9}, {
   3.736169582406474*^9, 3.7361695869669228`*^9}, {3.73617725494965*^9, 
   3.7361772569523*^9}, {3.736177312341321*^9, 
   3.736177312605173*^9}},ExpressionUUID->"bcab7297-2618-4d4b-bcec-\
afbee079da5f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1:eJwVV3c81f8XNlsUJVn3utdKy0zde42MrDQIDZKWFUlWyrc0qGRVQpGRJFkl
oxQ5R2SE7JG9997b7/P7y+v9Ouf9nOd5zjnv+yFy2cHQkoWJiekoKxPT//8G
txnwaUdwY390l5hLOA/ueSxVnueyBZ91OO7y2s2LQo+Nbr6o5USLT7kxs8I7
UEpij+bSJw5UqC75IMaxHWU+fXn3359N+PFXaWbdJl4MH9eWKObahK+ynsVe
DdiO8ycYE/IDGzBWpSR6z6Md6NteXhNyYwO+rr1YkGuyA8+wO9HT2Dbgl6Ls
Kn+WHZj6Y5wmGLMeH3w6su2nzg6Mmgv6yqS3Hv38OHsLN+1A9eWVmY3z6zDT
VCGnxWEHPvCaXduZtA4fqEqPZobvwNOkolBbsXVomBUe6WlOxIV0DpzuYcft
O5KmfzTuwOJDaXf/JrDj6eJU2xIOPmRIP+R3dGZHe7nxvR/O7UAcqS8fPMSO
ets31Uq48eF/9gXF05zs+Oda7gz9Bx+uuB6tOdnChv5+Jf35XTvQxZTPmO7F
hre9I7v4HPgw5dRdbjtTNpSx2P08W4Uff4QdiVKXZ8OFO5PfRHfxYwjbCj2c
gw0fSbHlKqjzo6nd+U8Ov1hR5bdPX3c+H7qNH3mZGcWKT+8OBQmW8+MddJd7
d54Vg3qbn9/cLYgBjS0hlEOsGPVwobKznh+74qTL/Sms+Hq6llteVAAvLteP
tjKz4qkspaO7wvmRy3Ar77oeFvTpH3cS1+XHUj+J8LkiFmSU/eHRfcGPTrzc
nz4ms2Brmr/4eh9+bL6Zdkv0NgtaKiSTuOIF8OGb7Nh/F1jwsw4/TbGOHx1D
ZEP36bBg5lNbprXLAhi7KMu5XYYFFTjudXz8LYC6kJn4lI8FXzYEJdxxFMSs
eT6nx0wsWH5LsUwlkx9334qJYxtkxgwLibFZQwFssHrw2yGHGUNix/tc3wlg
tf7kmGE8M1YWx3wa6yL8ul4S8i6IGe8/Gdfh+kLUW//K/9x9ZmTW+7B65pEA
tqy8t7x9jRk1txdknrwjiC9HJVrmzjJj0XBkw/yIAPZc2PK7WosZnalShTkW
AvhKsts+hMqMCW/d+eXL+LHBbfDpzS3MaHrcrNeXXRCj9h1Uiltmwl9jP9cH
nBTEjUf29EkMMeGyGXlPyDZB7DbbRmctZsJ75RR+bSJ/j/zhRLNMJjxy7RC3
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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
vrNtHJg3utwfN1IwbClXM500Dkka3+8mZFGwYKxEb7fAOOzdE2Z1gdhvHP9v
4OG6cfiWaEZ3YVLw+L7TrN9XxmBH9H+3K9ZQEbOd+X7OjgHr1oG4p2xU3PdS
JzKXOQYXI6N3uLRQMJsjuJejcwxsXTZAdysF75/l/Ha/bgz4Tzz9e4GbinLZ
Wku9hWMQ9CTWv5Kdike6X+5bkzcGlUki25bGKTg07/X+UOYYHIzX5zNipeL3
o0tCWiljwJT/b1NAPQW/1BVnfnk3Bq4qaQfEBal4ovK3qc3LMbB4uS1HSZ74
Pt79XJ8zfAwmFa98TKwl+A6k7lMMGgPFp7PGO6Wp6GpLjl/vPQYbMh/cdNhI
xc7sQFrdtTEw85aRf7uBik+XH+jlOoxBxCNLd3ZZKo4ftZC+YT0GuS1zB8f5
qWgg8PPqnlNjYCLRr5kvREVR3fT3vIZjoK2qvBCjTegTryj/Q2cMVHhskw9J
UVHY/0r7PH0Mzl1OLTt5jIorZz/IKMiPQebZT+ctifk8TFVzWt48Bscpdp1H
CHxMe+bUDtIYvPIBWcfLVOwuKfl8THQMfCRn5HNpVNx18snfGzxjIM64VehC
4GtMzL/xanUUDuUfqm0nfo/c/2li/XtqFDays1gMEP49fvZduU2jMHvh5/aS
XVTUeEjF4JJRCPi1ffUmwV+fa1j7d/YoSAjyujpuJ/J1FWm+ih2FA5m5P5ZV
qRh1zf5BbegoaDCfVD6QpGKSk4DnOZ9RuK3+LKZxBxXNa8rpbo6j0B7U57zA
oGKVrtpwmtUouMi2XTcyoSKbQ+N5W4NRUNubdknzIBWlL3+P26o4Cpc0vtxg
EngNR3RX62VHIc9rJjtcnYp5p8WORQqMgrh37kymChUl5rz+a10YAd239dFG
hlR0kGe4lQ6NwEDm2pTQ/QSfWVe/2/UjcEz962ZDRSq+7TP4MIMjwF92ZSyC
qM98d4CyJWME3uQ7y8qpEf3/HDonGT8C39slDymZUdH4AeytuD8C0L87+aop
wXdGifnjzgho5nhuF7CkoqOmmev+yyPgKicqqErYPTf6nGjHR+BQssS1AQLP
sq7mDw/9EVA4LVG0zpaK3BViUeP7RiAoOGKN9UkqVi7Ej4RRRyB+/yNZEWsq
Jvg7CegLjYDyPtaMayeo2Hyc12qSbQQm9zh4td2kosV+CZOtA8MQtapdl6lP
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
zs97RP8tjTeb8/2GnrnKl3ytDPwfJDjzgQ==
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
hMy7sxkI6yXfVE/UeOcfcL36bYDA+fwPr80Vww==
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
46CTVBjG84CZoajJrl9QJt85GqdIQf8DdP3Gtg==
          
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.574097145495981, -32.07501034540706}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[5]}, {-Log[100000000000000], 0}}, {{-4.605170185988092, 
        1.6094379124341003`}, {-32.23619130191664, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=10\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736177222213764*^9},ExpressionUUID->"763cf132-49ca-417a-bbe7-\
d76be2f68d66"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1: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
Kw==
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-3.941573420517098, -9.752489450362189}, 
     PlotRange -> {{-3.8832246892959392`, -0.14890589114177105`}, \
{-9.589959093152498, 0.4869230538481575}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.941573420517098, -9.752489450362189}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.8832246892959392`, -0.14890589114177105`}, \
{-9.589959093152498, 0.4869230538481575}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[Zeta] \\((solved\\\\ here)\\) - \[Zeta] \
\\((Gev\\\\ )\\)\\), \\(\[Zeta] \\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736177222572536*^9},ExpressionUUID->"d090da84-912a-4701-904f-\
cad315b23fb7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         PointSize[0.004]], 
        PointBox[CompressedData["
1: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
5UgHqyzGWfgfwY9vqA==
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-4.30089531996961, -6.057899052305742},
      PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-5.97864067565773, -1.0646213234810602`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.30089531996961, -6.057899052305742}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-5.97864067565773, -1.0646213234810602`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\" \\!\\(\\*FractionBox[\\(\[CapitalEta]\[Pi] \\((solved\\\\ here)\\) \
- \[CapitalEta]\[Pi] \\((Gev\\\\ )\\)\\), \\(\[CapitalEta]\[Pi] \
\\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736177222814151*^9},ExpressionUUID->"05e0f51a-8cba-4d13-9377-\
9113a347e6dc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1:eJwVV3c81f8Xtve69xKFhBaFSHHvJZuiUlYZaSikJCulUkkRpZIRDSFkfaMi
JOdURorsvffee/8+v7/u6/16v8/zPOc5494rec7F5AITAwODETMDw/8/w9qP
Ceu/EUBWj9YJa75FkH0oV/7Lgw9rGScDv2itg+hD02vPa3lQ5MXjeKMgRpTb
Jqu7/B83PnkxV2JXtAQK/2XE3vzDhfaGnZcPFqzB6wn9bSX8XBiwMbQ2tXIF
Fo5SJ5UGOfCs6CF5V3MmDOoorwm/yoGaW3Lv7FpjxBOsbqqfWTjwmqfKPWNj
RvyUO6GyKY4di7gPbaU1MmL0fGgWgyE7dkvkcLXYMqLWyuos5wIbZmNKyYud
THjPb259eyobfuoT1qi7x4QWYr8jnaTZsDpSXNiPhbgXNdhn0cuKHodXnvms
MGHJgc+3/yWzYtPn9/d32TIjVd5XxNWdFWt3e3ZdXmVEHK0vHzrAivHulbSF
vSx407moZIaHFYfYHN8m57DgqqdRzfFWFvRVGaw8ysOMHlbCZqp+LOjS9c+F
R4oF081vC1yyYsFfFor0rnxWzI06FK2lxILDms8P016wYjjLquprbhak9x6/
P1TAilaXTv3n8pMZE1U//z33lwW9Jg69yI5mxkYdf0+rdja8hd6KsaeY8UjQ
vsOyLzgxuKk1XOIAM+a27MsIHmfD7kT58icSzMgZt2tDzn12PLNSP9bGyIyH
S4yrFb3YkN+EJMTWy4QXr/ZNZf5jxdLH217P/2ZCu2kb0qMzbOgmJPDfhzQm
vESRWQg5zoYt1z5fl7rBhHL6Bne+BXOg76u8+MbTTHjUpIDpzQAbuobvidxt
wIT8mZPWnxg5MH5pD4+gAhMae4kxhRRx4EHITnkkzIQ6YzKTheJc+G1B2O0h
AxPuE3bzqk5mQ5nrcYksQ4zIOR7qW9nOjg329wpd8hnxiK3efN9tDqw2nho3
SWJEh/eVqvYM7Bh+5W94bCgjxi2ZbVeMIvjYI55Y32XER7lR3Ee1ObB19f2F
G5cZsXRaYnuZAhe+GNvWOn+SEV/UyFsnkjmx9zRfYbUeI9q36ebmr7NjxI4e
5/AtjJgknZiYV86GDV5Dj67xEX0l+yZxWYMTo3fvpyeuMKA5o1t6UD0nch6S
7d82zICaD8xv7rDkxB4bsipzCQNev6584a06J8oq6aTYZDOg9987qztOc2LT
E86mxggGrCjQ+m4vw4Gn9kR9WvRnQJHBAx8MZjkw4MqmfSeuM+CJ719Y+bo4
8NdbKZVJRwY8dzpc6e4dLpQ9Wn6m0JIBI0qFr3WJceFxgbZ3VYYMqAdvs74T
fs7/ZMzboMaAnV8/Jzv5c2L8UEWSugQDbsN4RQ9hLjQ0fN4iTmJAntJTu0NE
uZCPbVFXgZkB9749m7shnxOdvflDOobWgY2kPKCtyoUzhhPrWL4O7BwVf0VC
eLDX/iJt+cs6LO6OURmS5Eb1saNlT6LWwUT44bG5SS58lK+05Yv9OtTLbZKx
1+HCGJaVWe0j6yAbcuMb1xwnSrcrl0sqr4OwyzDjxy5O3Cu2Nfuo6Do08WS6
Vutx4Z0b3iXFTOvQGFBefDydC8sMW3cEDa3Bs3F/nSueXDj65BpzRNUadO/K
6ZaQ4sbYh/SOe3FrYGYQKkY/y4mhMyhr+3gNitOrY6vfcGPNjPqmW55rcMrg
MI0jmBs/nSkrbLJdA8UR+fNJr3gw8W/cFzOlNbhX8JDsT+LGzJy7vZfF1uBA
rFvdt1Fu7GGvHtrWvQrVNSImFUNceGXNNk+weBVEMnp2flXiQXbWe+mHPq1C
gppi2WMCX6amoffLm1UwvOKp6RfJi6E+uummj1ZBrnL99t6nBN6RbRu2e64C
axvpbG4iN3ZURnacPbIKEcU+6SaqvHjKqBh/U1ehE93r23fz4Bsfrxbb7UT8
igfDu0M8+NHqkeFWyipkJKb+yEvjRg+q233m6RVw33b1S4E8D7Lc10bfphV4
FitwXeYSD7qua2Y4xK1Ab8vemMZpXkxdp9RbP1+B2/5hPz6F8aJErr5VtccK
qJJXmraeJ/C9Re/J2KzAqV38fb9keDH6zVn5b4Yr0I3dD9Su8WA+r2GR8c4V
+LNRTVXhIQ/mxWxJPya8AtHHvFmy9HnQSZevKJVxBQ4dWl9l2smDueycjJk1
y5C2xz1tJIAHU12sDtoVLEN18qfsK1d4kFpaP3EpbBkMrlJ0BHt50F1x2POc
3zK4nnwd6yjHh7OMIq7pHsuQG7tcyGfOi09cwE38wjKInrrz6lYqHyau+xRk
H1oG37fDM5fEeJH5s3bP4o5lSDiYUhP8hhcp/YdkF0WWobR7ld1xjhf9fnLv
yGNeBuEtmXks7rwYmyB08/XIEtxVd7LntubDvLbcLo62JdhmWMzGqEvwFR1z
fFq+BCc6L0b4OPFiXtl/rkOfiPu5NHJjIw8WC0fey3+/BBxmHakp6XyY+W/2
TNuLJeBTPPj2TCsvLhxbuqnnswS8G68GXoki/K0zN2J2XoJmh5NPY7v4MHZf
C8+x00uw+a/GVP1+PvwnM4QKuktQnmX/wVieH7WyrhT92L8EWspMt9+p8SIT
cJs5ySyBtIhpOEs4H5YLxWbsFFsCxbnwR9dv8WK8oS+tn3EJrq68GLV5zYs9
78X8+mYWoXiF++eX43z41LmdLt28CCyqrNmGt/iwaLCt9cy/RVA6x+19qI8X
A0KK6+xhEQZNRKdOSvOhpW+g/vMPi9CcrVIjS9x/EW68tPn1Ipj3vnoXJcuP
u9tfPc5/uggqwVkG3zbxocYrbgUVr0XI8LDr0BjlRX62tkeqdoswktPr35zJ
j5EmJN95k0VQ3DTbuvMTH5o09LxkM1gESbsNl4K0iXgVkcuf9y1CmqOgtIk4
Hz7MGJdTFliETXvULxSWEv1qksJXxrAIVb36Wa56/IjU7gDuyQXgxT9pI758
uG1oNiOkbQEcPncry5fzoRW33MSh6gUIlyXdCmvgQ+vqkvL+vAVodN0QfuIk
PypYJ+0hpy1ArvmkUKgjP4aTC3x/v1qA017fSTKTfAgxrjzrDxZgRS+0C+z4
ccU1O3DPzQU4GnzjOIswP8ZNZ8ZG2yzA7b+RM9I7+FH5ePYD3yMEvp3Q40OG
/Pj2n0XfffoCMEn3SDkSfJGREen9uxaAXa2LceAHP3JRErw/ci9AuUawxGIJ
P4Y95xD/tToPkbe1vueK8aPa0Y/5hhPzEHBm4F/abn5cKE0ced4+D6o/+03c
WASQo1kmMKp2HoYvPi7+O8yP7XNHayt+zMPRo9dKpOQE0LJ+oUcpcx5Ynr+r
LMjlx9Ozt2xuv5+HpMrwrIBlfvxwsSzIKGwebNvnY8jG/Fj8UsXghf88XN7h
XlxzVwCrY6O5HnrMg5rsaz84zI939c58rrkwD81yMUqfJvlxQismVv/kPFjJ
Dr7QDxJAqRBrng968yCa+sM4b6cAHrbo2XpRbR7CmsQWDigL4KsssSEu2Xnw
fHZhYF1YAOmax56eFp+HIAPH6Z+cAvhHLIyJyjMP9xJOrPIc5EfL0mPLNStz
MOzc77RDWgCNepzVBqbnYKV1cnMroU9fbXxud9ccXDLhfq2vRMItseI+m2rm
YHYy9mGghgAG+Ua8fv9zDt4yMOlG2Atgp/f34XtZc5B5IsbhJ0UAnc1sN3Wl
zYFfwb+nuFkAK+SHf9NC50CjisHUQUUA+a75lELQHKxG/qd8QVAAf+e7J7bc
mYOHZstwWl8AxQLFtyZfmQNnSS7xzCMCeHHnA6cIyzkI1QloKKfx48Uisa+W
x+fgc/CDvSsEf22F2XKe7hzQRlK86UcFUOLCBXrWnjnoWDriF0bUgyXWxiF2
5xyULemaxoQKYN5amHKIyBxcM40viCkho4J4SvUY7xz0vRkYL0wRwK2ujId+
rcyCnXB2nUi+ADoWxozMTMyCSefYwLU64nf7rYwxicFZyBbX4DhzVgAvZc4r
ptXOgui/FBGePwIYX3Fgsvz3LCS262xV1xbAp1t+j2HuLNy717Np8pkAXr8w
4TfycRastW00Yi4LoPUdSe2Lr2fh2blBi4/mJGRmulFk/2wWIqNkN3yJFsBg
j4va731noe+dBPvTCwIor/fkiKjXLOw+G3qErVMApySK23NcZqHnYsdDp38C
uG+L+KdZq1moK3E5ke4rgP4v/Q/aGM+CFG+U70qwAKovneMvVZuFohCLSpHj
RP035pyK3jcLhZGx25t/CqBJ9tYayx2zwG2uFKxrKYBVfesuh0QJfIeNfH2S
JBwoVuAs4Z+FOb1OM45SARQQ7m/nZpyFTQUFpz/3Ef6Ne3Cpj8/AlsGGAXq4
AJ6qzOtw75uB6c96YB1G+HVhoSesaQaUjfb8bCHeDwQ3MbiWz0DWxNVPLVkC
GHpQtFi6aAYMH5J/U/oF8Eots8P7TzOgb9EwrqtDQhdqI0tC0gzMytYyuv/4
fz73P7VGzsCll6cDWvlJ+BCyNF8+m4HY2bmL8+kCSHI3bee9Q8TPeSv59Qrg
MSp3iIHHDHQ91xSZXhXA49nr8q3nZmDtioMbmysJVzXK/ly0mYEYrrZwKQMS
hsRkvgsxJvKJU17kbCWh35XschuDGbh7UvPO9XUB5NwzQt9LnQFRS+kaa2kS
2j28o7u4awbePg/fx76LhNrxlP8YxGfgpe7SF/aNJKwW5UjeLzQDQX5XZdo7
BHDvv+2SuuwzsCmpz0tmQQB5PBMYU5am4dmi5CEHdhLaTqkkJgxPw+/EmLAL
N0hY08wt/KpzGuLDAn41ypBw4+wU30T9NPi6kftZHEjIfVmHiffvNGgJtzWL
HyEhT4dYh+e3abA25qqQYCFjjsCfD6qfpkHn+txi4Bbi/YdW77SkaWCxVIhY
PkvCZanye55R05DYa6ukuImE5ro13848nobY57duxmiTsDLH6n7K/Wk4J3eN
RTeAhOnSnDqBXtNg8V7+bMoTEsZdf7mf03kaRD7p9dx8RcLWeoyysp0GtTCe
QIYaEr6yKggdMpsG9S62YW13EkZJ5nW90ZsGT5X8kNtEfls+JFy5qzYN/krm
6kWmJLT5V+v1e9c0NPVYz97/Q0LFD5wPBKWnYUGPae31VxJGVsU91ROehuiv
csL3zAg/djX/UBGYhrPBv/0ZwklYy222nsw4DQcO73uc+I+Elz/FOs0sTMHV
W9b+JwpJmPGTUqI+NAW3z6sXfo8iYc99noD2nimI6+Nj9H5PwgiDpd6kyiko
eng2q+0mCfdwn2nM/T0FPtKsmUWPSKg590b2+vcpCLXbY54TScJrnZ1q0x+n
YIvThuVfxSSk/bV4f+rDFBhSx9qEPpIws9Hn/MjbKRgoyQgLrCDhkZH9J9lD
pmA15sRTwackPAPl99l9p4CkWPxrhtDTKh389MTNKYhS6jpIKyEh05rmZkuX
KRgrlp8wBRImvBahCTlOwdswGMnkIaPd/tIpRqspcCINa5Unk/Ckld731uNT
cD77IFMQkb/NpgtBL7WngPfC7hMv84h5/iJ2VnP/FMicS1McJ859bpHk0wpT
MP/ovcyDzyScmNktwrF9CvY8zqoymCD6MT9Gx0p0Chaz8jXiOcl4+tgUTZd7
Cjb0dX1/0EJC5wT91CGWKUh4nEO/tULCx4N6UQELk+DJYfiWtZuEKvUDitem
JkEw8xSPtC8Jn+yBuTedk+B8Rig3d4SEIjv6txU2TML4yNwaupIx2KIkmrdi
ktgPLBIbifdJRxa/nsRJ4I3PiP3GTMbu1T7FB18nYSmql2lPGQnHzglLqqdO
gpJH2CsyBxkbz4ksxSVOwuMSu08KfGTc/WGh9EXEJAhtYcl4OEnUixYesBY8
CRlrX27NuZDxzzP70GMPJuHYK9W1pItkvKY9rL7iNQkRYzN35hnIWOB/5/oz
l0mwb0kOMeUiYzkHSejS+Un4Neyaw7iVjNl2ZQzJ1pMQZH/4ajSxL/by3N6b
d2wSzoVZDd2wIOPqkjYl3GASvN61Uf/pk/FnEMMttQOT0OlwWLhXlIzcNa/4
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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1:eJwVV3c81f8Xtve69xKFhBaFSHHvJZuKUlYZaSikJCulUkkRpZIRDSFkfaMi
JOdURorsvffee/8+v7/u6/16v8/zPOc5494rec7F5AITAwODITMDw/8/w9qP
Ceu/EUBWj9YJa75FkH0oV/7Lgw9rGScDv2itg+hD02vPa3lQ5MXjeMMgRpTb
Jqu7/B83PnkxV2JXtAQK/2XE3vzDhfaHOy8fLFiD1xP620r4uTBgY2htauUK
LBylTioNcuBZ0UPyruZMGNRRXhN+lQM1t+Te2bXGiCdY3VQ/s3DgNU+Ve8bG
jPgpd0JlUxw7FnEf2kprZMTo+dAshsPs2C2Rw9Viy4haK6uznAtsmI0pJS92
MuE9v7n17als+KlPWKPuHhNaiP2OdJJmw+pIcWE/FuJe1GCfRS8rehitPPNZ
YcKSA59v/0tmxabP7+/vsmVGqryviKs7K9bu9uy6vMqIOFpfPnSAFePdK2kL
e1nwpnNRyQwPKw6xOb5NzmHBVU/DmuOtLOirMlh5lIcZPayEzVT9WNCl658L
jxQLppvfFrhkxYK/LBTpXfmsmBt1KFpLiQWHNZ8b0V6wYjjLquprbhak9x6/
P1TAilaXTv3n8pMZE1U//z33lwW9Jg69yI5mxkYdf0+rdja8hd6KsaeY8UjQ
PiPZF5wY3NQaLnGAGXNb9mUEj7Nhd6J8+RMJZuSI27Uh5z47nlmpH2tjZEaj
EuNqRS825DchCbH1MuHFq31Tmf9YsfTxttfzv5nQbtqG9OgMG7oJCfz3IY0J
L1FkFkKOs2HLtc/XpW4woZy+wZ1vwRzo+yovvvE0Ex41KWB6M8CGruF7Incb
MCF/5qT1J0YOjF/awyOowITGXmJMIUUceBCyUx4JM6HOmMxkoTgXflsQdnvI
wIT7hN28qpPZUOZ6XCLLECNyjof6VrazY4P9vUKXfEY0stWb77vNgdXGU+Mm
SYzo8L5S1Z6BHcOv/A2PDWXE2CWz7YpRBB97xBPru4z4KDeK+6g2B7auvr9w
4zIjlk5LbC9T4MIXY9ta508y4osaeetEMif2nuYrrNZjRPs23dz8dXaM2NHj
HL6FEZOkExPzytmwwWvo0TU+RtSUfZO4rMGJ0bv30xNXGNCc0S09qJ4TOQ/J
9m8bZkCNB+Y3d1hyYo8NWZW5hAGvX1e+8FadE2WVdFJsshnQ+++d1R2nObHp
CWdTYwQDlhdofbeX4cBTe6I+LfozoMjggQ8GsxwYcGXTvhPXGfDE9y+sfF0c
+OutlMqkIwOeOx2udPcOF8oeLT9TaMmAEaXC17rEuPC4QNu7qsMMqAdvs74T
fs7/ZMzboMaAnV8/Jzv5c2L8UEWSugQDbsN4RQ9hLjx8+HmLOIkBeUpP7Q4R
5UI+tkVdBWYG3Pv2bO6GfE509uYP6RhaBzaS8oC2KhfOHJ5Yx/J1YOeo+CsS
woO99hdpy1/WYXF3jMqQJDeqjx0texK1DibCD4/NTXLho3ylLV/s16FebpOM
vQ4XxrCszGofWQfZkBvfuOY4UbpduVxSeR2EXYYZP3Zx4l6xrdlHRdehiSfT
tVqPC+/c8C4pZlqHxoDy4uPpXFh2uHVH0NAaPBv317niyYWjT64xR1StQfeu
nG4JKW6MfUjvuBe3BmYGoWL0s5wYOoOyto/XoDi9Orb6DTfWzKhvuuW5BqcM
jGgcwdz46UxZYZPtGiiOyJ9PesWDiX/jvpgprcG9godkfxI3Zubc7b0stgYH
Yt3qvo1yYw979dC27lWorhExqRjiwitrtnmCxasgktGz86sSD7Kz3ks/9GkV
EtQUyx4T+DI1Db1f3qzCoSuemn6RvBjqo5tu+mgV5CrXb+99SuAd2bZhu+cq
sLaRzuYmcmNHZWTH2SOrEFHsk26iyounDIvxN3UVOtG9vn03D77x8Wqx3U7E
r3gwvDvEgx+tHh3eSlmFjMTUH3lp3OhBdbvPPL0C7tuufimQ50GW+9ro27QC
T2MFrstc4kHXdc0Mh7gV6G3ZG9M4zYup65R66+crcNs/7MenMF6UyNW3qvZY
AVXyStPW8wS+t+g9GZsVOLWLv++XDC9Gvzkr/+3wCnRj9wO1azyYz3u4yHjn
CvzZqKaq8JAH82K2pB8TXoHoY94sWfo86KTLV5TKuAKHDq2vMu3kwVx2TsbM
mmVI3eOeNhLAg6kuVgftCpahOvlT9pUrPEgtrZ+4FLYMBlcpOoK9POiuOOx5
zm8ZXE++jnWU48NZRhHXdI9lyI1dLuQz58UnLuAmfmEZRE/deXUrlQ8T130K
sg8tg+/b4ZlLYrzI/Fm7Z3HHMsQfTKkJfsOLlP5Dsosiy1DavcruOMeLfj+5
d+QxL4Pwlsw8FndejE0Quvl6ZAnuqDvZc1vzYV5bbhdH2xJsO1zMxqhL8BUd
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
TG6kGfLFFHK8eGhI+ctZt1jeDBTP0941XDRkujfUc/tbM+w0hnmmnTQ8OVux
feuHZnDfqvjnDisNbfWGDrU+aYY4703zlbtp6L7fSZnzTjM4S8OOJxI0fJLH
Y5Hq0AwYMhOVQKFhQf6GVhfTZuh2/TNttZWG1d80OUjqzRCpd4+Nvp2GjM1O
wxk7m0E9K3+TkQwN3VJUHvXzN4PQebrdMWka1qf9qJlfbILEvQm1TTtoSGIT
zxfsaYKlKFuxaF4a5ojlnYoqa4IxkdCBtwSeaFeznOj3JjgatDvqHuF/0uw9
P/bEJqA9iR6JINPwcuCPgqTwJuAdS/nzbBehr/7FvpC7TUByZ1+QJPRNk8BK
41wTDH3zCPwsTkNz3zXFNJMmGL/77dckca6UHXrtq9kE4Q8z7N8dpeGBPTv4
GWSa4EGecP9tZRreL27KHaE0Qeb5KjmtwzQsmSz617LeCCHPxp/5a9JQTtVm
uH+4ESRnWyR7+GmYKt3fXFDXCH7GganbNhLxPt4FXj8boVbHMqZxDw053J7R
u5MaoULJJsBZhIbz9q9uRLxshCB7ye2v9tMwRchUJfJ+I2TMXL9VoEDDrWy/
9FIvNcL79MDIvwSfss24pZhlI0xRVw4+MaShsXSuzSmdRqDO3fwpt4+Gd+9s
OiuypxH2b771R43we2da1cQX4UZwzavWfXCChtf9dLWOsjfCqe9P0t/Qafjz
dEZoxlQDlKtNkZ4S91E8Qp5C7Q0gvm12KoDQ7xG+v4PhTwNkspcVehN6bb06
wozTG6AonhS7RuDn8bZf54lrgFvv+C09zGl43u7peangBsipMb61SPg56KYr
R73WAMq6neafaDTcHbEQ8+5sA1zN/fnoGeHnvqIPbO+ONID5BnpgH6H/V2Hw
Fi96A/QUzE5ZEHqqy0V+qEs1wNJcNv9WTxoGCr9KfCzUAA05/uolp2m4GGZw
UHa9HkIP6HqvWtNQ3VhDfO9APThLXShU1Kdhn6ij5XB1PTDXvXnoeoCGoxYn
dkTn18N/33qv7DpDw2gewZjolHqgUJkvbCPO7UWMRruj6iEvlntZzpiG/NLC
exIe1sMTg/SzvgSevGHLeIh7PaTMTngtG9CQ/fOVtR7remA3742rcyX6T3Uq
IVivHtK4Z/zYrQh/bDeMm6jWg4KJ2OPPVBreE+WPK5KqB5v2qo/f7WmoHyLs
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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.6, 0.4, 0.2], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, PlotRange -> 
     NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.570631409593181, -25.201793842819832`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{-Log[100], 
         Log[10]}, {-Log[100000000000], 0}}, {{-4.605170185988092, 
        2.302585092994046}, {-25.328436022934504`, 0}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Solved here \[CapitalEta]\[Pi]: z=100\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[CapitalEta]\[Pi]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Gev \[Zeta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7361772232056932`*^9},ExpressionUUID->"643f67c9-025b-49ac-b40a-\
d4a55059610e"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{"Eq1II", "=", " ", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["cs", "2"], 
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "-", 
        RowBox[{
         SuperscriptBox["H", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"H", "[", "\[Tau]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"w", " ", 
        RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}], ")"}]}], " ", "+", 
     RowBox[{
      SuperscriptBox["\[Zeta]", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      SuperscriptBox["cs", "2"], " ", 
      SuperscriptBox["kwave", "2"], " ", 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}]}]}], ";", 
   RowBox[{"Eq2II", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"piC", "'"}], "[", "\[Tau]", "]"}], "+", 
     RowBox[{
      RowBox[{"H", "[", "\[Tau]", "]"}], 
      RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", " ", 
     RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}]}], ";"}]],
  CellGroupingRules->{"GroupTogetherGrouping", 10001.},
  CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
    3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
    3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
    3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
    3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
    3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
    3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
    3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
    3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
    3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
    3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
    3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
    3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
    3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
    3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
    3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
    3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
    3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
    3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
    3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
    3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
    3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
    3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
    3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
    3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
    3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
    3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
    3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
    3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
    3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
    3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
    3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
    3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
    3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
    3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
    3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
    3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
    3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
    3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
    3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
    3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
    3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
    3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
    3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
    3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
    3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
    3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
    3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
    3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
    3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
    3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
    3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
    3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
    3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
    3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
    3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
    3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
    3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
    3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
    3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
    3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
    3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
    3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
    3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
    3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
    3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
    3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
    3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
    3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
    3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
    3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
    3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
    3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
    3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
    3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
    3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
    3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
    3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
    3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
    3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
    3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
    3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
    3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
    3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
    3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
    3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
    3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
    3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
    3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
    3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
    3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
    3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
    3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
    3.7352971834201117`*^9, 3.7352972215902157`*^9}, {3.73598066087808*^9, 
    3.735980683558736*^9}, {3.735982701409083*^9, 3.735982722979671*^9}, {
    3.7359898364984417`*^9, 3.735989860821068*^9}, {3.7359942581647882`*^9, 
    3.735994270382619*^9}, 3.735996823468211*^9, {3.735997134764554*^9, 
    3.735997136615862*^9}},ExpressionUUID->
  "0080dd5c-8ba7-4d2a-80ea-d5d6df91c738"],
 "\ntiling factor = 64  , nKe_numsteps=10,  Kessence source gravity= 0  , \
initial redshift    = 100.0, boxsize  = 400.0   , Ngrid = 256 , Courant \
factor  = 48.0\ntime step limit     = 0.04   "
}], "Text",
 CellChangeTimes->{{3.735981823189452*^9, 3.7359819188759108`*^9}, 
   3.735989740965366*^9, {3.735990387929201*^9, 3.73599038804593*^9}, {
   3.7359906368439713`*^9, 3.735990636912073*^9}, 3.73599444422113*^9, {
   3.735996436208637*^9, 3.73599643630416*^9}, 3.7359967540383253`*^9, {
   3.735996929849309*^9, 3.735996932769126*^9}, {3.7359971662645693`*^9, 
   3.7359971677409067`*^9}, {3.7360006963892603`*^9, 3.736000696808218*^9}, {
   3.7361650526073217`*^9, 3.736165068308145*^9}, {3.736165747309207*^9, 
   3.736165747594521*^9}, {3.73616615885612*^9, 3.736166162369762*^9}, {
   3.736169582406474*^9, 
   3.7361695869669228`*^9}},ExpressionUUID->"ffd490cf-9f3e-47a6-ae0a-\
ae04e082373e"]
},
WindowSize->{1352, 898},
WindowMargins->{{Automatic, 0}, {Automatic, 24}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 17993, 396, 738, "Input",ExpressionUUID->"b9555473-15b0-405e-bad4-d386c6f55d0d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[18576, 420, 14781, 295, 556, "Input",ExpressionUUID->"fed1bad3-35ae-4ec4-b896-3df442045fb8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[33360, 717, 26151, 626, 1646, "Input",ExpressionUUID->"cd658157-41ad-4b89-b57f-6bcaa6d85197",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[59514, 1345, 25737, 615, 1013, "Input",ExpressionUUID->"70dadc0d-51fe-4df1-8944-6c354f466484",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[85266, 1963, 94920, 1673, 263, "Output",ExpressionUUID->"ed2bac04-8aa2-48d4-bec2-f776b495f88d"],
Cell[180189, 3638, 25852, 469, 265, "Output",ExpressionUUID->"842a10a0-18a4-4ec1-8f6f-0669642b4d17"],
Cell[206044, 4109, 25803, 468, 265, "Output",ExpressionUUID->"140ae0ad-3935-4004-8218-83b6eccbd0f2"],
Cell[231850, 4579, 94859, 1674, 261, "Output",ExpressionUUID->"07245151-dbe3-443a-9fe1-ed1d926aca6e"],
Cell[CellGroupData[{
Cell[326734, 6257, 147, 3, 52, "Input",ExpressionUUID->"beab133e-4a34-4d8b-bf2c-6d6a753a20ca"],
Cell[326884, 6262, 94918, 1673, 263, "Output",ExpressionUUID->"86392a3a-9f82-4242-becb-9daf15e7414f"],
Cell[421805, 7937, 25852, 469, 265, "Output",ExpressionUUID->"5c771960-1bdb-4de2-a7b1-20d15392aded"],
Cell[447660, 8408, 25803, 468, 265, "Output",ExpressionUUID->"de312f93-d41e-4aba-9004-5f3712b29c21"],
Cell[473466, 8878, 94856, 1673, 261, "Output",ExpressionUUID->"328bbb11-9784-4a44-b5a6-76a2f5b91ba8"]
}, Open  ]],
Cell[568337, 10554, 9586, 151, 83, "Text",ExpressionUUID->"f230cbaa-1714-4069-b382-2c8ef3be4b7b"],
Cell[577926, 10707, 108369, 1894, 263, "Output",ExpressionUUID->"179bb151-fdc3-48e9-8a41-6a1065c01c7d"],
Cell[686298, 12603, 29205, 524, 265, "Output",ExpressionUUID->"d7bcbc54-a514-4ab2-bcbb-5184c54578fe"],
Cell[715506, 13129, 29198, 524, 265, "Output",ExpressionUUID->"2e06423e-ea12-4994-ac77-4c276c39e5bc"],
Cell[744707, 13655, 107784, 1887, 261, "Output",ExpressionUUID->"6243adc8-314c-4274-92c6-27c92e7e8720"],
Cell[852494, 15544, 206, 4, 73, "Input",ExpressionUUID->"31c04291-cab2-4857-ad19-a2775c40ef1a"],
Cell[852703, 15550, 9590, 151, 83, "Text",ExpressionUUID->"cb8207e3-7d67-462b-8166-5eac2c180610"],
Cell[862296, 15703, 105097, 1840, 263, "Output",ExpressionUUID->"5eb67816-d3b0-4414-ab31-35df8039752a"],
Cell[967396, 17545, 28298, 509, 265, "Output",ExpressionUUID->"672fc921-5f3c-4600-b366-d6533535add7"],
Cell[995697, 18056, 28338, 509, 265, "Output",ExpressionUUID->"6a5c7185-247e-4de8-bf0e-b6ab0faf914d"],
Cell[1024038, 18567, 104916, 1839, 261, "Output",ExpressionUUID->"5c5c20a0-eea0-408b-9ceb-d42ddf1450b4"],
Cell[1128957, 20408, 9606, 151, 83, "Text",ExpressionUUID->"bc3224e8-ac1d-4ad2-b759-d57819c19e27"],
Cell[1138566, 20561, 94965, 1674, 263, "Output",ExpressionUUID->"ba81caf6-998e-431e-b8b3-9cdcf9044651"],
Cell[1233534, 22237, 25860, 469, 265, "Output",ExpressionUUID->"14921cec-916e-45ec-a9d1-a215b85d7d29"],
Cell[1259397, 22708, 25754, 466, 265, "Output",ExpressionUUID->"c4f927ec-9f59-4ad3-9327-4c5b66919f42"],
Cell[1285154, 23176, 94843, 1674, 261, "Output",ExpressionUUID->"d1d636c8-e2f9-41f7-a8c5-1f16686f1e25"],
Cell[1380000, 24852, 206, 4, 73, "Input",ExpressionUUID->"93f4d43d-0c21-470d-9de7-ac34640df169"],
Cell[1380209, 24858, 9534, 150, 83, "Text",ExpressionUUID->"bcab7297-2618-4d4b-bcec-afbee079da5f"],
Cell[1389746, 25010, 94977, 1676, 263, "Output",ExpressionUUID->"763cf132-49ca-417a-bbe7-d76be2f68d66"],
Cell[1484726, 26688, 25828, 469, 265, "Output",ExpressionUUID->"d090da84-912a-4701-904f-cad315b23fb7"],
Cell[1510557, 27159, 25744, 466, 265, "Output",ExpressionUUID->"05e0f51a-8cba-4d13-9377-9113a347e6dc"],
Cell[1536304, 27627, 94861, 1674, 261, "Output",ExpressionUUID->"643f67c9-025b-49ac-b40a-d4a55059610e"],
Cell[1631168, 29303, 9443, 149, 83, "Text",ExpressionUUID->"ffd490cf-9f3e-47a6-ae0a-ae04e082373e"]
}
]
*)

