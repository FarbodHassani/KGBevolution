(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    257798,       5117]
NotebookOptionsPosition[    256339,       5086]
NotebookOutlinePosition[    256698,       5102]
CellTagsIndexPosition[    256655,       5099]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"**", 
    RowBox[{"*", "Delta_kess", " ", "comparison"}]}], "*************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "Background"}], " ", 
    "In", " ", 
    RowBox[{
     RowBox[{"case", "!"}], "**", "**", "**"}]}], "**********)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "difference", " ", "here", " ", "is", " ", "we", " ", "do", 
    " ", "not", " ", "multiply", " ", "to", " ", 
    RowBox[{"\[CapitalEta]", "[", "a", "]"}], "\[Pi]", " ", "we", " ", "have",
     " ", "instead", " ", 
    RowBox[{"H", "[", "1", "]"}], "\[Pi]", " ", "so", " ", "does", " ", "not",
     " ", "change", " ", "in", " ", 
    RowBox[{"time", "!"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", 
     RowBox[{"-", "0.9"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cs", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"H0", "=", "0.00022593979933110373"}], "*)"}], " ", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"2997.92458", " ", "100"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{"100", " ", 
      RowBox[{"h", "/", "c"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "0.67556"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Omegab", "=", 
     RowBox[{
      RowBox[{"0.022032", "/", "h"}], "/", "h"}]}], ";", 
    RowBox[{"Omegacdm", "=", 
     RowBox[{
      RowBox[{"0.12038", "/", "h"}], "/", "h"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Omegam", "=", 
     RowBox[{"Omegab", "+", "Omegacdm"}]}], ";", 
    RowBox[{"OmegaLambda", "=", "0.0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Omegarad", "=", 
     RowBox[{"9.16681", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]]}]}], ";", 
    RowBox[{"Omegakessence", "=", 
     RowBox[{"1.", "-", "Omegam", "-", "Omegarad"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hubb", "[", "a_", "]"}], ":=", 
     RowBox[{"H0", " ", "a", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"Omegam", " ", 
         SuperscriptBox["a", 
          RowBox[{"-", "3"}]]}], "+", 
        RowBox[{"Omegarad", "  ", 
         SuperscriptBox["a", 
          RowBox[{"-", "4"}]]}], "+", "OmegaLambda", "+", 
        RowBox[{"Omegakessence", " ", 
         SuperscriptBox["a", 
          RowBox[{
           RowBox[{"-", "3"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", "w"}], ")"}]}]]}]}]]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"LogLogPlot", "[", 
     RowBox[{
      RowBox[{"Hubb", "[", "a", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"1.", "/", 
         RowBox[{"(", 
          RowBox[{"1.", "+", "100"}], ")"}]}], ",", "1"}], "}"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Eq1II", "=", 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["cs", "2"], 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "-", 
          RowBox[{
           SuperscriptBox["H", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
        RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"H", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", " ", 
           RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["cs", "2"], " ", 
           RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}]}]}], ")"}]}], " ", 
       "+", 
       RowBox[{
        SuperscriptBox["\[Zeta]", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["cs", "2"], " ", 
        RowBox[{
         SuperscriptBox["\[CapitalPhi]", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["cs", "2"], " ", 
        SuperscriptBox["kwave", "2"], " ", 
        RowBox[{"piC", "[", "\[Tau]", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Eq2II", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"piC", "'"}], "[", "\[Tau]", "]"}], "-", " ", 
       RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}], "+", 
       RowBox[{
        RowBox[{"H", "[", "\[Tau]", "]"}], 
        RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
       RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Trivial", " ", 
     RowBox[{"equation", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq1II", "=", " ", 
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["cs", "2"], 
       RowBox[{"(", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "-", 
         RowBox[{
          SuperscriptBox["H", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
       RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"H", "[", "\[Tau]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"w", " ", 
         RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}], ")"}]}], " ", "+", 
      RowBox[{
       SuperscriptBox["\[Zeta]", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}], "+", 
      RowBox[{
       SuperscriptBox["cs", "2"], " ", 
       SuperscriptBox["kwave", "2"], " ", 
       RowBox[{"piC", "[", "\[Tau]", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq2II", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"piC", "'"}], "[", "\[Tau]", "]"}], "+", 
      RowBox[{
       RowBox[{"H", "[", "\[Tau]", "]"}], 
       RowBox[{"piC", "[", "\[Tau]", "]"}]}], "-", " ", 
      RowBox[{"\[Zeta]", "[", "\[Tau]", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Solving", " ", "the", " ", "field", " ", "only", " ", "equation"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}], "=", "0"}], ";"}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[CapitalPhi]", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], "=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq1I", "=", 
     RowBox[{"Eq1II", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"piC", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"piC", "[", 
            RowBox[{"a", "[", "#", "]"}], "]"}], "&"}], ")"}]}], ",", 
        RowBox[{"\[Zeta]", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Zeta]", "[", 
            RowBox[{"a", "[", "#", "]"}], "]"}], "&"}], ")"}]}]}], " ", 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq2I", "=", 
     RowBox[{"Eq2II", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"piC", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"piC", "[", 
            RowBox[{"a", "[", "#", "]"}], "]"}], "&"}], ")"}]}], ",", 
        RowBox[{"\[Zeta]", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Zeta]", "[", 
            RowBox[{"a", "[", "#", "]"}], "]"}], "&"}], ")"}]}]}], " ", 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", "''"}], "[", "\[Tau]", "]"}], "=", 
     RowBox[{
      RowBox[{"a", "[", "\[Tau]", "]"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"H", "[", "\[Tau]", "]"}], "2"], "+", 
        RowBox[{
         RowBox[{"H", "'"}], "[", "\[Tau]", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", "'"}], "[", "\[Tau]", "]"}], "=", 
     RowBox[{
      RowBox[{"a", "[", "\[Tau]", "]"}], 
      RowBox[{"H", "[", "\[Tau]", "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"H", "[", "\[Tau]_", "]"}], ":=", 
     RowBox[{"Hubb", "[", 
      RowBox[{"a", "[", "\[Tau]", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Field", " ", "equation", " ", "in", " ", "terms", " ", "of", " ", 
     "scale", " ", 
     RowBox[{"factor", "!"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq1", ":=", 
     RowBox[{"Eq1I", "/.", 
      RowBox[{
       RowBox[{"a", "[", "\[Tau]", "]"}], "\[RuleDelayed]", "a"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq2", ":=", 
     RowBox[{"Eq2I", "/.", 
      RowBox[{
       RowBox[{"a", "[", "\[Tau]", "]"}], "\[RuleDelayed]", "a"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**", "**", "**", "**", "**", "**", "IC"}], " ", "read", 
     " ", "fromt", " ", "the", " ", "file"}], "***)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**"}], "******)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Class", " ", "file", " ", 
     RowBox[{"columns", ":", " ", 
      RowBox[{"#", " ", "1"}], ":", 
      RowBox[{"k", " ", 
       RowBox[{"(", 
        RowBox[{"h", "/", "Mpc"}], ")"}], " ", "2"}], ":", 
      RowBox[{"d_kess", "_pi", " ", "3"}], ":", 
      RowBox[{"t_kess", "_zeta", " ", "4"}], ":", 
      RowBox[{"delta_fld", " ", "5"}], ":", 
      RowBox[{"theta_fld", " ", "6"}], ":", 
      RowBox[{"psi", " ", "7"}], ":", 
      RowBox[{"delta_cdm", " ", "8"}], ":", 
      RowBox[{"H_conf", "/", "H0"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./Class_files/Class_kess_cs_e3_z100_newt_Gev.dat\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Data\>\"", ",", 
         RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Making", " ", "output", " ", "file", " ", "foe", " ", "Gev", " ", 
     RowBox[{"field", "!"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"As", "=", 
     RowBox[{"2.215", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"h", "=", "0.67556"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kp", "=", 
     RowBox[{"0.05", "/", "h"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ns", "=", "0.9619"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"cs2", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Addr", "=", "\"\<2018.05.25.14.01.04\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "IMPORTS", "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataGevphiz100", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_000_phi.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"dataGevphiprimez100", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_000_phi_prime.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"datazetaGev100", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_000_zeta.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"datapiGev100", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_000_pi_k.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"datapiGev10", "=", "\[IndentingNewLine]", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_002_pi_k.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"datazetaGev10", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_002_zeta.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"deltaGev100", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_000_delta_kess.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";", 
    " ", 
    RowBox[{"(*", 
     RowBox[{"kessence", " ", "\[Delta]"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"deltaGev10", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "\"\<./NewVariable_Gevolution/\>\"", "<>", " ", "Addr", "<>", 
          "\"\</kess_pk_cs_e3_002_delta_kess.dat\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ",", "___"}], "}"}]}], "]"}]}], ";", 
    " ", 
    RowBox[{"(*", 
     RowBox[{"kessence", " ", "\[Delta]"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"z", "=", "10"}], "*)"}], "\n", 
    RowBox[{"(*", 
     RowBox[{"dataGevphiprimez10", "=", 
      RowBox[{"Import", "[", 
       RowBox[{
       "\"\<./NewVariable_Gevolution/output_1_128/kess_pk_cs_e3_004_phi_prime_\
z10.dat\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Data\>\"", ",", 
          RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"dataGevphiz10", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
        "\"\<./NewVariable_Gevolution/output_1_128/kess_pk_cs_e3_004_phi_z10.\
dat\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", 
           RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
   3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
   3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
   3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
   3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
   3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
   3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
   3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
   3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
   3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
   3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
   3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
   3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
   3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
   3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
   3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
   3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
   3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
   3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
   3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
   3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
   3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
   3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
   3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
   3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
   3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
   3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
   3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
   3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
   3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
   3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
   3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
   3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
   3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
   3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
   3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
   3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
   3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
   3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
   3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
   3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
   3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
   3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
   3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
   3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
   3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
   3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
   3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
   3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
   3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
   3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
   3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
   3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
   3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
   3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
   3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
   3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
   3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
   3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
   3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
   3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
   3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
   3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
   3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
   3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
   3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
   3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
   3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
   3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
   3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
   3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
   3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
   3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
   3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
   3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
   3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
   3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
   3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
   3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
   3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
   3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
   3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
   3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
   3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
   3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
   3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
   3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
   3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
   3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
   3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
   3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
   3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
   3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
   3.7352971834201117`*^9, 3.7352972215902157`*^9}, {3.73598066087808*^9, 
   3.735980683558736*^9}, {3.735982701409083*^9, 3.735982722979671*^9}, {
   3.7359898364984417`*^9, 3.735989860821068*^9}, {3.7359942581647882`*^9, 
   3.735994270382619*^9}, 3.735996823468211*^9, {3.735997134764554*^9, 
   3.735997142297779*^9}, {3.7359974920564938`*^9, 3.7359975233592253`*^9}, 
   3.735999449903493*^9, 3.736000140681826*^9, 3.7360001713080387`*^9, 
   3.736000358609771*^9, 3.7360005010609903`*^9, 3.7360008608424187`*^9, {
   3.736001474891013*^9, 3.736001478396699*^9}, 3.7360016791081457`*^9, 
   3.736002175438101*^9, 3.736002799977482*^9, 3.7360030830868673`*^9, {
   3.736008605369732*^9, 3.7360086058368387`*^9}, 3.736008828097674*^9, 
   3.7360088778473463`*^9, 3.7360090870899982`*^9, {3.736009190973228*^9, 
   3.736009236934987*^9}, 3.73600939643753*^9, 3.736009697086809*^9, 
   3.73601007884759*^9, {3.736056618942149*^9, 3.736056642204022*^9}, 
   3.736056895170587*^9, {3.736057197810547*^9, 3.736057200872541*^9}, 
   3.73605746477444*^9, {3.736059369771353*^9, 3.736059382100472*^9}, {
   3.736059524778494*^9, 3.7360595369040213`*^9}, 3.7360597520004063`*^9, {
   3.7360612447349043`*^9, 3.73606127877092*^9}, {3.736061322041613*^9, 
   3.736061352083633*^9}, {3.736067909257421*^9, 3.73606795926725*^9}, {
   3.7361643573553762`*^9, 3.736164367731308*^9}, {3.736238489123784*^9, 
   3.736238497054693*^9}, 
   3.736240157543189*^9},ExpressionUUID->"b9555473-15b0-405e-bad4-\
d386c6f55d0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GevFieldz100", "=", 
    SqrtBox[
     FractionBox[
      RowBox[{"datapiGev100", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], 
      RowBox[{"As", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"datapiGev100", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
        RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gevzetaz100", "=", 
    SqrtBox[
     FractionBox[
      RowBox[{"datazetaGev100", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], 
      RowBox[{"As", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"datazetaGev100", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
        RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gevphiprimez100", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"dataGevphiprimez100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], 
     RowBox[{"As", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"dataGevphiprimez100", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
       RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gevphiz100", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"dataGevphiz100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], 
     RowBox[{"As", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"dataGevphiz100", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
       RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GevDeltaz100", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"deltaGev100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], 
     RowBox[{"As", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"deltaGev100", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
       RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GevDeltaz10", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"deltaGev10", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], 
     RowBox[{"As", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"deltaGev10", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
       RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a0", "=", 
   RowBox[{"1.", "/", 
    RowBox[{"(", 
     RowBox[{"1.", "+", "99.597220"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1", "=", 
   RowBox[{"1.", "/", 
    RowBox[{"(", 
     RowBox[{"1.", "+", "9.951253"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]a", "=", "0.0001"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Sampling", " ", "to", " ", "solve", " ", "ODE"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Agrex", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"aa", ",", "1", ",", 
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{"a1", "-", "a0"}], "\[CapitalDelta]a"], ")"}], "]"}], 
          "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"num", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", 
         RowBox[{"datapiGev100", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dimensions", "[", "Agrex", "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"k", " ", ",", " ", "a", " ", ",", " ", 
    RowBox[{"pi", "[", "a", "]"}], ",", " ", 
    RowBox[{"zeta", "[", "a", "]"}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "For", " ", "each", " ", "k", " ", "we", " ", "have", " ", "a", " ", "*", 
    " ", "3", " ", "where", " ", "a", " ", "is", " ", "the", " ", "number", 
    " ", "of", " ", "a", " ", "sampling", " ", "and", " ", "3", " ", "is", 
    " ", "the", " ", "number", " ", "of", " ", 
    RowBox[{"columns", ".", " ", "a"}], " ", "pi", " ", "and", " ", 
    RowBox[{"pi", "'"}], " ", "for"}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Agrex", "[", 
     RowBox[{"[", "4", "]"}], "]"}], " ", "//", "MatrixForm"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"phiprimez10", "=", 
     SqrtBox[
      FractionBox[
       RowBox[{"dataGevphiprimez10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], 
       RowBox[{"As", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"dataGevphiprimez10", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
         RowBox[{"ns", "-", "1"}]]}]]]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Gevphiz10", "=", 
     SqrtBox[
      FractionBox[
       RowBox[{"dataGevphiz10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], 
       RowBox[{"As", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"dataGevphiz10", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
         RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GevFieldz10", "=", 
    SqrtBox[
     FractionBox[
      RowBox[{"datapiGev10", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], 
      RowBox[{"As", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"datapiGev10", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
        RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Gevpivz100", "=", 
     SqrtBox[
      FractionBox[
       RowBox[{"datapivGev100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], 
       RowBox[{"As", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"datapivGev100", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
         RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gevzetaz10", "=", 
    SqrtBox[
     FractionBox[
      RowBox[{"datazetaGev10", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], 
      RowBox[{"As", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"datazetaGev10", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "kp"], ")"}], 
        RowBox[{"ns", "-", "1"}]]}]]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"**", 
    RowBox[{
    "*", "For", " ", "each", " ", "k", " ", "in", " ", "IC", " ", "file", " ",
      "we", " ", "need", " ", "to", " ", "solve", " ", "th", " ", "e", " ", 
     "ODE", " ", 
     RowBox[{"numerically", "!"}]}]}], "***************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kmax", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", 
     RowBox[{"datapiGev100", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amaxComun", "=", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"a1", "-", "a0"}], "\[CapitalDelta]a"], ")"}], "]"}], "+", 
    "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"GevPowerDataz100", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"datapiGev100", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"GevFieldz100", "[", 
        RowBox[{"[", "l", "]"}], "]"}], ",", 
       RowBox[{"Gevzetaz100", "[", 
        RowBox[{"[", "l", "]"}], "]"}], ",", 
       RowBox[{"GevDeltaz100", "[", 
        RowBox[{"[", "l", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "GevFieldz100", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GevPowerDataz10", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"datapiGev10", "[", 
        RowBox[{"[", 
         RowBox[{"l", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"GevFieldz10", "[", 
        RowBox[{"[", "l", "]"}], "]"}], ",", 
       RowBox[{"Gevzetaz10", "[", 
        RowBox[{"[", "l", "]"}], "]"}], ",", 
       RowBox[{"GevDeltaz10", "[", 
        RowBox[{"[", "l", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "GevFieldz10", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
   3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
   3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
   3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
   3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
   3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
   3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
   3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
   3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
   3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
   3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
   3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
   3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
   3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
   3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
   3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
   3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
   3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
   3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
   3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
   3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
   3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
   3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
   3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
   3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
   3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
   3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
   3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
   3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
   3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
   3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
   3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
   3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
   3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
   3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
   3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
   3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
   3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
   3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
   3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
   3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
   3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
   3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
   3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
   3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
   3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
   3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
   3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
   3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
   3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
   3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
   3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
   3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
   3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
   3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
   3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
   3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
   3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
   3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
   3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
   3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
   3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
   3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
   3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
   3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
   3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
   3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
   3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
   3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
   3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
   3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
   3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
   3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
   3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
   3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
   3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
   3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
   3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
   3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
   3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
   3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
   3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
   3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
   3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
   3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
   3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
   3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
   3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
   3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
   3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
   3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
   3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
   3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
   3.7352971834201117`*^9, 3.7352972843090677`*^9}, {3.7352975930354443`*^9, 
   3.7352976107031527`*^9}, 3.735297674321453*^9, {3.735581017360442*^9, 
   3.735581020889655*^9}, {3.735967998102436*^9, 3.735968037212219*^9}, {
   3.735968081185093*^9, 3.735968118852296*^9}, {3.735968179300707*^9, 
   3.7359682115095053`*^9}, {3.735968340479259*^9, 3.735968340861494*^9}, {
   3.73598196192236*^9, 3.735981962424506*^9}, {3.735994384669798*^9, 
   3.7359943853145313`*^9}, {3.736000865709341*^9, 3.736000865840493*^9}, {
   3.736001322126192*^9, 3.736001334205241*^9}, 3.7360017335702763`*^9, {
   3.7360031306372766`*^9, 3.73600313220621*^9}, {3.7360092788281116`*^9, 
   3.736009279824356*^9}, {3.73606781776362*^9, 3.736067820709976*^9}, {
   3.736067855468663*^9, 3.736067858520153*^9}, {3.736068336877133*^9, 
   3.736068338931394*^9}, {3.736068492861361*^9, 3.73606852473533*^9}, {
   3.73606860110399*^9, 3.7360686055656548`*^9}, 3.736068728798594*^9, 
   3.73606895475099*^9, {3.736165654943193*^9, 3.7361656854880133`*^9}, {
   3.736238623353071*^9, 3.736238654265403*^9}, {3.7362387066420517`*^9, 
   3.736238752637291*^9}, {3.7362394617151423`*^9, 3.736239479508585*^9}, {
   3.7362399785502234`*^9, 3.736240046903503*^9}, 3.736240098736854*^9, {
   3.736240137474538*^9, 3.7362401381813374`*^9}, 3.736240253133939*^9, {
   3.736240332957492*^9, 3.736240333090323*^9}, {3.736241038837164*^9, 
   3.736241039020636*^9}, {3.736241214053939*^9, 
   3.73624122245685*^9}},ExpressionUUID->"cd658157-41ad-4b89-b57f-\
6bcaa6d85197"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"kk", "=", "1"}], ",", 
    RowBox[{"kk", "<", 
     RowBox[{"kmax", "+", "1"}]}], ",", 
    RowBox[{"kk", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "k", " ", "is", " ", "wavenumber", " ", "in", " ", "the", " ", "eq", 
      "\[IndentingNewLine]", "The", " ", "IC", " ", "is", " ", "set", " ", 
      "for", " ", "each", " ", "wavenumber", " ", 
      RowBox[{"accordingly", "!"}], "\[IndentingNewLine]", 
      RowBox[{"Also", " ", "\\", "Psi"}], " ", "is", " ", "set", " ", "for", 
      " ", "each", " ", "k", " ", "accordingly", " ", "in", " ", "the", " ", 
      "loop", " ", "which", " ", "is", " ", "assumed", " ", "to", " ", "be", 
      " ", "constant", " ", "in", " ", "matter", " ", "dominated", " ", 
      RowBox[{"universe", "!"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"kwave", "=", 
      RowBox[{
       RowBox[{"GevPowerDataz100", "[", 
        RowBox[{"[", 
         RowBox[{"kk", ",", "1"}], "]"}], "]"}], "*", "h"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "We", " ", "multiply", " ", "by", " ", "h", " ", "since", " ", "the", 
        " ", "unit", " ", "of", " ", "k", " ", "is", " ", 
        RowBox[{"1", "/", "Mpc"}], " ", "not", " ", 
        RowBox[{"h", "/", 
         RowBox[{"Mpc", "!"}]}], " ", "while", " ", "in", " ", "the", " ", 
        "file", " ", "is", " ", "k"}], "=", 
       RowBox[{"[", 
        RowBox[{"h", "/", "Mpc"}], "]"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"piC", "'"}], "[", "a0", "]"}], "\[Equal]", 
       RowBox[{
        FractionBox[
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"kk", ",", "3"}], "]"}], "]"}], 
         RowBox[{
          RowBox[{"Hubb", "[", "a0", "]"}], "a0"}]], " ", "is", " ", "IC", 
        " ", "for", " ", 
        FractionBox["d\[Pi]", "da"]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}], "=", 
        RowBox[{"Gevphiz100", "[", 
         RowBox[{"[", "kk", "]"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[CapitalPhi]", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], "=", 
        RowBox[{
         RowBox[{"Gevphiprimez100", "[", 
          RowBox[{"[", "kk", "]"}], "]"}], 
         RowBox[{"Hubb", "[", "a0", "]"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalPsi]", "[", "\[Tau]", "]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[CapitalPhi]", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "It", " ", "is", " ", "multiplied", " ", "to", " ", "Hubble", " ", 
       "since", " ", "it", " ", "is", " ", "function", " ", "of", " ", 
       "\[Tau]", " ", "while", " ", "after", " ", "changing", " ", "the", " ",
        "variable", " ", "it", " ", "gets", " ", "H", " ", "factor"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "\[CapitalPhi]prime", " ", "must", " ", "be", " ", "provided", " ", 
       "in", " ", "new", " ", "variable", " ", 
       RowBox[{"a", "[", "tau", "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[CapitalPhi]prime", "=", 
        RowBox[{
         RowBox[{"Gevphiprimez21", "[", 
          RowBox[{"[", "kk", "]"}], "]"}], 
         RowBox[{"Hubb", "[", "a0", "]"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Sol", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Eq1", "\[Equal]", "0"}], ",", 
          RowBox[{"Eq2", "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"piC", "[", "a0", "]"}], "\[Equal]", 
           FractionBox[
            RowBox[{"GevPowerDataz100", "[", 
             RowBox[{"[", 
              RowBox[{"kk", ",", "2"}], "]"}], "]"}], 
            RowBox[{"Hubb", "[", "a0", "]"}]]}], ",", 
          RowBox[{
           RowBox[{"\[Zeta]", "[", "a0", "]"}], "\[Equal]", 
           RowBox[{"GevPowerDataz100", "[", 
            RowBox[{"[", 
             RowBox[{"kk", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"piC", ",", "\[Zeta]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "a0", ",", "a1"}], "}"}]}], "]"}]}], ";", "  ", 
     RowBox[{"(*", 
      RowBox[{
      "The", " ", "pi", " ", "field", " ", "in", " ", "Gevolution", " ", "is",
        " ", "divided", " ", "by", " ", "H", " ", "since", " ", "in", " ", 
       "the", " ", "output", " ", "it", " ", "is", " ", "multiplied", " ", 
       RowBox[{"to", "!"}]}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{
      "Note", " ", "that", " ", "for", " ", "the", " ", "initial", " ", 
       "value", " ", "of", " ", 
       RowBox[{
        RowBox[{"\[Pi]", "'"}], "[", "a0", "]"}], " ", "it", " ", "is", " ", 
       "not", " ", "just", 
       FractionBox[
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"kk", ",", "3"}], "]"}], "]"}], 
        RowBox[{
         RowBox[{"Hubb", "[", "a0", "]"}], "a0"}]], " ", "since", " ", "now", 
       " ", "it", " ", "is", " ", "the", " ", "function", " ", "of", " ", 
       "\"\<a\>\"", " ", "which", " ", "gets", " ", "a", " ", "new", " ", 
       "coefficient", " ", "by", " ", "changing", " ", "the", " ", "variable",
        " ", "but", " ", "not", " ", "for", " ", "\[Zeta]", " ", "which", " ",
        "is", " ", "dimensionless"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Agrex", "[", 
        RowBox[{"[", "kk", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
      RowBox[{"Table", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "a0", ",", "a1", ",", "\[CapitalDelta]a"}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Hubb", "[", "a", "]"}], 
        RowBox[{"piC", "[", "a", "]"}], " ", "is", " ", "dimensionless", " ", 
        "field"}], ",", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"piC", "'"}], "[", "a", "]"}], 
        RowBox[{"Hubb", "[", "a", "]"}], "a", " ", "is", " ", 
        FractionBox["d\[Pi]", "d\[Tau]"], " ", "according", " ", "to", " ", 
        "chain", " ", 
        RowBox[{"rule", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Agrex", "[", 
        RowBox[{"[", "kk", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Hubb", "[", "a", "]"}], 
            RowBox[{"piC", "[", "a", "]"}]}], "/.", "Sol"}], ",", " ", 
          RowBox[{
           RowBox[{"\[Zeta]", " ", "[", "a", "]"}], "/.", "Sol"}]}], " ", 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "a0", ",", "a1", ",", "\[CapitalDelta]a"}], 
         "}"}]}], "]"}]}], ";"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Hubb", "[", "a", "]"}], 
     RowBox[{"piC", "[", "a", "]"}], " ", "is", " ", "a", " ", 
     "dimensionless", " ", "variable", " ", "and", " ", 
     RowBox[{"\[Zeta]", " ", "[", "a", "]"}], 
     RowBox[{"Hubb", "[", "a", "]"}], "a", " ", "is", " ", "to", " ", 
     "change", " ", "in", " ", "temrs", " ", "of", " ", "conformal", " ", 
     "time"}], "*)"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Agrex", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "7"}], "}"}], ",", "2"}], "]"}], "]"}], "//", 
     "MatrixForm"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"To", " ", "check", " ", 
     RowBox[{"consistency", "!"}]}], "*)"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "K", " ", "info", " ", "is", " ", "in", " ", "the", " ", "loaded", " ", 
     "file"}], ",", " ", 
    RowBox[{
    "and", " ", "for", " ", "each", " ", "k", " ", "we", " ", "have", " ", 
     "the", " ", "solution", " ", "in", " ", "time", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"pi", ",", " ", 
        RowBox[{"pi", "'"}]}], ")"}], "!"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[CapitalPsi]data", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "is", " ", "k", " ", 
    RowBox[{"lists", "!"}], " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Agrex", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "is", " ", "pi", " ", "soluition", 
    " ", "for", " ", "constant", " ", 
    RowBox[{"time", "!"}]}], "*)"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
   3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
   3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
   3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
   3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
   3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
   3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
   3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
   3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
   3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
   3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
   3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
   3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
   3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
   3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
   3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
   3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
   3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
   3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
   3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
   3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
   3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
   3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
   3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
   3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
   3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
   3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
   3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
   3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
   3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
   3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
   3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
   3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
   3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
   3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
   3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
   3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
   3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
   3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
   3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
   3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
   3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
   3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
   3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
   3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
   3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
   3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
   3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
   3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
   3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
   3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
   3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
   3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
   3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
   3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
   3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
   3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
   3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
   3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
   3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
   3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
   3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
   3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
   3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
   3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
   3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
   3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
   3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
   3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
   3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
   3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
   3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
   3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
   3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
   3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
   3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
   3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
   3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
   3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
   3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
   3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
   3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
   3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
   3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
   3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
   3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
   3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
   3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
   3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
   3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
   3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
   3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
   3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
   3.7352971834201117`*^9, 3.7352972843090677`*^9}, {3.7352975930354443`*^9, 
   3.7352976107031527`*^9}, 3.735297674321453*^9, {3.735581017360442*^9, 
   3.735581020889655*^9}, {3.735967998102436*^9, 3.735968037212219*^9}, {
   3.735968081185093*^9, 3.735968118852296*^9}, {3.735968179300707*^9, 
   3.7359682115095053`*^9}, {3.735968340479259*^9, 3.735968340861494*^9}, {
   3.73598196192236*^9, 3.735981962424506*^9}, {3.735994384669798*^9, 
   3.7359943853145313`*^9}, {3.736000865709341*^9, 3.736000865840493*^9}, {
   3.736001322126192*^9, 3.736001334205241*^9}, 3.7360017335702763`*^9, {
   3.7360031306372766`*^9, 3.73600313220621*^9}, {3.7360092788281116`*^9, 
   3.736009279824356*^9}, {3.73606781776362*^9, 3.736067820709976*^9}, {
   3.736067855468663*^9, 3.736067858520153*^9}, {3.736068336877133*^9, 
   3.736068338931394*^9}, {3.736068492861361*^9, 3.73606852473533*^9}, {
   3.73606860110399*^9, 3.7360686055656548`*^9}, 3.736068728798594*^9, 
   3.73606895475099*^9, {3.736165654943193*^9, 3.7361656854880133`*^9}, {
   3.736238623353071*^9, 3.736238654265403*^9}, {3.7362387066420517`*^9, 
   3.736238752637291*^9}, {3.7362394617151423`*^9, 3.736239479508585*^9}, {
   3.7362399785502234`*^9, 3.736240046903503*^9}, {3.736240098736854*^9, 
   3.736240125925062*^9}, {3.736240189501287*^9, 3.736240246511504*^9}, {
   3.736240289100821*^9, 
   3.73624032661154*^9}},ExpressionUUID->"6eb28401-a9b3-4a65-ae60-\
b9c66c052b0b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"1", "+", "w"}], 
     SuperscriptBox["cs", "2"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], "  ", 
        SuperscriptBox["cs", "2"], 
        RowBox[{"Hubb", "[", "a", "]"}], 
        RowBox[{"piC", "[", "a", "]"}]}], "/.", 
       RowBox[{"Sol", " ", "+", 
        RowBox[{"\[Zeta]", " ", "[", "a", "]"}]}]}], "/.", "Sol"}], ")"}]}]}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.736240345044958*^9, 
  3.736240353773568*^9}},ExpressionUUID->"7ffdf725-31ac-4f94-a146-\
8a526b6f9ef2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MatSolz100", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GevPowerDataz100", "[", 
        RowBox[{"[", 
         RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Agrex", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Agrex", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"1", "+", "w"}], 
          SuperscriptBox["cs", "2"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["cs", "2"], 
            RowBox[{
             RowBox[{
              RowBox[{"Agrex", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", 
           RowBox[{
            RowBox[{
             RowBox[{"Agrex", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "3"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "  ", ")"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "kmax"}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Last", " ", "column", " ", "is", " ", "delta", " ", "computed"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"MatSolz10", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GevPowerDataz10", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Agrex", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"amaxComun", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Agrex", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"amaxComun", ",", "3"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "+", "w"}], 
           SuperscriptBox["cs", "2"]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["cs", "2"], 
             RowBox[{
              RowBox[{
               RowBox[{"Agrex", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"amaxComun", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"Agrex", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"amaxComun", ",", "3"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", ")"}]}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"dataz10", "=", "\[IndentingNewLine]", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./Class_files/Class_kess_cs_e3_z10_newt_Gev.dat\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"{", "All", "}"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Error\[Pi]100", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatSolz100", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatSolz100", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "2"}], "]"}], "]"}], "-", 
            RowBox[{"GevPowerDataz100", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "2"}], "]"}], "]"}]}], ")"}], "]"}], 
         RowBox[{"GevPowerDataz100", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Error\[Zeta]100", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatSolz100", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatSolz100", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "3"}], "]"}], "]"}], "-", 
            RowBox[{"GevPowerDataz100", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "3"}], "]"}], "]"}]}], ")"}], "]"}], 
         RowBox[{"GevPowerDataz100", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "3"}], "]"}], "]"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "2", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Error\[Zeta]10", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatSolz10", "[", 
         RowBox[{"[", 
          RowBox[{"kl", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatSolz10", "[", 
             RowBox[{"[", 
              RowBox[{"kl", ",", "3"}], "]"}], "]"}], "-", 
            RowBox[{"GevPowerDataz10", "[", 
             RowBox[{"[", 
              RowBox[{"kl", ",", "3"}], "]"}], "]"}]}], ")"}], "]"}], 
         RowBox[{"GevPowerDataz10", "[", 
          RowBox[{"[", 
           RowBox[{"kl", ",", "3"}], "]"}], "]"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"kl", ",", "2", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Error\[Pi]10", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatSolz10", "[", 
         RowBox[{"[", 
          RowBox[{"km", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatSolz10", "[", 
             RowBox[{"[", 
              RowBox[{"km", ",", "2"}], "]"}], "]"}], "-", 
            RowBox[{"GevPowerDataz10", "[", 
             RowBox[{"[", 
              RowBox[{"km", ",", "2"}], "]"}], "]"}]}], ")"}], "]"}], 
         RowBox[{"GevPowerDataz10", "[", 
          RowBox[{"[", 
           RowBox[{"km", ",", "2"}], "]"}], "]"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"km", ",", "1", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Error\[Delta]100", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatSolz100", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"MatSolz100", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "4"}], "]"}], "]"}], "]"}], "-", 
            RowBox[{"GevPowerDataz100", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "4"}], "]"}], "]"}]}], ")"}], "]"}], 
         RowBox[{"GevPowerDataz100", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "4"}], "]"}], "]"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Error\[Delta]10", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MatSolz10", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"MatSolz10", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "4"}], "]"}], "]"}], "]"}], "-", 
            RowBox[{"GevPowerDataz10", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "4"}], "]"}], "]"}]}], ")"}], "]"}], 
         RowBox[{"GevPowerDataz10", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "4"}], "]"}], "]"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "kmax"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
   3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
   3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
   3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
   3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
   3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
   3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
   3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
   3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
   3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
   3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
   3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
   3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
   3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
   3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
   3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
   3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
   3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
   3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
   3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
   3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
   3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
   3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
   3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
   3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
   3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
   3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
   3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
   3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
   3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
   3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
   3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
   3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
   3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
   3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
   3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
   3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
   3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
   3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
   3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
   3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
   3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
   3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
   3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
   3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
   3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
   3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
   3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
   3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
   3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
   3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
   3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
   3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
   3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
   3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
   3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
   3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
   3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
   3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
   3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
   3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
   3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
   3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
   3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
   3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
   3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
   3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
   3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
   3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
   3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
   3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
   3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
   3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
   3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
   3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
   3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
   3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
   3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
   3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
   3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
   3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
   3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
   3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
   3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
   3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
   3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
   3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
   3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
   3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
   3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
   3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
   3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
   3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
   3.7352971834201117`*^9, 3.7352972843090677`*^9}, {3.7352975930354443`*^9, 
   3.7352976107031527`*^9}, 3.735297674321453*^9, {3.735581017360442*^9, 
   3.735581020889655*^9}, {3.735967998102436*^9, 3.735968037212219*^9}, {
   3.735968081185093*^9, 3.735968118852296*^9}, {3.735968179300707*^9, 
   3.7359682115095053`*^9}, {3.735968340479259*^9, 3.735968340861494*^9}, {
   3.73598196192236*^9, 3.735981962424506*^9}, {3.735994384669798*^9, 
   3.7359943853145313`*^9}, {3.736000865709341*^9, 3.736000865840493*^9}, {
   3.736001322126192*^9, 3.736001334205241*^9}, 3.7360017335702763`*^9, {
   3.7360031306372766`*^9, 3.73600313220621*^9}, {3.7360092788281116`*^9, 
   3.736009279824356*^9}, {3.73606781776362*^9, 3.736067820709976*^9}, {
   3.736067855468663*^9, 3.736067858520153*^9}, {3.736068336877133*^9, 
   3.736068338931394*^9}, {3.736068492861361*^9, 3.73606852473533*^9}, {
   3.73606860110399*^9, 3.7360686055656548`*^9}, 3.736068728798594*^9, 
   3.73606895475099*^9, {3.736165654943193*^9, 3.7361656854880133`*^9}, {
   3.7361657282098494`*^9, 3.736165731935504*^9}, {3.7362404052286987`*^9, 
   3.736240496957096*^9}, {3.736240538930902*^9, 3.736240593066029*^9}, {
   3.7362406913961153`*^9, 3.736241028034597*^9}, {3.736241069102622*^9, 
   3.73624107222836*^9}, {3.736241422233027*^9, 3.736241461310398*^9}, {
   3.736241623246777*^9, 3.7362416500802402`*^9}, {3.736653823628138*^9, 
   3.736653832161874*^9}},ExpressionUUID->"70dadc0d-51fe-4df1-8944-\
6c354f466484"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"p\[Pi]100", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"MatSolz100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Solved here \[CapitalEta]\[Pi]: z=100\>\"", "}"}]}],
        ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "11"}]], ",", 
            SuperscriptBox["10", "0"]}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p\[Pi]10", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"MatSolz10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Solved here \[CapitalEta]\[Pi]: z=10\>\"", "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "14"}]], ",", 
            SuperscriptBox["10", "0"]}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p\[Zeta]100", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"MatSolz100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Solved here \[Zeta]: z=100\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "12"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]]}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p\[Zeta]10", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"MatSolz10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Solved here \[Zeta]: z=10\>\"", "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "12"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "6"}]]}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"MatSolz100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Solved here \[Pi]: z=100\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "4"}]], ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "6"}]], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[Delta]kess", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p\[Delta]Gev100", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"GevPowerDataz100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Gev \[Delta]: z=100\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Delta]Gev10", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"GevPowerDataz10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Gev \[Delta]: z=10\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Delta]100", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"MatSolz100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Solved here \[Delta]: z=100\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "11"}]], ",", 
            SuperscriptBox["10", "0"]}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p\[Delta]10", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"MatSolz10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Solved here \[Delta]: z=10\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "11"}]], ",", 
            SuperscriptBox["10", "0"]}], "}"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"\[Delta]kess", " ", "end"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"p\[Pi]Gev100", "=", 
      RowBox[{"ListLogLogPlot", "[", 
       RowBox[{
        RowBox[{"GevPowerDataz100", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Line", ",", 
           RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Gev \[CapitalEta]\[Pi]: z=100\>\"", "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p\[Pi]Gev10", "=", 
      RowBox[{"ListLogLogPlot", "[", 
       RowBox[{
        RowBox[{"GevPowerDataz10", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Maroon", ",", "Line", ",", 
           RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Gev \[CapitalEta]\[Pi]: z=10\>\"", "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p\[Zeta]Gev100", "=", 
      RowBox[{"ListLogLogPlot", "[", 
       RowBox[{
        RowBox[{"GevPowerDataz100", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Brown", ",", "Line", ",", 
           RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Gev \[Zeta]: z=100\>\"", "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p\[Zeta]Gev10", "=", 
      RowBox[{"ListLogLogPlot", "[", 
       RowBox[{
        RowBox[{"GevPowerDataz10", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Line", ",", 
           RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Gev \[Zeta]: z=10\>\"", "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Errors", ":"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"perror\[Zeta]100", "=", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{
       RowBox[{"Error\[Zeta]100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\< \[Zeta]  rel error: z=100\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"perror\[Pi]100", "=", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{
       RowBox[{"Error\[Pi]100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\< \[CapitalEta]\[Pi] rel error: z=100\>\"", "}"}]}], 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"perror\[Zeta]10", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"Error\[Zeta]10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\< \!\(\*FractionBox[\(\[Zeta] \((solved\\\ here)\) - \[Zeta] \
\((Gev\\\ )\)\), \(\[Zeta] \((Gev)\)\)]\)  z=10\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"perror\[Pi]10", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"Error\[Pi]10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\< \!\(\*FractionBox[\(\[CapitalEta]\[Pi] \((solved\\\ \
here)\) - \[CapitalEta]\[Pi] \((Gev\\\ )\)\), \(\[CapitalEta]\[Pi] \
\((Gev)\)\)]\)  z=10\>\"", "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"perror\[Delta]100", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"Error\[Delta]100", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\< \!\(\*FractionBox[\(\[Delta]kess \((solved\\\ here)\) - \
\[Delta]kess \((Gev\\\ )\)\), \(\[Delta]kess \((Gev)\)\)]\)  z=10\>\"", 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"perror\[Delta]10", "=", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{
       RowBox[{"Error\[Delta]10", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Line", ",", 
          RowBox[{"PointSize", "[", "0.004", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\< \!\(\*FractionBox[\(\[Delta]kess \((solved\\\ here)\) - \
\[Delta]kess \((Gev\\\ )\)\), \(\[Delta]kess \((Gev)\)\)]\)  z=10\>\"", 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"z", "=", "10"}], ",", " ", 
     RowBox[{"Gev", " ", "and", " ", "solved", " ", "here"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
      "p\[Pi]10", ",", "p\[Pi]Gev10", ",", "p\[Zeta]10", ",", 
       "p\[Zeta]Gev10"}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Relative", " ", "error", " ", "between", " ", "here", " ", "and", " ",
         "Gevolution"}], ",", " ", 
       RowBox[{"z", "=", "10"}], ",", " ", "z"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "perror\[Zeta]10", "]"}], "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "perror\[Pi]10", "]"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"z", "=", "100"}], ",", " ", 
       RowBox[{"Gev", " ", "and", " ", "solved", " ", "here"}]}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
      "p\[Pi]100", ",", "p\[Pi]Gev100", ",", "p\[Zeta]100", ",", 
       "p\[Zeta]Gev100"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Relative", " ", "error", " ", "between", " ", "here", " ", "and", " ", 
     "Gevolution"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Show", "[", 
     RowBox[{"perror\[Zeta]100", ",", "p\[Zeta]Gev100"}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"p\[Delta]Gev100", ",", "p\[Delta]100"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"p\[Delta]Gev10", ",", "p\[Delta]10"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"perror\[Delta]10", ",", "perror\[Pi]10"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.728129975744491*^9, 3.728130060892585*^9}, {
   3.7281301140875673`*^9, 3.728130145608096*^9}, {3.728130206527079*^9, 
   3.728130207415*^9}, {3.729890707858334*^9, 3.7298907854758787`*^9}, {
   3.729891039025405*^9, 3.729891082134082*^9}, {3.729891182411133*^9, 
   3.7298912647870607`*^9}, {3.729891330738892*^9, 3.7298913320499268`*^9}, {
   3.72989142881662*^9, 3.729891527984144*^9}, {3.729891658745679*^9, 
   3.7298916931200933`*^9}, {3.729891726755624*^9, 3.729891947422367*^9}, {
   3.729892000019321*^9, 3.729892042381063*^9}, {3.729892110228964*^9, 
   3.729892114935326*^9}, {3.729893149457427*^9, 3.729893186082562*^9}, {
   3.729893260653405*^9, 3.7298932975223513`*^9}, {3.7298935138304234`*^9, 
   3.7298935213676577`*^9}, {3.729893656324842*^9, 3.729893687648952*^9}, {
   3.730162300047503*^9, 3.730162302632107*^9}, {3.730162368091872*^9, 
   3.730162372209558*^9}, {3.730162494548579*^9, 3.730162665730674*^9}, {
   3.730162719231292*^9, 3.7301629414363947`*^9}, {3.73016297843618*^9, 
   3.730162982247736*^9}, {3.730163528126768*^9, 3.730163634886324*^9}, {
   3.730165315313258*^9, 3.7301653288674383`*^9}, {3.7301653674438257`*^9, 
   3.73016538548062*^9}, {3.730170932549491*^9, 3.7301709328429813`*^9}, {
   3.730173148371502*^9, 3.7301731759778767`*^9}, {3.73017321412568*^9, 
   3.730173214268216*^9}, {3.7301738738912783`*^9, 3.730173874039393*^9}, {
   3.730174073323545*^9, 3.730174115106722*^9}, {3.730174254443522*^9, 
   3.730174258338067*^9}, {3.73019104598971*^9, 3.730191069904318*^9}, {
   3.730197138344903*^9, 3.730197164947555*^9}, {3.730197195006617*^9, 
   3.730197281781495*^9}, {3.730219400145549*^9, 3.730219422331766*^9}, {
   3.730393033888452*^9, 3.73039303451821*^9}, {3.730393145840498*^9, 
   3.730393193488323*^9}, {3.7303932658134403`*^9, 3.730393411899186*^9}, {
   3.73039352755702*^9, 3.730393540448524*^9}, {3.7303936383519*^9, 
   3.730393673231289*^9}, {3.730393861262295*^9, 3.730393861476252*^9}, {
   3.730396266090228*^9, 3.730396492940754*^9}, {3.730396538714489*^9, 
   3.730396555579235*^9}, {3.730396645495721*^9, 3.7303966479641247`*^9}, {
   3.730396724101438*^9, 3.730396724300844*^9}, 3.730396792725502*^9, {
   3.730396848659148*^9, 3.730396921831004*^9}, {3.7303970243379383`*^9, 
   3.7303972408610373`*^9}, {3.7303974823024073`*^9, 3.730397501107644*^9}, {
   3.730397606887779*^9, 3.7303976461397333`*^9}, {3.730397915437921*^9, 
   3.730397922517535*^9}, {3.73039796178083*^9, 3.730397987865144*^9}, {
   3.730398044734324*^9, 3.730398047790183*^9}, {3.730398180759359*^9, 
   3.73039819008111*^9}, {3.730398247164373*^9, 3.730398283234969*^9}, {
   3.7303983657193403`*^9, 3.730398398237455*^9}, {3.7303984664023237`*^9, 
   3.7303984919738903`*^9}, {3.7304008798254642`*^9, 3.730400901577067*^9}, {
   3.730401113103922*^9, 3.730401142482893*^9}, {3.730444754677516*^9, 
   3.730444765104292*^9}, 3.730444840715287*^9, 3.7304576941480083`*^9, 
   3.7304582193166723`*^9, 3.730458503641677*^9, {3.730459894558262*^9, 
   3.730459923205181*^9}, 3.7304602073803053`*^9, {3.730460278086359*^9, 
   3.730460278290925*^9}, {3.730461621749249*^9, 3.7304616318744783`*^9}, {
   3.730462118536182*^9, 3.73046211872232*^9}, {3.73061384541437*^9, 
   3.730613892247764*^9}, 3.7306167399707823`*^9, 3.7306168792515593`*^9, {
   3.7306213073117933`*^9, 3.730621332938347*^9}, 3.730628279031945*^9, {
   3.7306476230818377`*^9, 3.73064763281236*^9}, {3.7306477534080544`*^9, 
   3.730647753672306*^9}, {3.7306482397085133`*^9, 3.730648257136468*^9}, 
   3.730652979801713*^9, {3.7306531452199697`*^9, 3.7306531455129223`*^9}, {
   3.7306532611169243`*^9, 3.730653270002511*^9}, 3.730655682864499*^9, {
   3.730655810732136*^9, 3.73065581998717*^9}, 3.730700587233718*^9, 
   3.730701437216483*^9, 3.730710796515523*^9, {3.73078486058385*^9, 
   3.730784994024601*^9}, {3.730785064792789*^9, 3.73078509369103*^9}, 
   3.7307851816837893`*^9, {3.730916048223453*^9, 3.730916058957584*^9}, {
   3.73091923224072*^9, 3.730919232936328*^9}, 3.730920872454796*^9, {
   3.730920970399912*^9, 3.730921010867503*^9}, {3.7309210528158503`*^9, 
   3.7309211419998217`*^9}, {3.730921240922337*^9, 3.730921252755796*^9}, {
   3.7309644094653053`*^9, 3.7309644234369907`*^9}, {3.7309825691374817`*^9, 
   3.7309826007744627`*^9}, {3.7309827242463503`*^9, 
   3.7309827265887747`*^9}, {3.7309839463545513`*^9, 3.730983950120565*^9}, {
   3.7309839901421022`*^9, 3.730984008196719*^9}, {3.730984081578444*^9, 
   3.73098408502488*^9}, {3.730984464996888*^9, 3.730984497307479*^9}, {
   3.7309859343686123`*^9, 3.730986020049301*^9}, 3.730986073239626*^9, 
   3.730986203291952*^9, {3.730999131250286*^9, 3.7309991317413673`*^9}, {
   3.730999889958231*^9, 3.730999910798012*^9}, {3.730999965470378*^9, 
   3.730999977091235*^9}, 3.731000828704824*^9, {3.73100125340195*^9, 
   3.731001263277934*^9}, {3.731001753352449*^9, 3.7310017691952543`*^9}, 
   3.7310020438105*^9, {3.731003162077392*^9, 3.731003166164267*^9}, {
   3.731058748945167*^9, 3.731058749978346*^9}, {3.731908867732069*^9, 
   3.731908873746275*^9}, 3.733425242812565*^9, {3.733459025090024*^9, 
   3.733459025718254*^9}, 3.733459260936414*^9, {3.7334594689332323`*^9, 
   3.733459485929047*^9}, {3.733459518813695*^9, 3.7334595638142557`*^9}, {
   3.7334598246079597`*^9, 3.7334598323260117`*^9}, {3.733460350506987*^9, 
   3.733460400757416*^9}, {3.7334604914441566`*^9, 3.73346050200683*^9}, {
   3.733460573498652*^9, 3.733460642923132*^9}, {3.733460895015026*^9, 
   3.7334608967959557`*^9}, {3.7334621847381697`*^9, 
   3.7334623683591623`*^9}, {3.7334624723128033`*^9, 3.733462472574585*^9}, {
   3.733462529163088*^9, 3.733462544061778*^9}, {3.733462574478389*^9, 
   3.733462574784504*^9}, {3.733463220471792*^9, 3.73346322710227*^9}, {
   3.733463331903788*^9, 3.733463543686695*^9}, {3.733463900777945*^9, 
   3.73346403347497*^9}, {3.733464257434574*^9, 3.733464308542966*^9}, {
   3.733464644696722*^9, 3.733464654053095*^9}, {3.7334647514835033`*^9, 
   3.733464798398638*^9}, {3.734954158555077*^9, 3.7349541635817757`*^9}, 
   3.734954198129538*^9, {3.734954254821549*^9, 3.7349545174427223`*^9}, 
   3.734956579944488*^9, 3.7349590393511972`*^9, {3.734959326263707*^9, 
   3.734959326417111*^9}, {3.7349756501016817`*^9, 3.7349756603679533`*^9}, 
   3.735006717002892*^9, 3.735008363629677*^9, {3.735008412055811*^9, 
   3.735008416548506*^9}, 3.735008493635262*^9, {3.735009127178791*^9, 
   3.735009156900999*^9}, {3.735284229697836*^9, 3.735284267165929*^9}, {
   3.735284309283888*^9, 3.735284328569583*^9}, {3.735290383604669*^9, 
   3.735290414525837*^9}, 3.735294056547772*^9, 3.7352945942631807`*^9, 
   3.735295057512083*^9, 3.735295252665023*^9, {3.735296331105893*^9, 
   3.735296342996394*^9}, {3.7352965730919523`*^9, 3.735296647883439*^9}, {
   3.7352971834201117`*^9, 3.7352972843090677`*^9}, {3.7352975930354443`*^9, 
   3.7352976107031527`*^9}, 3.735297674321453*^9, {3.735581017360442*^9, 
   3.735581020889655*^9}, {3.735967998102436*^9, 3.735968037212219*^9}, {
   3.735968081185093*^9, 3.735968118852296*^9}, {3.735968179300707*^9, 
   3.7359682115095053`*^9}, {3.735968340479259*^9, 3.735968340861494*^9}, {
   3.73598196192236*^9, 3.735981962424506*^9}, {3.735994384669798*^9, 
   3.7359943853145313`*^9}, {3.736000865709341*^9, 3.736000865840493*^9}, {
   3.736001322126192*^9, 3.736001334205241*^9}, 3.7360017335702763`*^9, {
   3.7360031306372766`*^9, 3.73600313220621*^9}, {3.7360092788281116`*^9, 
   3.736009279824356*^9}, {3.73606781776362*^9, 3.736067820709976*^9}, {
   3.736067855468663*^9, 3.736067858520153*^9}, {3.736068336877133*^9, 
   3.736068338931394*^9}, {3.736068492861361*^9, 3.73606852473533*^9}, {
   3.73606860110399*^9, 3.7360686055656548`*^9}, 3.736068728798594*^9, 
   3.73606895475099*^9, {3.736165654943193*^9, 3.7361656854880133`*^9}, {
   3.7361657282098494`*^9, 3.736165731935504*^9}, {3.7362404052286987`*^9, 
   3.736240496957096*^9}, {3.736240538930902*^9, 3.736240593066029*^9}, {
   3.7362406913961153`*^9, 3.736241028034597*^9}, {3.736241069102622*^9, 
   3.736241083054017*^9}, {3.736241309791288*^9, 3.736241386868733*^9}, {
   3.736241480809585*^9, 3.736241481149941*^9}, {3.736241663302333*^9, 
   3.736241741881012*^9}, {3.7362417876564207`*^9, 3.736241838538019*^9}, {
   3.7362480660803547`*^9, 
   3.7362480662250433`*^9}},ExpressionUUID->"245c9847-84a9-4f6a-843e-\
be105da0c1e7"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
IHcZCa9u4hYK75iCDyl+23PvkvGtM5Mbx+umoN0o8iSVg4xz2x6ibCieghcT
KiQDPSJfu2j77ewpaM1x1+erXsMyef/Gq6VNQdb0q1ulBD/c8S0uKQnEu8oF
bn6cjC8xyh7eDpsChUWV1sVWMn5Kqzr7/JMpUOxzTLIIJ+MVmWZeSV5T4GCB
73uylYynMrkOPXaeAufX2C+lbWQ85u4bFS67KUCXZvQnuMh4Sx0KM7OYAmvG
vd+n44h7ZZYfPHhyCt47PfE/7UDGw+g5nZHaU3AsYnwg5jYZp8XH3vA4MAWe
VImCtiIybv6vxvnPrimY6Ut+xzNCwuXjuR4JMKegspE3wl+EjIdWxjzTFpoC
ywOba66MEHzsaspT5Z2Cz6TmMbhFxmu4T64lkgm+dpnJKGwk47Zp0TbT85Ow
687Yv7WdZPzLT/4i9cFJuIBP9/YEkvFuLx6/tu5JMPh41quJ0Ndr3cWehIpJ
yMmpRFu7ybgc9/mGrD+TwJh8L5hfTsbx2Ujpuz8mwc9eysk1h4zf6eg4MPV5
EirTMkS23SDj+4pNPpyLn4Q+WZKxWBwZT29wuzj8dhJ+bzx25o0dGTccVjHl
CJqEkRLDNKsVMn4eyrw4PCeB9Pe11vcZgj/m02en70+Cl3i7+XgUGaes4tvP
2E+CUqrbxX9AxmMjhPcJXp2EurCY1RFCb9YqJZNkM6J+UI/UNyKfqZn2j5YT
k2Ccf/RXWC7B57ZLAW80J2GttMe+aYLYv2+iVrjKJGRb3DnvSvj3OoRutpSd
hPDge/rtWyj4+PRuYU7JSUh7dSdzMZbQY+77Q2Yik9CyNzj7PHFfLY9P7tPi
JmwdT229ATJuF6uTPMg2CQ8fRUi4fSbjTwa0w/zmJ+D6ofYPvGNkXLWuX/7O
5ATMHPzacSGDggfKwWxkxwRU9wekO02SceEdfRK/6ydAkTeSZjdB3D+ToqgN
5ROAd1lpbWyg4AmGC/+ZognI2Z0u19lDxrtWeuUf/TcBs1dY3ZfMKfjoBSG6
evIE3KQfvmlJ5Gu4ILwYEzcBPrpPb6QT+HbHz5e8fD0BO5655e1VpOB39oX4
rT6dAMptu1xhjIz/fX45+PijCWgN2SXgeIqYp+aQ+rLzBOz6tNljWIGC5/u6
331uPwGmdrKSIzspeBknn+D1ixOwX/vQy1QyBf9uXUpKPDsBnzdT6sNCKLgi
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
/M1PSJ7Z9AvkDxl2p/BKoP8ByTFHsw==
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-4.30089531996961, -12.038139117856083`}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-11.80760400778332, 2.4855728167277946`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.30089531996961, -12.038139117856083`}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-11.80760400778332, 2.4855728167277946`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Gev \[Delta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Delta]: z=100\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736241288121126*^9, {3.736241348490905*^9, 3.736241387437832*^9}, {
   3.736241468551165*^9, 3.736241481822442*^9}, {3.7362416551335573`*^9, 
   3.736241702793138*^9}, {3.736241802003656*^9, 3.736241839175735*^9}, 
   3.736248067260483*^9},ExpressionUUID->"d5427431-be86-4d3e-be9c-\
9576a0318356"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
X1hOxoUOh1VOrPoNT0YVtz5yp+D/AcvTfwQ=
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
xJOvdSVD8LLevfKBKgnf2vY+t/jrECSGcj1kqZDwrhHzv4eSh0D/pXzeXQES
1o37Yvv+1RDYfQxaCFMgYf+v7Ud2RQzBhy2DA8MbSTgiqPzu/htDsFxWKLRh
AwmfHjhjs+vSEOy/bp704QgJ9zEK92edHoK0lyP5U+uIeDfjzfYfGoKv7ruk
xU1JeCzKoMcaDcGKvwF8dBESPm44LzS7cwhCHCivdIjvI1WejUVqQ9Cs6tG6
bE7CnwYz3BvXD8G/WvbZVTtJ2FB635VQ4SEo8vKI/72dhNfdX1qSXxwEvuGA
Z+5mJJwTltgmRR0E7wwq5c8eEtbaMHo0qmcQ1KgfNXsJvGqVlcn8zYNgn6g0
1kjgjccovbH/OwihUikyUQRe6GtUW54/CL7XNx5bu4OE41fcyhzIHISxiHu0
tcR+vtH3GttfD0KMcYjz/b0kLLzOb7Xm40GQb/24q5SIdzzw5qP4W4OAvy1c
n95Mwoy+pk+mPoPgI7KmXYfQM1ftXvPfc4OwT+lUGC9RryFqWUDmiUF4srLp
pL4mCecvjnGZHxoE0ardvKMEPo/p1HH5PQS+1VjUFh0Sdi5VS7LaMQhrhk9s
SyP4tIWXxtorDYJp0/Ilu2MkvNJqRYqH5CCYrB9cU61OwoFTk2pb+Ach3OJU
kbMJCZtTtu+6uTgA7uhsq+cWEpZILlnYPTkAZiJPs13OEvotyDBz+waguLf6
nboWCd9sXCPo3DwAqUZNFHWifrLjG2pzSgfgouPKJG1FEmZRbD7qFwzAped9
xzv0SPhcS6rc9YwBEK7tXL92P+GX7YoDe18NgBI1aOjVJRLm/XVIK/DxAFAO
pJblniPhe9k3GPJBA6DmLJF12IWET9k4ORv6DIBfkN12R8LvvybOfp+7MACq
/MaFbCMS7lQ9f0z45ACcHCu/Okzok6A0eTP54AD0rGGlfTpJwuG9Msvpewfg
ykqRxAe7SfhhV9eFHO0B0Df3kIm2JeGwK9/SJFUHgNdqrzSN4Ce2aruq538E
H4WlSH5iXS7jdDusHoC2u+G8Fn5EPzB33OfmHoCWiaq/v6xIWOfng3tbZvqB
bmx+fo7AH1lRuP9Vfz/MGr6LHblCwos2W0+ZtvZD+e8/Px57kfAVXHUh5l8/
/Ch3TbpK4KVLiTMSivvBImFW1CGKhG3NskIUP/fDIjZIv0r4T6zQSvBkSj/w
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
BzxxGdD7ROj1mpd3v6hyBySGxQqGEPW1brzbpy7RAaVxg3s/c5Hx0ok9NO3F
dhj4Ai79G8n4Qk2TLGWiHTae6d+bQegnXiHYxK5uB8mC6EPxPGTMc2ds4GZB
O9zPMq2e0iXj4/QaFaW0diCeUeEPiHqeMhkz73zUDlV+ZO8xIzL21r6wQ/BW
O4hjpb1IhYwfFQofzXRrB1mR3a8NV5Pxr+J1nZds2mHbx6SNTDIZ1xfsWSlm
0A6m7/Yr7CXy426/MJ69pR14ajdjkR1k7JWhc29YpB3iDWIyIgm85g8lDUx2
G6RZlpTu2ErGYvwbiiUG2uBI0xGuaRbhd9nCk7FVbXBO/BPP5BYylulrp8gU
tYHdgJZX5z/ifUC/EyKQ2gYdQ3/5W5YIv90v+ZUe3QZmB14Y7iPi/2p+phV5
uw0qbaxiJOXIeFYM7JFzG/iW+aS4iZLxkaClbR+s28D5+NrrQyJkXKs29ipo
TxssoUiBzktkvFtjswiXahuobVU9JE/oFfynLX9CvA1SJ4/qW58h4zJa6b+O
5VbY32/iGG9FxpSdDuPD460wMOmuljlJwpmKw+2/mlqhGPk6xBP8ggMDfvn9
aIW2zbe+XCb0Wun1RK8/vRUm973e6MQhYaZr3LUXL1sBHrovW2iRcYakjU5M
cCvIx1z2PkHopcT/0yTTvRXufHp/asyUjHc4TNvJ2rXCJ/3Gw/tOkLGVYr7D
yb2tMPqkV0CZQsa3b613ktZoBSlBR22dlWS85UMd9atUK6SduuNHJvLzDzE2
PCjQChzD2kF7bTL+cTo7KnumBZq0avexLpJxrLCkr2R3C8Su8pykEX73idbu
4Spvgem80H0RE4Rf/HqeW2W1wKr2XT/qucm4cHW3v3ByC1SbRxh1u5DxGZfH
ZxQiWmC9+/apN0fIeNTLmLLragtEinAvvCKRMfkF602iUwtYJv7Ll7IgY63S
NP7EAy0gMrfw9hpRr5+/Izb56bWA6p89/oedCH9VS5cYKLSAonjXJ+c4Mr4v
FZf6ULIFPP+kao4Q+bCf7zNTW24Gc8X3SXOuZGxghTZsH2kGw2xGOnsXGQ/J
nLMbr28G31Hypt2qZDx59NjmhOJmWM0vPXDOnYwThCXeJGQ0g43F9MGdF8i4
u5R7Pzm2GTZrXNDQ20fGIopSGil3m+HRnYDJXMLPWy07piO9m8HpxObsYEI/
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
          
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-4.30089531996961, -17.552262497920054`}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-17.249736563392084`, 1.5068713773419502`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.30089531996961, -17.552262497920054`}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-17.249736563392084`, 1.5068713773419502`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Gev \[Delta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Solved here \[Delta]: z=10\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736241288121126*^9, {3.736241348490905*^9, 3.736241387437832*^9}, {
   3.736241468551165*^9, 3.736241481822442*^9}, {3.7362416551335573`*^9, 
   3.736241702793138*^9}, {3.736241802003656*^9, 3.736241839175735*^9}, 
   3.736248067617016*^9},ExpressionUUID->"c8278e26-343e-462c-9f73-\
eb58b27caddf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
iL5vA44foKXeWSTP8bIrVh/rN2CrY/NXZS09zqv9bT+VvgEehQdc5yJpcTlP
6OuCnxtwVsopJvAIDf5bt2ze92UDzLn3hNKMUOO1KxvP1d03YDczYu8MiRL/
12aoTWW7Ade+XfcbnKTB0XI9TFfMNkDlTCZKtaPBdUensNR58jo139TBo9T4
bOajskL5DTi6do9CgooWUwKjgfXRDbCJaSDu7KHB9VzRaUf4N8D6T+LDUBta
/EvLQ2mcgozHXjMRL0eJR37ye44trQP1Q9aPMiI0+KNtv7JI9zoMSPAbm89T
4LLJvl7zunW44bCh8f0YDfYJKG+7D+uwnydxTO40Db7p8U7jc/w6LPvY7Xe+
Q40zeDofHogg48WqMlCy0+Lj/eEfCj6uw7rgdZGHfbQYhTNKKTxdB41DIdrE
FhrMStvne8piHc7y2Y1WqFPhUD12j1W9dQjlWWKvbqHCeh0jIbQX1oEouIl9
yPWBFHht/sitQ/iYhFbwKyrsnTYvcZJtHZxPIsJKOxUW1EtiqSWsQ7pfGENG
DRXGisM+jKQ1oOfVK+DVpcJiU8tpAX1r8HBuSj0jgBobMUoQLzavwVfDnXD2
Wip8q7myfjxvDe69UZYoKafEUrcSpPemrMHr4TeeISFUOGhviUdF+Brwbjtb
VOyhxvDDnmnXaw1cYhQ6VHjJPGqf/U76+RrEXVh4u/WCBscs/o2OMl6Dx7bN
fdyGZJ6/mu3lobMGeSxjzOEuVPhb3bWxN8pk+2X0gagkShwaGpw6fmwNVuNY
etYXKPEejljX/xjXgOVmu0Dya0r89TO9QPH2KiT+Mv9UY0yFT1/+r0CLuApD
U7v5B25Q4rWauJnP/avwkEPKJ/kbBabvPvourHUVxF0kznb8oMT9K5dbGwpX
odLHzvlMMyW+2b42Ivt3FSjt//RlxlJis2U34xc/V6HhNuGA+Do1jn9Q+177
6ypwVw9ZF4hR4vIQhQtf3q5CRr+9FjYh4OboqD3eTquQT3dO/fo8mSfUzf+0
3FuFWvn+89K7VJh49ke0xo1VUNrjPvFTiBILB9xiildfhZYrH7JS+SjxpWsj
og9Or5Ln3RGDw8YUODyTf2qP+Cr8stdZemxDhZVVr3w0E1iF57s/jm7SUuIq
/q+UikyrkJXJrpClS46/5spmy9YKVHqQHiz5UWDtEdvTE4srUE00sWKpoMAa
p+dXjg+twPuN7T3nLHfhYLSA+/6WFXBdcGkzwRT4vUdwxM+iFci/TjqpprQL
g675068zV+AKKXHIn6wjbA1M9w+lrAC3EIfcMQ8CbpCcrlAKXIHwxlyLoSUC
ZnniXgPvV6Cz4MvVL78JuKLAMa7n5Qq0bjKN+A+Qdcc7AdHERyvgu3NvqtuS
Aj844mUdfHMFtM+dDeYEsl3Gn3Xz6gr4bMUvGp2hxK0NBpt551cgquVq9eVO
Aha8d085U3oFZK+Xv76eTompo40to4+sQFemfptoFQHn7Xw9GcC7AoGXE5M1
966BlEBS8xzzCih4OTApn6HAovYUF4u3liGcktFcaH4XrEp/zCwRl6H7hNyx
m2Tep3FLmxOcXIbmUoUU324Cfvh3VSaldRmu1uvduj+xA78azpDqK5bhw980
9s8/CfjjwYo5nLsMjd5apwQqCNjlHtFz5r9lsKjJ4Ih4R8C3XgqpPYhYhgym
UEWt/QRMRfms7P6nZVCJnzurJErA/k4P1H56LMOemJPU0dE7IKnup8P3dBkc
BPuvMU3vwIJgeX+O3TIso1y2aU8CljsokL5sRI4n0SxJypWA34a81TTWXYbL
XS+4vNJ3QWXjDmvN6WWg5tyff9uNgLX35ZhEyS2DeVb/jxWyrZct2nLz8DJk
lea5aYdsQdPYrt1FvmVQ6v9vLsxhFybKpRgqWZfhv9Lo50xFu8DGM97PSLEM
4y7a+uVFOyA677RHZX4J+HdH2ct+b4NJY96A49gS5FxwO3FZawce3lsb+dq1
BBq3fSZ+OZPx/LsI9vVLwEF76b6CGgEHavKVi5QtQUWBG8vUbQJ+1Epl+TN9
Ce4V8dnUfNgFO8VO6tgE8rqlQ8SekW3yed6k94YuQW1mXcRrih3whkzVkE9L
4EZcsEbk/LA76vczv1yCaHWniFQSAV9RZAy44LQES6vhW9toB65m70r23lmC
NosT3mOlO7CNaqseGC+B6/y9rX06OxDw4+/3AN0l2MfGYRVnugmej7LrjS8s
QcKHYIap9h1gkJ5RPqG4BLdLBSxOk/+/hffL8+vHliC2Vk6bn2Ub1H5x/CYI
LIE2kWBaEbkGzXz0ifJc5PjpJ9xklMi6oO6Q0Hm6JWCp3Ecd0LUDTM6xFEkb
i/CMtbyYqmADTBcU4mKnF6Flwki+5MIWtHQz8oQPLkKG8dfaoZIt2Le8wEJs
XwTxOOa4+cxNYLQ5R8lcvQirWLTln88WMA3wDzj/W4Raj+OTXGZbkMNWFX8q
fRFi8qOsmkp3gTG+1zUlYRFuZ2kddCTrlE3h+tfOYYtgvTf1DIf4Fhieb/ln
/mERNBU2tv5pUeLGHKM3SW8WQTHe4tqHD5uQKsJw7t3TRTjpqDhew7gDMS4h
8gy2i1BPb753iMzLve04zMh0ESQVZq8/5tqGcKOSwCmDRXhSNtT/ymITwoTy
hiLVF8G1oFc0gszrB+NjH706vQgLTVvWZV0bYFzX+rTi2CKwE4L1PHY3QCae
wYtTZBH2JCjzFx3fhNCmmI/qPIvgfSnYVXsvOR/HugsV2BZhq+5xwD+/dWhl
NNhNpFgEv/jneYKuW2CTHm29tLYAFbNHYw+5r0NaEUelytQCiNxQepMSvQkj
b5h8+kcWQCGfca8q2yYEX9gYTWhcAD8KurGsiXWQZjTvzK1YABKnqEwpH1mH
rUSKu+QvANfvQyaZxA14Mjh4evG/BaDrsCv4Sz6PUvW1nybxC0C5N8usM38b
/na63535tgDNCz4+n5s3QGdG/gZdwAIIjDS/qmEl6xyof0PnsQD9+XZf5qjJ
+RPx/3j9+QLccwuX6fBZB8od1QM37RZgXqpUb95wHWIjeJW4rMjxWTa0NR4m
6y75mgUKIzJeo7e0Tska3DBSz++9ugCnxJPe+QavgfH+e+9D1BbAuLq/+WXA
Okxk8N9WlV8AkwDc0NG+BmMOoXvNpBYg/HRPg73qBhCXjvPSH1qAQe9yeVs5
cj0W/DhnxLcAbiY3eTRuboDZlQWl84wLkPXmaXN5whrYxmokT1EvgMMZQwe+
gTX4MKke5rNGguSgsih5ss5QaJ+QebJAgh/ufQKslFvgJw0rkYMkWLp/JLtn
jawTDo+LlXaQINZkbMHr9xr4X6uMYm4gwZ1KitdRlRuQoLOedQOT4JJmh48C
5RoMb4/JeGWRIMT7Aa3jwxWYu8MjpJJMAmlLrQuVzAvQeYd3IyaOBOb1HN6Z
cWtwPH6t5kswCXi/L9FcSluFJ0pBPjv+JPDO4mr7L2wZqj7dD7ziRYKUpwkp
tWSefaI2rbL1lARlrJc9nn7agpK3L10+2ZHgmpxi+IuGVXKds3M9vEuCXKKv
WInIKmRb1BISb5GgnvatyZfTa3CC6cWJvCskaIkrtj6mvQzbG2ocQRdI8MB5
4lG87CoUvSe4nT5DgvBwV0L76XVgbAlnyZQmQfoR2B9HvQqvOdDLV0dJQBHX
1pF7ZQ0CtwrP/uEnAesHMf9UilUoJ9ZoSLKT4ERsT0qt5yJg0uNJvz0kWLX+
ScFitQqGcrcosnaI8MR7llrffxVwnh1r/ioRWt4XcAUsrYBc2PnwwikirB3M
Zd3RXYU8ap8x6iEi9LltxS7tJ+sAU5rM9+1E+GXxqr6TfgXE8tS2xiqJwB3i
8vOUxgrojITJ0ZYQwfeamk941jLMrLsnauUQQWwv0rreTuaRy1ucailEYPhs
7i6TtwAZ7dU5Gb+I8NWrO+BM9ApcayrWvxNGBB8efa6DxSsgJRmiSfOVCAuV
erfK/pJ5ejJNTvYtES7HFF1XJ+sIRwuBWOaXRDBqv9AZVrYCQ3neCu1PiCB0
TcVuJ3IFvmx/0Ch8QATrM3FamndWgHTZSOjZbSKoqi8dP4SW4SJ7voPMDSLg
s5HZIR3LwKP+J5FJmwgGjRfns2yWAcfKSv07T4RvLM9Vll8tA5fno4H1U0Tg
/Foz9IvMMzumycLSUkRyH2d/vqu2DJcOqthuHyICC9sfzGuzBFNWU0vH+Ikg
cDqiGESXYKSmJlWXhwi9bBfM7XyWQOL654pnjERwFc0sddRbhq74smcRu/Pw
KVjzgu6vRXifr3e7eGkeNB8ONjeTddboG6vhwu55GBhK9hQLWQJVv4PYp2Ye
bqX1auw/TJ7LdLPnivPI/n8+5X5sW4Su4aqzEdHzQCfoNPVHaAUin1h9aAuY
h+i2DqaqvkVIsGV3NX89D6dPmDwU1V+Cm60Np5ys56H4oZLD6aQlaFZXmU03
m4ex4SszuiVLQPmg667FxXm4+Ol5Ac33JRCyyYo5IjsPRsezbmZEkXltTn23
Q2QezJveGPo4L0HJLV7dcPZ5kJeyCeu/sgj719wf923MwaHyI0OnMxbhgZSi
U+3MHDzhCY4rGSGB6qrjmxcdc6D4e23Q4uMi/By/mLyC52BwYkht8fMCTP06
I3g4ew7OyP6VxuTzO6YGrPHFzkFWtVZLZ/UCXP0AJxvfz0FQ/s4dm8skiFw5
MfXv1RxcD7in6F5K5rGzBo6nbebgA/erxhM5SzD6bNxWwXAOviLrtnmhBdhW
P/vvqeYcQIm1IKcnCRgaeSNJcnMwENc64sK9CE0bsXOBB+dg9tUjkYd1JIjz
tGXX5JyD9IVn+Wv9C9BjyGS2SDkHdSzvo/VTlsDo9H69I5Oz8K6QtnyMbQWS
GpQ/7PTPQv9dGzleRxKMp9rO/qmZhQPTP/H7FnLfk1r9JjNn4eKZhhyJrwvA
l/DPriZxFl5dCwod6iEC1YFHYs+DZ0H60gHKHAvyHCz3SWP0mAXdOv+6uS0i
LAfFp/c4zYJs+mcU9p4ExgXnWFfvzgKh2K2U6h8JtC1tHpddmYVvw3RFxm5L
UCMj5TukPguuz8+LekiSIEnLTcJFZhaaunvyt4dJcC5bjTKGfxZ2LGL3+5P9
byolmbrvmYW5Qfcadz8S6FUTnwZuz0DPcT4jo6AFsFFmkhKZnAG1v4kOVBEk
WHBV8rjfPgPHuc05e2cXIXLy/Rv9yhkI/BtV5ye4ABeVF6d6M2bAxzzszKYz
Od9qNp9yf83Ar6dzAt+OE0EqQVv6dDD5+2pbTp5OIrT615ju85oBAZfzJV6/
SfDMrtDorB3Z/4K95PRVIgSuoA+CRjNAk81WnkiuJ50y/kPfrs5AQkdER68W
CWil8iui1Gag6W74VojbPAieeHWWS3IGdA2+Nj2TnIey1fTjwsIzIKNcxCzs
RgTCdUNVxD4Ddcwb9yz3ECH350nls+vTcCakopaPiwgyts1WvVPT0O1T6DBG
IsK/ydYA/55paHnaUE3KmYfDuRaF2VXT4OkmIqEpS67H0z2MzP+mQarN/sRy
0Bzk7szHHUsh+0vsrxqrXIJ3FRes1MOnIdxn22BAeg6ULv4cF/aZBqFjb5YP
7SMCu6Dwrr3TNLgnuydKrc1CItdFrusPpkGWWLIsZkmCPdwJXqI3pkFY2cVy
H7mOiftD+NfOTQP34UeK5Y/Ic/vtNWLNiWmgtdhGrMrzoJi9fCNFZBqozYLV
02LHQF7W5C4P5zTEtx1hG9+chwAxm2NUlNNwOY+iQuPzPPzw/M+Oem4KHqb0
cl/5tAjCDwQPeA5PgcnF2McvVmfg/eFs29CWKejXef74i8w89PTM6q0UTsHF
qhiJiK1ZcDhIO3I1dQqOX6Sa0P89DXwX1EbG46agjl7ZOSJnDlQPnnpy/csU
nM6UUeQanofz+hrbN19NQX6Es0vw43lYSyk0sHs8BR+JXYGSNkT4QVglp3gK
DM0+8el9mYbIgOKDkYZTcCqOIPlEgjwX4krejJ+dgmxZtZjWpDnIVtPVzpWZ
AqkXyrOmx2fgYVuDjb/YFCxvtP+iPDoHw/evZnVxTsHG1g2li8JTELI3jiaK
agqqud2dzrtMg/EQjUgeaRIgKa9wRWkWHGmeXk0dm4RRi6G2zcOT8PMll/65
zkn4d0uPWiOQCDFNd3WUyibBQ/vZoQTGGTj9fPq4Yc4kSB9PNxHumQLkpLNi
nzwJoWE1VBMzYwAPSDnyYZPgrXi246TvLHDwhsR1vZuE27YKia6Z06DDtc71
02US2Br0I7X4ZyC0wOkdldUkbHByxbxkINdZs9CsgekkUNtFq2qR9/N8epSS
dGkSPnkFk7QvzUBHPM+YtcokiPgvGk64TEGiOmU8/bFJkCqo+9xtOw/OwXSk
cqFJsn6XsGBLmAUtjfZRXg6yvU6td6p+EuROpx2h2J2AB/PRYRy9E7BPqqT4
+cwEnJBGnz5ukfErf3r19EzAx9sFvH+XxqGl5kHa/tYJiL2a0MOAhyFMlvpx
R/kE5NuFpR/ZnYV4i6zZd38mwOF6wYQmmoa4VvC5/nMCEp/ceL+ROAWlexN9
xj9PwNV3Q/2/JGagmGDnxuQzAYfouLozvk9Ay9T+jVeuE3A/IqP+1sQYuDt0
2bpbTYDJ8/wZ/9dTUOtgIHzuxgSswDO9V86ToByxfmD2wgSkl4t4Nu8j15E5
TbIZmgC7Qasn7/PGgQdNU6rLkM/z9kjeSO8UjJOKUyz4J2Dvu8h7L09Pgu/m
hB6ReQLCotn2cE6Pw2apXjv1zjgoP/fmNBgfhxeUl6LSlsfhwizvWGj0KJQy
nTxWNTEOzzKiW4JDJ0AunJWCo2UcvnuJ8DoEjoClu/P7m2XjUC9lHaSkPwn6
+9mU1f6Ow/pBA7pB30mIj06Q/hw/DmZO4sE4ZxSUdN4kvf42Dgbmj4jNlKMg
8Vjk0Ff/ceCdsbORVh2DqpUDcST3cTDq7gYjs3Hg9FzRy340DkpeSQ9NO8fB
zUBe2438/smWSzOF3QRUKfWdvK07DoO3rruFUE7ByzVtgs+5cZgxZ+45kj8B
w5KxkpwK43Cp+3H4PvpxwNo3Z/kPj4N21N3gB+3jkLCSJDLJNQ61xQwJVlGD
sNg0vr1COw7ON8sHrFybkaupxW3HzTHIeG7t952zEVmWkiiY5sego5pPnaqt
Ax34fjrl/sAYLJ0w6VE+1YbCAp2Y+JrGQDfRr+W7QDOyvPUpo6lwDIJm/qsi
fG9GL2USMwsyxiC21DTto0gzUpy4WHElZgzimUpnC2s7kFL4H4PEiDGY0tNX
u9rRhlwyug0V/cfApeTmOSXxNuTvUeV9yW0Mbt5/at6p14DMRu7qK9qNQchP
gjDF50w0tJJ3KdVsDPy+AHPiTAd6+SJS89KVMRgVzmfKzGhGU4EqA3poDLBh
CO0aVwu6cXaTcfHUGGgeiC/oxa3IsPZRa774GHCd4RoLy29A/40mPWzdPwZH
nl3A0cYN6CzvBXsvpjH4d9ioT8miGXG/29kR2h6FRbZokVe9jejv2+9dPMRR
eHRC2zf5djWSE5i8FjgwCjc0m83suopR/SH6GNr2UVB8Kmpz81ormg4V/WFU
MQqXJMU/h0TXIa9vqLEqdxRY7SSV+5JbUCT1y+SR5FFYplJjSdNrQTSTidIn
vo3CnznGy0fqGxAT91Nm2Y+jEDKsJZwhVY9uuL/wi3w5CqCvWhB2qhGtDLX9
p+E0CscP7XH0NetGmeK+7RVWZLzRWmSr0onGiJWuybdGYVNky2wnvQrlbk8R
Ll4ZBau9A79f3G5BlBpzN4RUR2H4rKx0jEcbulMmHq17chTU/IUHb1G1oS6f
sjAj0VFYkn1BbzHWhOh1qWNtuUYhIUvh/eZuG3KfmxU/QjsKa2vWPKKPG9BF
iROKL7ZH4FQz/6Ety3bEGVO4dWZ2BPh9bw3PqWH0d4tvNXNohMzDeRnGX9rQ
i1YWhjvtI1B2lFSgk9GA+KcFGv+WjUBqQa1n9L0utCah//v0vxEwFnJrX1Rt
RVYdcYLPk0bAyvTwE8qZJuR/QmTkXMQIeL4YErN9mIWoSq7IuX8cAXy0/Kjl
80bkm+a2IuQxAj2fPj1MECxEpvq375x1GoHg7Np7bXndqGTmXs6S9Qgs+4dK
hB/uQr1HH1xnMhmBC9qx1kckGlCU6OyLmMsjkL47OBpZi5HPIN9uwrkR4Pnk
0Vow1o4+9PVZ/5UfgUodws3I/xrRW/useK6jZLx2e6RH34nY95w4+mgfeY7Q
dZW9Pd+EBJPMuoF5BMS/3RBmdqtGSqsn31FQjMDlBJWBhCPNSKH4ve+RhWGo
VGnqzw9rQhPUeZcihofh5TGY5m2rRdv6kqYancNwPk/WM1SoFtnjWuvQumG4
UaLy7ChDMUrg4ViJKhiGt25/ZncOlSMDzVRPkfRh4J9IFz0Y3ILY83QZTGKH
4aovhT8ybEJuqUNGM+HDYG9M/NlV34T2c+1sI79hqBGNusVyuBNxzBlcPuMx
DJyK/t5PVzHaEJCx43UchmPTTszVAg2I0bEkhXh/GMYHrtTEnWtAg+8y8uVu
kPFGV5N1oguRe8lLHKE1DGV+9J8ClPNQwlzZOfkzw2CbejxSKqwRJVBaipbI
DgMXV+PSVFkTuhnr/CZdZBjitb+70Js0obXUK8s2PMNwpC5JdN9mIxISNg0Y
3DMM/3Q6qxPflaN4n/qhfsph8Oc3nTAZLEVz/1np0CwPQS61QoQ1eyWin5z0
rx4fgl8xl0Xe1pej1+oL05XtQyCyzDK4hXLQDr+NZ0ftEMysNl99zFuK7CI1
NVMKh+Bfz1vSNXI/f9P4JCqTOQTZx6jlb3u2ongll1+ayUNA9yU9UUfkFgxm
i3rIfhsCCS8fsZPk/+/4fDXY5fMQCPgxMVCGZqCfo172Kp5DUH3rm9mdiBKU
6HvfW+/ZEBgYjJ16N4BRwRFDuxfWQ2AWmB5oLF6F7olU63qZDQGxJIRX0KIR
/fyQ0+OrNwRS911ufztci/YoqKkf1RiCFPXVEkONMhQ7UUazojAEodVej49E
1aLeQNk1fskh8Jq71vr1Qyn6nnzUNPDgEFQkddUWfcYo9jbtxG2OIVj7cJlP
LYa8TpvZLE07BIsXSvWC1kpRbH0fB932IIyEK393CK9Hl1RnTyTMDoJIaoty
34cypOAlIaY+PAj3TqrMpzmWopKB34sabYOQ2sSpai9Izl+j89P16kGQX+J/
4Fhdgu6K08y45A+S+00pfCq7EWnGXf0hkz4Ij+gCjqTT/UYv/6I7AT8HYbds
KDKfUI0UGKMlI0IHYUjjyw5JJB/9mWJiqPUbBDeq4gPh68kohoN1cMdjEP7t
6o1e/VGNlB8qncpwGoS+2efOSqv16GSRsKyv9SCUbGmcjPj6D7Hv9RKsNR4E
IYWhUoOQCKRFrRO9pDcISVb9pu+5i5CNwZffg+qDoFdCrKNIrkI7bw+P7lUe
BJ9sZlXL7Fx0qLVmavP4INg4xX+IWy1DVx9dDdEQGoTSi8PFXiLFSPf436Xr
nINwTGik7at+Mdo989P9F+MghAZ1Mn3gz0MFlOft7+0OANOTDWeNNxiF6ucG
JSwOgM5M0rnnMxUoRFX/ZM3oAFyRYvqZ9qQS+RjlGyd1D4CJ72aO4nI+6j8x
hXpqB6DX95OIOUU5om5Pk/xWQvZXrj586mEFgoFrVGJZA5Cg/R/d5Scl6O3J
x6c8kwdg02PI+qxpNRKF8zRV3wdAOu1gdveJOsRNlGX99HUAoEva1+i/YjSx
56qt5LsBmJV2sD0iVIbqxcVsXr0cgAUkNnK3oAYFt0uIBDkOgCrF4JcnzyuQ
vJBS2TfLAVhufP31NiWga7OeBp+MBmDv3YMfSNfTUF/XuvX1KwNAHBI4/Uqz
AeUGWJQYqg+AhkIC1/2VetTmynQ8UnkANvQYJMTXypFyxwH9lxIDIBg1TC/3
qhKFfvZk23dwAI6AloDgSDlqC1rvCeMcgNYaFsZ5JXL9b1nO3mQcgB8sU5k+
4cVIimCjdWC3H5hO/cvaiaxFjR/3eFVO9INTa+IiRVAR+q76J4ehoR/eRwxH
6D6rQNeOD7syZfYDQaYw22ywHEUZNC3XfusHTR5N0rpZEaK/c3ILe/XDibUf
kytM9cik6TulglM/wOGvN1eE6pFST3jgqlE/7HsRw3cusRTppvcMsF/oh96l
zqRnItXoqEe7upJUPwgLTc0wzBSiohGiBvv+fnildV/gt2YXStv3r1qHoh+4
2ynW7t8pR9XjiQ8j5/pAdOjsFe6aOpTz7M/djNY+GL/pLH9gXwVyOsCauF7U
Bwpfeq4I/ZeE6LX5qEaS+6Akyi/qgEUFsvJNt+j70gfb3/2czQSKUO7dMpnp
F33Q+dNvi/SoDv3R+OH4y6oPutaiOeboyhCHe+DNvZf6gMeJXnh9qxJN9hua
3j3ZB1Licc8FhKpR1u0Xl3hF+kDiu5nM4uA/NKPL80aJvg+SCJLnc7hrkZ+/
VUPdSi+8/e/G9XsqDchmzNjna28vXDfeYj6QWYz002Jn9lb1gt/MXnulsVx0
dVcje/FPL6SXVagR8srRHIuKtkBULyi6OBNDl9KRsqPV0pJPL3zmwzsqTlWo
xzJJ8r1DLyycGanOdcpC9dWnj3kY90JJFqXvo++VyLD0u7aDai9o7FwJP2xU
gVKDyk58F+8F31GT68N3itDXn4LXyvb2wsOkN4GfkxqRTGpI7A5lL0ymjP5Q
pmlCSZnuFqEzPRDFORHtoFOALBdcPgy094BOTh+FM1sZstw7NBxQ2ANah6X3
GmaXoy/LUVI9KT2QMJJoyVFfg57uHPT0DOyBxtG7NiUVGMnWiiIV9x7g9hUt
JvjWI7VK68qihz1Q1WlwqcoqFqnRe3NI6PVA3X2dsk4jcn9d4i84cLoHvniP
8VDslqBvVFSX2MR6YP+U/f5eV0B6rd5DUpw9UO4mcDzqTzHauaVKkt/uhhyp
bZ94mjpk3dDGLzHTDQsPGtmf+lcjjmqGtvX6blBJi8l+w1qHKF9Pjbz41w3+
W+WEdo1idGO54ZBofDf4su5a6VrWIVP1qYu9ft0QyVQaf3Y2BjnKW59keNkN
SWjo8frdauSXx3Qt2bIbmliTeKge5aGSAu5eO/1uyJDIlfgJ1aj5nyo9u0o3
ZHVwJ2f0ZCGKbuvptCPdsLjHOFKqFpBDkoLvOGs3FOUvWMlpVqH2lMKW1fUu
aHKx1qX4WoPYaQUKOEe6QPschVlDTSPK4c8zCavtAoV8i42Zl9WIb6hbgi+/
C+7Jzzb3DXaihOXXnnRxXfBa5npm691aZPOusCQhqAuK1JJGkpuKUUn7F7mA
V11wZeOn8h3mSrTIDkboThessZ/Ll9tsQoYeOzIpel1wu8rbnkqgDDWKT0V4
qHZBgNLXvG8LUeiM9GFWwtEuCPUnoQZBjN6Ud+XOcHRByJMoBo4gjCpJZXU9
u53Q55Vnqn+yEEmcMp4en+6Eizd63tvjZpQsMt5d0tYJZ0g0nL5zjeiNu2vJ
06JOoLKl/ZWzUo3oHT4pDyd0gpZWAel8UBtavR/+LDikE6b2KzSoz1ehJC59
hdA3neDRoiHzq6ECidIWqyc/7ARHRYb79rLZ6KTx/E3+m51QaWcRSq1bhHRF
co1NznWCfEbXtQNBJejVy/23eaU7Ib4p+VRPcSk6ktJEzODphPLkh5kTySXI
xfP82ct0nRC6pH1CVKwIFZmlBaYtdIBQ57lg5cY/KIyJy5mrvwNMcxzDaAPb
kVOQ/AChqgOe/3sTRnutHZk+Hfiqm9oBBwd7RgbjW1Eec78LU0wH7OFbtCee
KUd3LT7eFfbvgGf9PvH+S1Vo0uG8hOKTDnisE/6ce7wKHQ9e+/H9dgesbUd0
Z3pWIbmyeNrvOh3w1stZ1Y65ERWX+h98qtwB4nqB3WL3y1BzPW+hinAHfKeZ
zz1sHIre8YTHfeDqAMkKbfs47Ua0/vWCpvhuO5wvf2BACMVIRRcJnJhoB7nz
N8b9fRvQGJ/VzenmdlASoY/NnW9Ds9euH44qaIeR4t63tD9qURQT54+opHZw
5VFpyBuuR/1lFJeOh5HxtqLpPptVIVYRHulY73aIdZ50MaetRpLaPfMBju0A
vccrVJ/UILo/j3ZGbrXDG7/ZE/hkBio5tRDrr94OBusl8UfFG1GeKfe83ql2
CGHTFSxcqEev+VhjyoTboa/218LvlFykEcDz1IWlHY4UebgYWdcjugWO/Jjl
NojcCROkjUpFhXHkW/5oG8iIGMSr4yLEf/3xR4qGNrifPOclx9mMCqaF7/bn
tIGXbP5ZI31yfw2GfnaKbYOb02cSRtuzUeo1Tk6+r23gVLAuLkVqRoI77J/D
PdogZs5z/dShWtSuyj2l6dAGGgeaDV97kPudxJH7zqgNVEadttarI5FY7YIc
nXobRJtdqF/kbEUpZbRv9WTagOXbgneWSDlae4Ti+YTa4I1SRszavyIkkvdL
IZGxDepWus76H6lBDT/YGE8SW4FruUb3hMlTFKgSORc70goSmbczVW/Xo0mh
kIM8ta0gbeTZ2e7RgrD/5Eh2biucEnQ1kMaFKIdYL7Qa3wpvr1YEtDIVoRLp
u/35n1uhPYntWEZBPaJ89HZSyaMVCNYXKBpqixDdKSchF8tW8GjWvOxkXI/a
GRm/2hq3wq8956rP2t6BuZ6uJ3EXWuEKpZGG/39FqJFw9Fm7dCuYcL+2SXxY
iE7GnPB2EGsFm9643+2+pcioRPRVLnMr5HgPfGI8loGcTx7z0VxrgavWiUN8
2+Woh9mBl228Bbx46LObL/mCTjfHiZCWFmiLOpl5QzoDubOtn5eDFrBHpyQC
7GoR36qldVVCCwgkcA/lxf9DQ6aC2weCWqDYPOzMX94m1Gg7ud/tbQtcsqm/
foghBOVGpblrPW6B1x/3aFceCkC37+X0C5u1wA2uz92yD62QVP/lgNBLLZDL
6he9QFGHHHWvUTefboFDH05eM71dhp4HnJcXONwC6YbJbAYpGahK6m/rUc4W
+CzGyXDwSjLq23dzJZCqBXj2S0OTQzXSmrLnHZ5phm+X7qweM4xDjV9bKqO7
mkGWgeHoyulGdKz0xafc8mYwbPCPEP7wD3VJ/1jb+NsM1NQhtbPPC9H8jNhZ
85hmuNkzwM/0LBgdqinsA59mCHbSOd3hn44m+e5qWLk2w/CwuvS82RP02zj9
K79lM6jLWygske8TdjzP3tEbN4MQf/7qq58YxV06/x/N2WbQ+WT1z0MV0Cjp
kqSnVDNMheoiNshCfPodm9lCzSCXIPeqsDcN7TnDMmNGTd7PR/qxmn8WMmn5
18m10ASKfX3XMi5hZDATFdgy3ARfnxIvMlwuRAHThLmd5ibQKGI7GJT4E/2Y
TznwprAJmI0OHj0w8Bl1sznqLyU3QeYxMyXKoXS0KW1jzBbRBHYfvoV+FM5B
MiVhpSffN8EDlreSJYyAgrUyZu64NYGBTsKKxeEi9OmQ5ZUfJk2Q91K98t67
QvSUMSmazaAJDA8xLwvEFKGP7kWV91Sa4O/zvldJwvko5aPso83DTfDuwWeR
/Q6v0Iq4e+b2/ia4fXBbj1UVoyv/ZCmd6JqgtbTk2ceVbHQ+7LrmymwjiI7M
GDbOJaINq/B+75FGeMxDfY0iOwV9E/YswA2NQOzI53dbKkA5b+JS0zIbYeX8
xfq1oCy0LEgveeBbI9hzT+8s/61BJv1/apdfNUK8r2eSjHYlcmZoLj/q1Ail
5XfULnQWItMOn9U8i0Y4EX18/I3jd5Q6dhQbX20EOb+mbAJFPBotOKFyX7kR
ehbs338yzEOCZ139nos3Ql/LMe7dlxgJhd49S2Inx5cs/2z4UDZyXfmxqbne
AI3pXiyvFspRrHxQSPtgA7jDJKsh+X5UapYv+C+hAZxJFbX1X4tR7dvb7gph
DcDSkGhiQEhFOSSlZUGfBrBvTen/EvcHaZIs2ZSdGyC+uyfnYx1GqgnvrXTv
N8CII1Mmn2YuUk95JmRo0AC2AS9/C5bmI0e6Nx331BpAWTAo2c0co5kp6bdL
+xpgtoZhX5p3OXosuvrlPHsDtAtd/EK5U4LqDvzV1y6th2tgfP9YewZS/3ag
Yl98PWg7HPwi34HR225G/fpX9dCv8u27a+A/1PK0E0ncrAerfX+Z278BUrhe
KLeqUg9NbJKPve2KUGBcr6XIQh2Q9HYWdr+UoLl1blmeT3Xw0vLxtSW2SpTM
KjL6QKsO2OcfFnB5FSGLrj6NO4froLLo+48XPwCJ7/3sOrBRC3e4jzpbvyhE
BVYNzuyDtZBle24tqaQI8QJr9c6fWnj0ZiPcbKQENVXYUEWa18KxwIdlxNoK
JCTgrRewUQPK0jvyZ/xqUTr7obMNXTXgsXJf2Fa3FMVJC7illNYAw7tAOV/j
MrTI/J1tX1QNYN3EtGapCjQTk5EY6lwDIjeffxVLLUUXjM4r7ljVwNO7bMqV
pVVod77VfJ94DQg3aF50oaxELnb3Ljg2VUOLe5/J0eEGFK0s9t3+TjVcPPzA
90l0BTpmaPQ25EI1KB3xGPi7W4n23/qZ8F60Gmp+Nb1+FFONDuoEieyZrQKb
B7Plqb8r0cMLxNWrMVUQKBetX0S+D9KuubbE7VTCAQ2jY7ZnqpF3+ME3XguV
8MUh6fOCUjn6W3jW0r61EnYKf3SLq9Yi53MO96cTKkEwXbS61qgenXn17UuC
bSWofxnMvrPVgBjyHDIiP1VAqntsmum7OqTwwSu32b0C7DeEDCqHq1DKjbs6
8rcrQHG7U7+1twbpJvQkLchUwLRF3Tfbl41IQlh4/O+hcshIuyj5Z7sB+ccK
D5lylAOFcfDrUcc6VCi3w/CdWAZnA9i//+ZpQNX3NUeTi0th+0mxq/nrJlQ6
GZ0inFgKql8yxOmlm5HRryPfaK1LQDLj+H0Rzhakrs6SMGFaAlJd+VFd0k2o
wPjqoZusxTBa9N+V1MBW9D+Lrss7
          
          "]]}, {}}}, {}, {}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.004]], 
         PointBox[CompressedData["
1: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
aZyHX3YnNp/hKwGSTQlaU+fgfww6ikI=
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-4.30089531996961, -11.620795820397175`}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-11.42945936728352, 0.4334007257629166}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-4.30089531996961, -11.620795820397175`}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.2370185595261045`, -0.14890589114177105`}, \
{-11.42945936728352, 0.4334007257629166}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\" \\!\\(\\*FractionBox[\\(\[Delta]kess \\((solved\\\\ here)\\) - \
\[Delta]kess \\((Gev\\\\ )\\)\\), \\(\[Delta]kess \\((Gev)\\)\\)]\\)  \
z=10\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\" \\!\\(\\*FractionBox[\\(\[CapitalEta]\[Pi] \\((solved\\\\ here)\
\\) - \[CapitalEta]\[Pi] \\((Gev\\\\ )\\)\\), \\(\[CapitalEta]\[Pi] \
\\((Gev)\\)\\)]\\)  z=10\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.14400000000000002`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.004`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.736241288121126*^9, {3.736241348490905*^9, 3.736241387437832*^9}, {
   3.736241468551165*^9, 3.736241481822442*^9}, {3.7362416551335573`*^9, 
   3.736241702793138*^9}, {3.736241802003656*^9, 3.736241839175735*^9}, 
   3.736248069159151*^9},ExpressionUUID->"75e46fd3-aeeb-4b4f-98ad-\
8ff2760cde4c"]
},
WindowSize->{1352, 898},
WindowMargins->{{35, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 25652, 610, 1326, "Input",ExpressionUUID->"b9555473-15b0-405e-bad4-d386c6f55d0d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[26235, 634, 18499, 424, 1167, "Input",ExpressionUUID->"cd658157-41ad-4b89-b57f-6bcaa6d85197",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[44737, 1060, 17697, 355, 616, "Input",ExpressionUUID->"6eb28401-a9b3-4a65-ae60-b9c66c052b0b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[62449, 1418, 640, 20, 37, "Input",ExpressionUUID->"7ffdf725-31ac-4f94-a146-8a526b6f9ef2"],
Cell[CellGroupData[{
Cell[63114, 1442, 17688, 388, 498, "Input",ExpressionUUID->"70dadc0d-51fe-4df1-8944-6c354f466484",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[80805, 1832, 26519, 589, 1113, "Input",ExpressionUUID->"245c9847-84a9-4f6a-843e-be105da0c1e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[107339, 2424, 49563, 883, 265, "Output",ExpressionUUID->"d5427431-be86-4d3e-be9c-9576a0318356"],
Cell[156905, 3309, 49544, 884, 267, "Output",ExpressionUUID->"c8278e26-343e-462c-9f73-eb58b27caddf"],
Cell[206452, 4195, 49883, 889, 265, "Output",ExpressionUUID->"75e46fd3-aeeb-4b4f-98ad-8ff2760cde4c"]
}
]
*)

